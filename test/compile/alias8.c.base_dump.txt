
==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR10(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
MD7 -- base:VAR6(y):global,,addr_taken,align(4),i32,decl:'int y ' -- ofst:0 -- size:4
MD8 -- base:VAR7(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD9 -- base:VAR11(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4
MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound
MD12 -- base:VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l ' -- ofst:0 -- size:4
MD13 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:1
==---- DUMP POINT-TO OUT-SET (FLOW SENSITIVE) 'foo' ----==
--- BB3 ---
MD1 -- PT_SET: MD1,
MD2 -- PT_SET: MD2,MD3,
MD3 -- PT_SET: MD2,MD3,
MD4 -- NO PT
MD5 -- NO PT
MD6 -- NO PT
MD7 -- NO PT
MD8 -- NO PT
MD9 -- NO PT
MD10 -- NO PT
MD11 -- NO PT
MD12 -- NO PT
MD13 -- NO PT
--- BB1 ---
MD1 -- PT_SET: MD1,
MD2 -- PT_SET: MD2,MD3,
MD3 -- PT_SET: MD2,MD3,
MD4 -- NO PT
MD5 -- PT_SET: MD2,MD3,MD10,MD11,
MD6 -- NO PT
MD7 -- NO PT
MD8 -- NO PT
MD9 -- NO PT
MD10 -- NO PT
MD11 -- NO PT
MD12 -- PT_SET: MD10,
MD13 -- NO PT
==--- DUMP IR_AA 'foo' ----==
==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR10(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
MD7 -- base:VAR6(y):global,,addr_taken,align(4),i32,decl:'int y ' -- ofst:0 -- size:4
MD8 -- base:VAR7(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD9 -- base:VAR11(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4
MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound
MD12 -- base:VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l ' -- ofst:0 -- size:4
MD13 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:1
---- MAY-POINT-TO SET :MD2,MD3,MD10,MD11
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4
MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound
---- IR POINT-TO:
--- BB3 ---
  ---- MD2MDSet:
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- NO PT
  MD6 -- NO PT
  MD7 -- NO PT
  MD8 -- NO PT
  MD9 -- NO PT
  MD10 -- NO PT
  MD11 -- NO PT
  MD12 -- NO PT
  MD13 -- NO PT
  ---- IR POINT-TO:
--- BB1 ---
  ---- MD2MDSet:
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,MD10,MD11,
  MD6 -- NO PT
  MD7 -- NO PT
  MD8 -- NO PT
  MD9 -- NO PT
  MD10 -- NO PT
  MD11 -- NO PT
  MD12 -- PT_SET: MD10,
  MD13 -- NO PT
  ---- IR POINT-TO:
  ------  

  [7]    l = &i;

  st:*<4> 'l' decl:int * l  id:4 attachinfo:Dbx      
      lda:*<4> 'i' decl:int i  id:3 attachinfo:Dbx
  LHS:
  st:*<4> 'l' decl:int * l  id:4 attachinfo:Dbx
  	  MD12 -- base:VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l ' -- ofst:0 -- size:4
  		POINT TO:
  			MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4

  RHS:
  >> MDSet DETAIL:
  ------  

  [10]    *p = 20;

  ist:i8 id:8 attachinfo:Dbx      
      ld:*<1> 'p' decl:char * p  base id:6 attachinfo:Dbx      
      intconst:i32 20|0x14 id:7 attachinfo:Dbx
  LHS:
  ist:i8 id:8 attachinfo:Dbx
  	  MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound

  	  MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound

  	  MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound
  		POINT TO:----
  	  MD13 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:1
  		POINT TO:----
  RHS:
  >> MDSet DETAIL:
  ld:*<1> 'p' decl:char * p  id:6 attachinfo:Dbx
  	  MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4
			MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound

  ------  

  [11]    return x;

  return id:10 attachinfo:Dbx
      ld:i32 'x' decl:int x  id:2 attachinfo:Dbx
  
  ld:i32 'x' decl:int x  id:2 attachinfo:Dbx
  	  MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
  		POINT TO:----
  >> MDSet DETAIL:
  ld:i32 'x' decl:int x  id:2 attachinfo:Dbx
  	  MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
  		POINT TO:----

==---- DUMP IR_DU_MGR: IR REFERENCE 'foo' ----==

==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR10(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
MD7 -- base:VAR6(y):global,,addr_taken,align(4),i32,decl:'int y ' -- ofst:0 -- size:4
MD8 -- base:VAR7(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD9 -- base:VAR11(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4
MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound
MD12 -- base:VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l ' -- ofst:0 -- size:4
MD13 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:1
==----==
RegionMayDef(OuterRegion):MD2,MD3
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
RegionMayUse(OuterRegion):MD2,MD5,MD6
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
--- BB3 ---
--- BB1 ---
    st:*<4> 'l' decl:int * l  id:4 attachinfo:Dbx
    MMD12
      lda:*<4> 'i' decl:int i  id:3 attachinfo:Dbx
    ist:i8 id:8 attachinfo:Dbx
     : MD2,MD3,MD10,MD11,MD13
      ld:*<1> 'p' decl:char * p  id:6 attachinfo:Dbx
      MMD5 : MD2
    return id:10 attachinfo:Dbx
      ld:i32 'x' decl:int x  id:2 attachinfo:Dbx
      MMD6 : MD2
==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR10(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
MD7 -- base:VAR6(y):global,,addr_taken,align(4),i32,decl:'int y ' -- ofst:0 -- size:4
MD8 -- base:VAR7(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD9 -- base:VAR11(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4
MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound
MD12 -- base:VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l ' -- ofst:0 -- size:4
MD13 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:1
==---- DUMP POINT-TO OUT-SET (FLOW-INSENSITIVE) 'foo' ----==
MD1 -- PT_SET: MD1,
MD2 -- PT_SET: MD2,MD3,
MD3 -- PT_SET: MD2,MD3,
MD4 -- NO PT
MD5 -- PT_SET: MD2,MD3,MD10,MD11,
MD6 -- NO PT
MD7 -- NO PT
MD8 -- NO PT
MD9 -- NO PT
MD10 -- NO PT
MD11 -- NO PT
MD12 -- PT_SET: MD10,
MD13 -- NO PT
==--- DUMP IR_AA 'foo' ----==
==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR10(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
MD7 -- base:VAR6(y):global,,addr_taken,align(4),i32,decl:'int y ' -- ofst:0 -- size:4
MD8 -- base:VAR7(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD9 -- base:VAR11(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4
MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound
MD12 -- base:VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l ' -- ofst:0 -- size:4
MD13 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:1
---- MAY-POINT-TO SET :MD2,MD3,MD10,MD11
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4
MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound
---- IR POINT-TO:
--- BB3 ---
  ---- MD2MDSet:
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,MD10,MD11,
  MD6 -- NO PT
  MD7 -- NO PT
  MD8 -- NO PT
  MD9 -- NO PT
  MD10 -- NO PT
  MD11 -- NO PT
  MD12 -- PT_SET: MD10,
  MD13 -- NO PT
  ---- IR POINT-TO:
--- BB1 ---
  ---- MD2MDSet:
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,MD10,MD11,
  MD6 -- NO PT
  MD7 -- NO PT
  MD8 -- NO PT
  MD9 -- NO PT
  MD10 -- NO PT
  MD11 -- NO PT
  MD12 -- PT_SET: MD10,
  MD13 -- NO PT
  ---- IR POINT-TO:
  ------  

  [7]    l = &i;

  st:*<4> 'l' decl:int * l  id:4 attachinfo:Dbx,MDSSA      
      lda:*<4> 'i' decl:int i  id:3 attachinfo:Dbx
  LHS:
  st:*<4> 'l' decl:int * l  id:4 attachinfo:Dbx,MDSSA
  	  MD12 -- base:VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l ' -- ofst:0 -- size:4
  		POINT TO:
  			MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4

  RHS:
  >> MDSet DETAIL:
  ------  

  [10]    *p = 20;

  ist:i8 id:8 attachinfo:Dbx,MDSSA      
      ld:*<1> 'p' decl:char * p  base id:6 attachinfo:Dbx,MDSSA      
      intconst:i32 20|0x14 id:7 attachinfo:Dbx
  LHS:
  ist:i8 id:8 attachinfo:Dbx,MDSSA
  	  MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound

  	  MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound

  	  MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound
  		POINT TO:----
  	  MD13 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:1
  		POINT TO:----
  RHS:
  >> MDSet DETAIL:
  ld:*<1> 'p' decl:char * p  id:6 attachinfo:Dbx,MDSSA
  	  MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4
			MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound

  ------  

  [11]    return x;

  return id:10 attachinfo:Dbx
      ld:i32 'x' decl:int x  id:2 attachinfo:Dbx,MDSSA
  
  ld:i32 'x' decl:int x  id:2 attachinfo:Dbx,MDSSA
  	  MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
  		POINT TO:----
  >> MDSet DETAIL:
  ld:i32 'x' decl:int x  id:2 attachinfo:Dbx,MDSSA
  	  MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
  		POINT TO:----

==---- DUMP IR_DU_MGR: IR REFERENCE 'foo' ----==

==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR10(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
MD7 -- base:VAR6(y):global,,addr_taken,align(4),i32,decl:'int y ' -- ofst:0 -- size:4
MD8 -- base:VAR7(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD9 -- base:VAR11(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4
MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound
MD12 -- base:VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l ' -- ofst:0 -- size:4
MD13 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:1
==----==
RegionMayDef(OuterRegion):MD2,MD3
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
RegionMayUse(OuterRegion):MD2,MD5,MD6
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
--- BB3 ---
--- BB1 ---
    st:*<4> 'l' decl:int * l  id:4 attachinfo:Dbx,MDSSA
    MMD12
      lda:*<4> 'i' decl:int i  id:3 attachinfo:Dbx
    ist:i8 id:8 attachinfo:Dbx,MDSSA
     : MD2,MD3,MD10,MD11,MD13
      ld:*<1> 'p' decl:char * p  id:6 attachinfo:Dbx,MDSSA
      MMD5 : MD2
    return id:10 attachinfo:Dbx
      ld:i32 'x' decl:int x  id:2 attachinfo:Dbx,MDSSA
      MMD6 : MD2
==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR10(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
MD7 -- base:VAR6(y):global,,addr_taken,align(4),i32,decl:'int y ' -- ofst:0 -- size:4
MD8 -- base:VAR7(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD9 -- base:VAR11(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4
MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound
MD12 -- base:VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l ' -- ofst:0 -- size:4
MD13 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:1

==---- DUMP IR_DU_MGR DU CHAIN of 'foo' ----==

--- BB3 ---
--- BB1 ---

[7]    l = &i;

st:*<4> 'l' decl:int * l  id:4 attachinfo:Dbx,MDSSA    
    lda:*<4> 'i' decl:int i  id:3 attachinfo:Dbx

	>>st(id:4) DEFREF:MMD12
	  USE-EXP LIST:


[10]    *p = 20;

ist:i8 id:8 attachinfo:Dbx,MDSSA    
    ld:*<1> 'p' decl:char * p  base id:6 attachinfo:Dbx,MDSSA    
    intconst:i32 20|0x14 id:7 attachinfo:Dbx

	>>ist(id:8) DEFREF:MD2,MD3,MD10,MD11,MD13
	  USE-EXP LIST:
	>>ld(id:6) USEREF:MMD5,MD2
	  DEF-STMT LIST:


[11]    return x;

return id:10 attachinfo:Dbx
    ld:i32 'x' decl:int x  id:2 attachinfo:Dbx,MDSSA

	>>ld(id:2) USEREF:MMD6,MD2
	  DEF-STMT LIST:

==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR10(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
MD7 -- base:VAR6(y):global,,addr_taken,align(4),i32,decl:'int y ' -- ofst:0 -- size:4
MD8 -- base:VAR7(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD9 -- base:VAR11(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4
MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound
MD12 -- base:VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l ' -- ofst:0 -- size:4
MD13 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:1
==---- DUMP POINT-TO OUT-SET (FLOW-INSENSITIVE) 'foo' ----==
MD1 -- PT_SET: MD1,
MD2 -- PT_SET: MD2,MD3,
MD3 -- PT_SET: MD2,MD3,
MD4 -- NO PT
MD5 -- PT_SET: MD2,MD3,MD10,MD11,
MD6 -- NO PT
MD7 -- NO PT
MD8 -- NO PT
MD9 -- NO PT
MD10 -- NO PT
MD11 -- NO PT
MD12 -- PT_SET: MD10,
MD13 -- NO PT
==--- DUMP IR_AA 'foo' ----==
==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR10(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
MD7 -- base:VAR6(y):global,,addr_taken,align(4),i32,decl:'int y ' -- ofst:0 -- size:4
MD8 -- base:VAR7(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD9 -- base:VAR11(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4
MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound
MD12 -- base:VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l ' -- ofst:0 -- size:4
MD13 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:1
---- MAY-POINT-TO SET :MD2,MD3,MD10,MD11
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4
MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound
---- IR POINT-TO:
--- BB3 ---
  ---- MD2MDSet:
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,MD10,MD11,
  MD6 -- NO PT
  MD7 -- NO PT
  MD8 -- NO PT
  MD9 -- NO PT
  MD10 -- NO PT
  MD11 -- NO PT
  MD12 -- PT_SET: MD10,
  MD13 -- NO PT
  ---- IR POINT-TO:
--- BB1 ---
  ---- MD2MDSet:
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,MD10,MD11,
  MD6 -- NO PT
  MD7 -- NO PT
  MD8 -- NO PT
  MD9 -- NO PT
  MD10 -- NO PT
  MD11 -- NO PT
  MD12 -- PT_SET: MD10,
  MD13 -- NO PT
  ---- IR POINT-TO:
  ------  

  [7]    l = &i;

  st:*<4> 'l' decl:int * l  id:4 attachinfo:Dbx,MDSSA      
      lda:*<4> 'i' decl:int i  id:3 attachinfo:Dbx
  LHS:
  st:*<4> 'l' decl:int * l  id:4 attachinfo:Dbx,MDSSA
  	  MD12 -- base:VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l ' -- ofst:0 -- size:4
  		POINT TO:
  			MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4

  RHS:
  >> MDSet DETAIL:
  ------  

  [10]    *p = 20;

  ist:i8 id:8 attachinfo:Dbx,MDSSA      
      ld:*<1> 'p' decl:char * p  base id:6 attachinfo:Dbx,MDSSA      
      intconst:i32 20|0x14 id:7 attachinfo:Dbx
  LHS:
  ist:i8 id:8 attachinfo:Dbx,MDSSA
  	  MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound

  	  MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound

  	  MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound
  		POINT TO:----
  	  MD13 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:1
  		POINT TO:----
  RHS:
  >> MDSet DETAIL:
  ld:*<1> 'p' decl:char * p  id:6 attachinfo:Dbx,MDSSA
  	  MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4
			MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound

  ------  

  [11]    return x;

  return id:10 attachinfo:Dbx
      ld:i32 'x' decl:int x  id:2 attachinfo:Dbx,MDSSA
  
  ld:i32 'x' decl:int x  id:2 attachinfo:Dbx,MDSSA
  	  MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
  		POINT TO:----
  >> MDSet DETAIL:
  ld:i32 'x' decl:int x  id:2 attachinfo:Dbx,MDSSA
  	  MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
  		POINT TO:----

==---- DUMP IR_DU_MGR: IR REFERENCE 'foo' ----==

==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR10(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
MD7 -- base:VAR6(y):global,,addr_taken,align(4),i32,decl:'int y ' -- ofst:0 -- size:4
MD8 -- base:VAR7(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD9 -- base:VAR11(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4
MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound
MD12 -- base:VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l ' -- ofst:0 -- size:4
MD13 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:1
==----==
RegionMayDef(OuterRegion):MD2,MD3
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
RegionMayUse(OuterRegion):MD2,MD5,MD6
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
--- BB3 ---
--- BB1 ---
    st:*<4> 'l' decl:int * l  id:4 attachinfo:Dbx,MDSSA
    MMD12
      lda:*<4> 'i' decl:int i  id:3 attachinfo:Dbx
    ist:i8 id:8 attachinfo:Dbx,MDSSA
     : MD2,MD3,MD10,MD11,MD13
      ld:*<1> 'p' decl:char * p  id:6 attachinfo:Dbx,MDSSA
      MMD5 : MD2
    return id:10 attachinfo:Dbx
      ld:i32 'x' decl:int x  id:2 attachinfo:Dbx,MDSSA
      MMD6 : MD2
==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR10(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
MD7 -- base:VAR6(y):global,,addr_taken,align(4),i32,decl:'int y ' -- ofst:0 -- size:4
MD8 -- base:VAR7(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD9 -- base:VAR11(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4
MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound
MD12 -- base:VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l ' -- ofst:0 -- size:4
MD13 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:1

==---- DUMP IR_DU_MGR DU CHAIN of 'foo' ----==

--- BB3 ---
--- BB1 ---

[7]    l = &i;

st:*<4> 'l' decl:int * l  id:4 attachinfo:Dbx,MDSSA    
    lda:*<4> 'i' decl:int i  id:3 attachinfo:Dbx

	>>st(id:4) DEFREF:MMD12
	  USE-EXP LIST:


[10]    *p = 20;

ist:i8 id:8 attachinfo:Dbx,MDSSA    
    ld:*<1> 'p' decl:char * p  base id:6 attachinfo:Dbx,MDSSA    
    intconst:i32 20|0x14 id:7 attachinfo:Dbx

	>>ist(id:8) DEFREF:MD2,MD3,MD10,MD11,MD13
	  USE-EXP LIST:ld(id:2)
	>>ld(id:6) USEREF:MMD5,MD2
	  DEF-STMT LIST:


[11]    return x;

return id:10 attachinfo:Dbx
    ld:i32 'x' decl:int x  id:2 attachinfo:Dbx,MDSSA

	>>ld(id:2) USEREF:MMD6,MD2
	  DEF-STMT LIST:ist(id:8)

==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR10(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
MD7 -- base:VAR6(y):global,,addr_taken,align(4),i32,decl:'int y ' -- ofst:0 -- size:4
MD8 -- base:VAR7(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD9 -- base:VAR11(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4
MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound
MD12 -- base:VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l ' -- ofst:0 -- size:4
MD13 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:1
==---- DUMP POINT-TO OUT-SET (FLOW SENSITIVE) '.program' ----==
--- BB3 ---
MD1 -- PT_SET: MD1,
MD2 -- PT_SET: MD2,MD3,
MD3 -- PT_SET: MD2,MD3,
MD4 -- NO PT
MD5 -- PT_SET: MD2,MD3,
MD6 -- NO PT
MD7 -- NO PT
MD8 -- NO PT
MD9 -- NO PT
MD10 -- NO PT
MD11 -- NO PT
MD12 -- NO PT
MD13 -- NO PT
--- BB1 ---
MD1 -- PT_SET: MD1,
MD2 -- PT_SET: MD2,MD3,
MD3 -- PT_SET: MD2,MD3,
MD4 -- NO PT
MD5 -- PT_SET: MD2,MD3,
MD6 -- NO PT
MD7 -- NO PT
MD8 -- NO PT
MD9 -- NO PT
MD10 -- NO PT
MD11 -- NO PT
MD12 -- NO PT
MD13 -- NO PT
==--- DUMP IR_AA '.program' ----==
==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR10(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
MD7 -- base:VAR6(y):global,,addr_taken,align(4),i32,decl:'int y ' -- ofst:0 -- size:4
MD8 -- base:VAR7(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD9 -- base:VAR11(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4
MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound
MD12 -- base:VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l ' -- ofst:0 -- size:4
MD13 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:1
---- MAY-POINT-TO SET :MD2,MD3
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
---- IR POINT-TO:
--- BB3 ---
  ---- MD2MDSet:
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- NO PT
  MD7 -- NO PT
  MD8 -- NO PT
  MD9 -- NO PT
  MD10 -- NO PT
  MD11 -- NO PT
  MD12 -- NO PT
  MD13 -- NO PT
  ---- IR POINT-TO:
--- BB1 ---
  ---- MD2MDSet:
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- NO PT
  MD7 -- NO PT
  MD8 -- NO PT
  MD9 -- NO PT
  MD10 -- NO PT
  MD11 -- NO PT
  MD12 -- NO PT
  MD13 -- NO PT
  ---- IR POINT-TO:
  ------  
  region 'foo',id:2 id:1
  

==---- DUMP IR_DU_MGR: IR REFERENCE '.program' ----==

==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR10(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
MD7 -- base:VAR6(y):global,,addr_taken,align(4),i32,decl:'int y ' -- ofst:0 -- size:4
MD8 -- base:VAR7(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD9 -- base:VAR11(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4
MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound
MD12 -- base:VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l ' -- ofst:0 -- size:4
MD13 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:1
==----==
RegionMayDef(OuterRegion):
RegionMayUse(OuterRegion):MD2
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
--- BB3 ---
--- BB1 ---
    region 'foo',id:2 id:1
==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR10(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
MD7 -- base:VAR6(y):global,,addr_taken,align(4),i32,decl:'int y ' -- ofst:0 -- size:4
MD8 -- base:VAR7(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD9 -- base:VAR11(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4
MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound
MD12 -- base:VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l ' -- ofst:0 -- size:4
MD13 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:1
==---- DUMP POINT-TO OUT-SET (FLOW-INSENSITIVE) '.program' ----==
MD1 -- PT_SET: MD1,
MD2 -- PT_SET: MD2,MD3,
MD3 -- PT_SET: MD2,MD3,
MD4 -- NO PT
MD5 -- PT_SET: MD2,MD3,
MD6 -- NO PT
MD7 -- NO PT
MD8 -- NO PT
MD9 -- NO PT
MD10 -- NO PT
MD11 -- NO PT
MD12 -- NO PT
MD13 -- NO PT
==--- DUMP IR_AA '.program' ----==
==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR10(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
MD7 -- base:VAR6(y):global,,addr_taken,align(4),i32,decl:'int y ' -- ofst:0 -- size:4
MD8 -- base:VAR7(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD9 -- base:VAR11(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4
MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound
MD12 -- base:VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l ' -- ofst:0 -- size:4
MD13 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:1
---- MAY-POINT-TO SET :MD2,MD3
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
---- IR POINT-TO:
--- BB3 ---
  ---- MD2MDSet:
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- NO PT
  MD7 -- NO PT
  MD8 -- NO PT
  MD9 -- NO PT
  MD10 -- NO PT
  MD11 -- NO PT
  MD12 -- NO PT
  MD13 -- NO PT
  ---- IR POINT-TO:
--- BB1 ---
  ---- MD2MDSet:
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- NO PT
  MD7 -- NO PT
  MD8 -- NO PT
  MD9 -- NO PT
  MD10 -- NO PT
  MD11 -- NO PT
  MD12 -- NO PT
  MD13 -- NO PT
  ---- IR POINT-TO:
  ------  
  region 'foo',id:2 id:1
  

==---- DUMP IR_DU_MGR: IR REFERENCE '.program' ----==

==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR10(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
MD7 -- base:VAR6(y):global,,addr_taken,align(4),i32,decl:'int y ' -- ofst:0 -- size:4
MD8 -- base:VAR7(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD9 -- base:VAR11(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4
MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound
MD12 -- base:VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l ' -- ofst:0 -- size:4
MD13 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:1
==----==
RegionMayDef(OuterRegion):
RegionMayUse(OuterRegion):MD2
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
--- BB3 ---
--- BB1 ---
    region 'foo',id:2 id:1
==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR10(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
MD7 -- base:VAR6(y):global,,addr_taken,align(4),i32,decl:'int y ' -- ofst:0 -- size:4
MD8 -- base:VAR7(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD9 -- base:VAR11(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4
MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound
MD12 -- base:VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l ' -- ofst:0 -- size:4
MD13 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:1

==---- DUMP IR_DU_MGR DU CHAIN of '.program' ----==

--- BB3 ---
--- BB1 ---
region 'foo',id:2 id:1
    region-info:
    ==---- REGION(2):foo:int foo () ----==
    VARIABLES:2
      VAR8(i):local,,addr_taken,align(4),i32,decl:'int i '        
        MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound        
        MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4        
        MD13 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:1
      VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l '        
        MD12 -- base:VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l ' -- ofst:0 -- size:4
    RegionMayDef(OuterRegion):MD2,MD3
    MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
    MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
    RegionMayUse(OuterRegion):MD2,MD5,MD6
    MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
    MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
    MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
    'foo' use 7KB memory
    The number of IR Total:11, id:0(0.0)%, ld:2(18.2)%, st:1(9.1)%, lda:1(9.1)%,call:0(0.0)%, icall:0(0.0)%, pr:0(0.0)%, stpr:0(0.0)%, ist:1(9.1)%,bin:0(0.0)%, una:0(0.0)%
    ==---- DUMP IRBBList region 'foo' ----==
    ----- BB3 ------
    ATTR:entry_bb 
    STMT NUM:0
    
    ----- BB1 ------
    ATTR:fall_through 
    STMT NUM:3

       [7]    l = &i;

       st:*<4> 'l' decl:int * l  id:4 attachinfo:Dbx,MDSSA           
           lda:*<4> 'i' decl:int i  id:3 attachinfo:Dbx

       [10]    *p = 20;

       ist:i8 id:8 attachinfo:Dbx,MDSSA           
           ld:*<1> 'p' decl:char * p  base id:6 attachinfo:Dbx,MDSSA           
           intconst:i32 20|0x14 id:7 attachinfo:Dbx

       [11]    return x;

       return id:10 attachinfo:Dbx
           ld:i32 'x' decl:int x  id:2 attachinfo:Dbx,MDSSA
    

	>>region(id:1) DEFREF:
	  USE-EXP LIST:

==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR10(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
MD7 -- base:VAR6(y):global,,addr_taken,align(4),i32,decl:'int y ' -- ofst:0 -- size:4
MD8 -- base:VAR7(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD9 -- base:VAR11(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4
MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound
MD12 -- base:VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l ' -- ofst:0 -- size:4
MD13 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:1
==---- DUMP POINT-TO OUT-SET (FLOW-INSENSITIVE) '.program' ----==
MD1 -- PT_SET: MD1,
MD2 -- PT_SET: MD2,MD3,
MD3 -- PT_SET: MD2,MD3,
MD4 -- NO PT
MD5 -- PT_SET: MD2,MD3,
MD6 -- NO PT
MD7 -- NO PT
MD8 -- NO PT
MD9 -- NO PT
MD10 -- NO PT
MD11 -- NO PT
MD12 -- NO PT
MD13 -- NO PT
==--- DUMP IR_AA '.program' ----==
==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR10(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
MD7 -- base:VAR6(y):global,,addr_taken,align(4),i32,decl:'int y ' -- ofst:0 -- size:4
MD8 -- base:VAR7(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD9 -- base:VAR11(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4
MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound
MD12 -- base:VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l ' -- ofst:0 -- size:4
MD13 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:1
---- MAY-POINT-TO SET :MD2,MD3
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
---- IR POINT-TO:
--- BB3 ---
  ---- MD2MDSet:
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- NO PT
  MD7 -- NO PT
  MD8 -- NO PT
  MD9 -- NO PT
  MD10 -- NO PT
  MD11 -- NO PT
  MD12 -- NO PT
  MD13 -- NO PT
  ---- IR POINT-TO:
--- BB1 ---
  ---- MD2MDSet:
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- NO PT
  MD7 -- NO PT
  MD8 -- NO PT
  MD9 -- NO PT
  MD10 -- NO PT
  MD11 -- NO PT
  MD12 -- NO PT
  MD13 -- NO PT
  ---- IR POINT-TO:
  ------  
  region 'foo',id:2 id:1
  

==---- DUMP IR_DU_MGR: IR REFERENCE '.program' ----==

==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR10(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
MD7 -- base:VAR6(y):global,,addr_taken,align(4),i32,decl:'int y ' -- ofst:0 -- size:4
MD8 -- base:VAR7(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD9 -- base:VAR11(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4
MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound
MD12 -- base:VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l ' -- ofst:0 -- size:4
MD13 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:1
==----==
RegionMayDef(OuterRegion):
RegionMayUse(OuterRegion):MD2
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
--- BB3 ---
--- BB1 ---
    region 'foo',id:2 id:1
==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR10(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
MD7 -- base:VAR6(y):global,,addr_taken,align(4),i32,decl:'int y ' -- ofst:0 -- size:4
MD8 -- base:VAR7(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD9 -- base:VAR11(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4
MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound
MD12 -- base:VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l ' -- ofst:0 -- size:4
MD13 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:1

==---- DUMP IR_DU_MGR DU CHAIN of '.program' ----==

--- BB3 ---
--- BB1 ---
region 'foo',id:2 id:1
    region-info:
    ==---- REGION(2):foo:int foo () ----==
    VARIABLES:2
      VAR8(i):local,,addr_taken,align(4),i32,decl:'int i '        
        MD11 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:unbound        
        MD10 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:4        
        MD13 -- base:VAR8(i):local,,addr_taken,align(4),i32,decl:'int i ' -- ofst:0 -- size:1
      VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l '        
        MD12 -- base:VAR9(l):local,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int * l ' -- ofst:0 -- size:4
    RegionMayDef(OuterRegion):MD2,MD3
    MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
    MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
    RegionMayUse(OuterRegion):MD2,MD5,MD6
    MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
    MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'char * p ' -- ofst:0 -- size:4
    MD6 -- base:VAR5(x):global,,addr_taken,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
    'foo' use 7KB memory
    The number of IR Total:11, id:0(0.0)%, ld:2(18.2)%, st:1(9.1)%, lda:1(9.1)%,call:0(0.0)%, icall:0(0.0)%, pr:0(0.0)%, stpr:0(0.0)%, ist:1(9.1)%,bin:0(0.0)%, una:0(0.0)%
    ==---- DUMP IRBBList region 'foo' ----==
    ----- BB3 ------
    ATTR:entry_bb 
    STMT NUM:0
    
    ----- BB1 ------
    ATTR:fall_through 
    STMT NUM:3

       [7]    l = &i;

       st:*<4> 'l' decl:int * l  id:4 attachinfo:Dbx,MDSSA           
           lda:*<4> 'i' decl:int i  id:3 attachinfo:Dbx

       [10]    *p = 20;

       ist:i8 id:8 attachinfo:Dbx,MDSSA           
           ld:*<1> 'p' decl:char * p  base id:6 attachinfo:Dbx,MDSSA           
           intconst:i32 20|0x14 id:7 attachinfo:Dbx

       [11]    return x;

       return id:10 attachinfo:Dbx
           ld:i32 'x' decl:int x  id:2 attachinfo:Dbx,MDSSA
    

	>>region(id:1) DEFREF:
	  USE-EXP LIST:
