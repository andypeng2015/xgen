

==---- DUMP DUMgr: IR REFERENCE 'main' ----==

==---- DUMP ALL MD ----==
MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:Var67(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:Var58(noret):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'void  noret ()' -- ofst:unbound
MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int ,unsigned char  *  * ,)' -- ofst:unbound
MD7 -- base:Var60(a):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  a ' -- ofst:0 -- size:4
MD8 -- base:Var61(b):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  b ' -- ofst:0 -- size:4
MD9 -- base:Var62(d):global,,addr_taken,align(4),i32,decl:'int  d ' -- ofst:0 -- size:4
MD10 -- base:Var63(main):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  main (int  argc ,unsigned char  *  *  argv ,)' -- ofst:unbound
MD11 -- base:Var68(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD12 -- base:Var69(pr3):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD13 -- base:Var64(argc):local,formal_param,align(4),i32,decl:'int  argc ' -- ofst:0 -- size:4
MD14 -- base:Var65(argv):local,formal_param,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'unsigned char  *  *  argv ' -- ofst:0 -- size:4
MD15 -- base:Var66(c):local,align(4),i32,decl:'register int  c ' -- ofst:0 -- size:4
MD16 -- base:Var70(pr1):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD17 -- base:Var71(pr2):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
==----==
RegionMayDef(OuterRegion):MD2,MD3
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
RegionMayUse(OuterRegion):MD2,MD3,MD8
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD8 -- base:Var61(b):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  b ' -- ofst:0 -- size:4
--- BB45 ---
--- BB1 ---
    st:i32 'd' id:3 attachinfo:Dbx
    EMD9 : MD2
    $1:i32 = call 'foo'  id:8 attachinfo:Dbx
    EMD16 : MD2,MD3 <-- MD2,MD3
      ld:i32 'argc' id:6 attachinfo:Dbx
      EMD13
      ld:*<4> 'argv' id:7 attachinfo:Dbx
      EMD14
      ild:any id:98
       : MD2,MD3
--- BB2 ---
    st:i32 'c' id:10 attachinfo:Dbx
    EMD15
      $1:i32 id:9 attachinfo:Dbx
      EMD16
--- BB3 ---
    falsebr label _$L7 id:51 attachinfo:Dbx
      ne:bool id:13 attachinfo:Dbx
        $1:i32 id:1 attachinfo:Dbx
        EMD16
--- BB4 ---
    stpr $3:i32 id:54 attachinfo:Dbx
    EMD12
      ld:i32 'c' id:19 attachinfo:Dbx
      EMD15
    truebr label _$L1 id:73
      eq:bool id:71
        $3:i32 id:70 attachinfo:Dbx
        EMD12
--- BB8 ---
    truebr label _$L2 id:76
      eq:bool id:67
        $3:i32 id:66 attachinfo:Dbx
        EMD12
--- BB12 ---
    truebr label _$L3 id:79
      eq:bool id:63
        $3:i32 id:62 attachinfo:Dbx
        EMD12
--- BB16 ---
    truebr label _$L4 id:82
      eq:bool id:59
        $3:i32 id:58 attachinfo:Dbx
        EMD12
--- BB20 ---
    falsebr label _$L8 id:85
      eq:bool id:4
        $3:i32 id:55 attachinfo:Dbx
        EMD12
--- BB21 ---
    goto label _$L5 id:31
--- BB33 ---
    st:*<1> 'a' id:25 attachinfo:Dbx
    EMD7 : MD2
      ld:*<1> 'b' id:24 attachinfo:Dbx
      EMD8 : MD2
    goto label _$L8 id:93 attachinfo:Dbx
--- BB35 ---
    st:i32 'd' id:30 attachinfo:Dbx
    EMD9 : MD2
    goto label _$L8 id:94 attachinfo:Dbx
--- BB37 ---
    st:i32 'd' id:35 attachinfo:Dbx
    EMD9 : MD2
--- BB39 ---
    $1:i32 = call 'foo'  id:14 attachinfo:Dbx
    EMD16 : MD2,MD3 <-- MD2,MD3
      ld:i32 'argc' id:15 attachinfo:Dbx
      EMD13
      ld:*<4> 'argv' id:16 attachinfo:Dbx
      EMD14
      ild:any id:99
       : MD2,MD3
--- BB40 ---
    st:i32 'c' id:17 attachinfo:Dbx
    EMD15
      $1:i32 id:18 attachinfo:Dbx
      EMD16
    goto label _$L6 id:47
--- BB42 ---
    $2:i32 = call 'noret'  id:50 attachinfo:Dbx
    EMD17 : MD2,MD3 <-- MD2,MD3
      ild:any id:100
       : MD2,MD3
--- BB43 ---
    return id:53 attachinfo:Dbx
==---- DUMP PRSSA Manager 'main' ----==
==---- DUMP PRSSAMgr:VPR 'main' ----==

id1:$1v0$0: DEF:---	USE:
id2:$3v0$0: DEF:---	USE:
id3:$2v0$0: DEF:---	USE:
id4:$1v1$4: DEF:call ($4,id:8)	USE:($4,id:9),($4,id:106)
id0:$0v0$0: DEF:---	USE:
id6:$1v2$5: DEF:phi ($5,id:48)	USE:($5,id:1)
id7:$3v2$7: DEF:stpr ($7,id:54)	USE:($7,id:55),($7,id:58),($7,id:62),($7,id:66),($7,id:70)
id8:$1v3$6: DEF:call ($6,id:14)	USE:($6,id:18),($6,id:105)
id9:$2v1$8: DEF:call ($8,id:50)	USE:
--- BB45 ---
--- BB1 ---
    ------------------

    [11]  d = 1;
    
    st:i32 'd' decl:int  d  id:3 attachinfo:Dbx        
        intconst:i32 1|0x1 id:2 attachinfo:Dbx
    VP:-- <= --
    ------------------

    [12]  while ((c = foo (argc, argv)) != -1)
    
    $4:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) id:8 attachinfo:Dbx
        ld:i32 'argc' decl:int  argc  param0 id:6 attachinfo:Dbx
        ld:*<4> 'argv' decl:unsigned char  *  *  argv  param1 id:7 attachinfo:Dbx
        ild:any dummy0 id:98            
            intconst:any 0|0x0 id:57
    VP:$1v1$4  <= --
--- BB2 ---
    ------------------
    st:i32 'c' decl:register int  c  id:10 attachinfo:Dbx        
        $4:i32 id:9 attachinfo:Dbx
    VP:-- <= $1v1$4
--- BB3 ---
    ------------------
    $5:i32 = phi id:48
        $4:i32 id:106
        $6:i32 id:105
    VP:$1v2$5  <= $1v1$4,$1v3$6
    ------------------
    falsebr label _$L7 id:51 attachinfo:Dbx        
        ne:bool id:13 attachinfo:Dbx            
            $5:i32 id:1 attachinfo:Dbx            
            intconst:i32 -1|0xffffffffffffffff id:36 attachinfo:Dbx
    VP:-- <= $1v2$5
--- BB4 ---
    ------------------

    [13]    switch (c) {
    
    stpr $7:i32 id:54 attachinfo:Dbx        
        ld:i32 'c' decl:register int  c  id:19 attachinfo:Dbx
    VP:$3v2$7  <= --
    ------------------
    truebr label _$L1 id:73        
        eq:bool id:71            
            $7:i32 id:70 attachinfo:Dbx            
            intconst:i32 115|0x73 id:38
    VP:-- <= $3v2$7
--- BB8 ---
    ------------------
    truebr label _$L2 id:76        
        eq:bool id:67            
            $7:i32 id:66 attachinfo:Dbx            
            intconst:i32 99|0x63 id:40
    VP:-- <= $3v2$7
--- BB12 ---
    ------------------
    truebr label _$L3 id:79        
        eq:bool id:63            
            $7:i32 id:62 attachinfo:Dbx            
            intconst:i32 102|0x66 id:42
    VP:-- <= $3v2$7
--- BB16 ---
    ------------------
    truebr label _$L4 id:82        
        eq:bool id:59            
            $7:i32 id:58 attachinfo:Dbx            
            intconst:i32 118|0x76 id:44
    VP:-- <= $3v2$7
--- BB20 ---
    ------------------
    falsebr label _$L8 id:85        
        eq:bool id:4            
            $7:i32 id:55 attachinfo:Dbx            
            intconst:i32 86|0x56 id:46
    VP:-- <= $3v2$7
--- BB21 ---
    ------------------
    goto label _$L5 id:31
    VP:-- <= --
--- BB33 ---
    ------------------

    [17]      a = b;
    
    st:*<1> 'a' decl:unsigned char  *  a  id:25 attachinfo:Dbx        
        ld:*<1> 'b' decl:unsigned char  *  b  id:24 attachinfo:Dbx
    VP:-- <= --
    ------------------

    [18]      break;
    
    goto label _$L8 id:93 attachinfo:Dbx
    VP:-- <= --
--- BB35 ---
    ------------------

    [20]      d = 1;
    
    st:i32 'd' decl:int  d  id:30 attachinfo:Dbx        
        intconst:i32 1|0x1 id:29 attachinfo:Dbx
    VP:-- <= --
    ------------------

    [21]      break;
    
    goto label _$L8 id:94 attachinfo:Dbx
    VP:-- <= --
--- BB37 ---
    ------------------

    [23]      d = 0;
    
    st:i32 'd' decl:int  d  id:35 attachinfo:Dbx        
        intconst:i32 0|0x0 id:34 attachinfo:Dbx
    VP:-- <= --
--- BB39 ---
    ------------------

    [12]  while ((c = foo (argc, argv)) != -1)
    
    $6:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) id:14 attachinfo:Dbx
        ld:i32 'argc' decl:int  argc  param0 id:15 attachinfo:Dbx
        ld:*<4> 'argv' decl:unsigned char  *  *  argv  param1 id:16 attachinfo:Dbx
        ild:any dummy0 id:99            
            intconst:any 0|0x0 id:61
    VP:$1v3$6  <= --
--- BB40 ---
    ------------------
    st:i32 'c' decl:register int  c  id:17 attachinfo:Dbx        
        $6:i32 id:18 attachinfo:Dbx
    VP:-- <= $1v3$6
    ------------------
    goto label _$L6 id:47
    VP:-- <= --
--- BB42 ---
    ------------------

    [26]  noret ();
    
    $8:i32 = call 'noret' decl:void  noret () id:50 attachinfo:Dbx
        ild:any dummy0 id:100            
            intconst:any 0|0x0 id:65
    VP:$2v1$8  <= --
--- BB43 ---
    ------------------

    [27]  return 0;
    
    return id:53 attachinfo:Dbx
        intconst:i32 0|0x0 id:52 attachinfo:Dbx
    VP:-- <= --
==---- DUMP Dominator Frontier Control Set ----==

BB1 DF set:
BB2 DF set:
BB3 DF set:3,
BB4 DF set:3,
BB8 DF set:33,39,
BB12 DF set:33,39,
BB16 DF set:39,
BB20 DF set:39,
BB21 DF set:39,
BB33 DF set:39,
BB35 DF set:39,
BB37 DF set:39,
BB39 DF set:3,
BB40 DF set:3,
BB42 DF set:
BB43 DF set:
BB45 DF set:
==---- DUMP MDSSA Manager 'main' ----==
==---- DUMP NON-PR MD ----==
MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:Var67(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:Var58(noret):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'void  noret ()' -- ofst:unbound
MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int ,unsigned char  *  * ,)' -- ofst:unbound
MD7 -- base:Var60(a):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  a ' -- ofst:0 -- size:4
MD8 -- base:Var61(b):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  b ' -- ofst:0 -- size:4
MD9 -- base:Var62(d):global,,addr_taken,align(4),i32,decl:'int  d ' -- ofst:0 -- size:4
MD10 -- base:Var63(main):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  main (int  argc ,unsigned char  *  *  argv ,)' -- ofst:unbound
MD11 -- base:Var68(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD13 -- base:Var64(argc):local,formal_param,align(4),i32,decl:'int  argc ' -- ofst:0 -- size:4
MD14 -- base:Var65(argv):local,formal_param,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'unsigned char  *  *  argv ' -- ofst:0 -- size:4
MD15 -- base:Var66(c):local,align(4),i32,decl:'register int  c ' -- ofst:0 -- size:4
==-- DUMP MDSSAMgr VOpndRef 'main' --==

--- BB45 ---
--- BB1 ---


[11]  d = 1;

st:i32 'd' decl:int  d  id:3 attachinfo:Dbx,MDSSA    
    intconst:i32 1|0x1 id:2 attachinfo:Dbx
  ----
  st:i32 'd' id:3 attachinfo:Dbx,MDSSA
  --DEFVMD:(MD9V1,-,NextDEF:MD9V2,,NextDEF:MD9V3)|USESET:
  --DEFVMD:(MD2V1,-,NextDEF:MD2V2)|USESET:ild(id:98)


[12]  while ((c = foo (argc, argv)) != -1)

$4:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) id:8 attachinfo:Dbx,MDSSA
    ld:i32 'argc' decl:int  argc  param0 id:6 attachinfo:Dbx,MDSSA
    ld:*<4> 'argv' decl:unsigned char  *  *  argv  param1 id:7 attachinfo:Dbx,MDSSA
    ild:any dummy0 id:98 attachinfo:MDSSA        
        intconst:any 0|0x0 id:57
  ----
  $4:i32 = call 'foo'  id:8 attachinfo:Dbx,MDSSA
  --DEFVMD:(MD2V2,PrevDEF:MD2V1)|USESET:id(id:110)
  --DEFVMD:(MD3V1,-)|USESET:id(id:112)
  ld:i32 'argc' id:6 attachinfo:Dbx,MDSSA
  --USEVMD:MD13V0
  ild:any id:98 attachinfo:MDSSA
  --USEVMD:MD3V0,MD2V1
  ld:*<4> 'argv' id:7 attachinfo:Dbx,MDSSA
  --USEVMD:MD14V0
--- BB2 ---

st:i32 'c' decl:register int  c  id:10 attachinfo:Dbx,MDSSA    
    $4:i32 id:9 attachinfo:Dbx
  ----
  st:i32 'c' id:10 attachinfo:Dbx,MDSSA
  --DEFVMD:(MD15V1,-)|USESET:id(id:114)
--- BB3 ---
MDPhi4: MD15V2 <- (ID id:114 MD15V1 BB2), (ID id:115 MD15V3 BB40)|USESET:(ld id:19) 
MDPhi3: MD3V2 <- (ID id:112 MD3V1 BB2), (ID id:113 MD3V3 BB40)|USESET:(ild id:99) (ild id:100) 
MDPhi2: MD2V3 <- (ID id:110 MD2V2 BB2), (ID id:111 MD2V8 BB40)|USESET:(ild id:100) (id id:109) (ld id:24) 

$5:i32 = phi id:48
    $4:i32 id:106
    $6:i32 id:105

falsebr label _$L7 id:51 attachinfo:Dbx    
    ne:bool id:13 attachinfo:Dbx        
        $5:i32 id:1 attachinfo:Dbx        
        intconst:i32 -1|0xffffffffffffffff id:36 attachinfo:Dbx
--- BB4 ---


[13]    switch (c) {

stpr $7:i32 id:54 attachinfo:Dbx    
    ld:i32 'c' decl:register int  c  id:19 attachinfo:Dbx,MDSSA
  ----
  ld:i32 'c' id:19 attachinfo:Dbx,MDSSA
  --USEVMD:MD15V2

truebr label _$L1 id:73    
    eq:bool id:71        
        $7:i32 id:70 attachinfo:Dbx        
        intconst:i32 115|0x73 id:38
--- BB8 ---

truebr label _$L2 id:76    
    eq:bool id:67        
        $7:i32 id:66 attachinfo:Dbx        
        intconst:i32 99|0x63 id:40
--- BB12 ---

truebr label _$L3 id:79    
    eq:bool id:63        
        $7:i32 id:62 attachinfo:Dbx        
        intconst:i32 102|0x66 id:42
--- BB16 ---

truebr label _$L4 id:82    
    eq:bool id:59        
        $7:i32 id:58 attachinfo:Dbx        
        intconst:i32 118|0x76 id:44
--- BB20 ---

falsebr label _$L8 id:85    
    eq:bool id:4        
        $7:i32 id:55 attachinfo:Dbx        
        intconst:i32 86|0x56 id:46
--- BB21 ---

goto label _$L5 id:31
--- BB33 ---


[17]      a = b;

st:*<1> 'a' decl:unsigned char  *  a  id:25 attachinfo:Dbx,MDSSA    
    ld:*<1> 'b' decl:unsigned char  *  b  id:24 attachinfo:Dbx,MDSSA
  ----
  st:*<1> 'a' id:25 attachinfo:Dbx,MDSSA
  --DEFVMD:(MD2V6,PrevDEF:MD2V3)|USESET:id(id:102)
  --DEFVMD:(MD7V1,-)|USESET:
  ld:*<1> 'b' id:24 attachinfo:Dbx,MDSSA
  --USEVMD:MD8V0,MD2V3


[18]      break;

goto label _$L8 id:93 attachinfo:Dbx
--- BB35 ---


[20]      d = 1;

st:i32 'd' decl:int  d  id:30 attachinfo:Dbx,MDSSA    
    intconst:i32 1|0x1 id:29 attachinfo:Dbx
  ----
  st:i32 'd' id:30 attachinfo:Dbx,MDSSA
  --DEFVMD:(MD9V3,PrevDEF:MD9V1)|USESET:
  --DEFVMD:(MD2V5,PrevDEF:MD2V3)|USESET:id(id:107)


[21]      break;

goto label _$L8 id:94 attachinfo:Dbx
--- BB37 ---


[23]      d = 0;

st:i32 'd' decl:int  d  id:35 attachinfo:Dbx,MDSSA    
    intconst:i32 0|0x0 id:34 attachinfo:Dbx
  ----
  st:i32 'd' id:35 attachinfo:Dbx,MDSSA
  --DEFVMD:(MD9V2,PrevDEF:MD9V1)|USESET:
  --DEFVMD:(MD2V4,PrevDEF:MD2V3)|USESET:id(id:108)
--- BB39 ---
MDPhi1: MD2V7 <- (ID id:102 MD2V6 BB33), (ID id:107 MD2V5 BB35), (ID id:108 MD2V4 BB37), (ID id:109 MD2V3 BB20)|USESET:(ild id:99) 


[12]  while ((c = foo (argc, argv)) != -1)

$6:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) id:14 attachinfo:Dbx,MDSSA
    ld:i32 'argc' decl:int  argc  param0 id:15 attachinfo:Dbx,MDSSA
    ld:*<4> 'argv' decl:unsigned char  *  *  argv  param1 id:16 attachinfo:Dbx,MDSSA
    ild:any dummy0 id:99 attachinfo:MDSSA        
        intconst:any 0|0x0 id:61
  ----
  $6:i32 = call 'foo'  id:14 attachinfo:Dbx,MDSSA
  --DEFVMD:(MD2V8,PrevDEF:MD2V7)|USESET:id(id:111)
  --DEFVMD:(MD3V3,PrevDEF:MD3V2)|USESET:id(id:113)
  ld:i32 'argc' id:15 attachinfo:Dbx,MDSSA
  --USEVMD:MD13V0
  ild:any id:99 attachinfo:MDSSA
  --USEVMD:MD3V2,MD2V7
  ld:*<4> 'argv' id:16 attachinfo:Dbx,MDSSA
  --USEVMD:MD14V0
--- BB40 ---

st:i32 'c' decl:register int  c  id:17 attachinfo:Dbx,MDSSA    
    $6:i32 id:18 attachinfo:Dbx
  ----
  st:i32 'c' id:17 attachinfo:Dbx,MDSSA
  --DEFVMD:(MD15V3,PrevDEF:MD15V2)|USESET:id(id:115)

goto label _$L6 id:47
--- BB42 ---


[26]  noret ();

$8:i32 = call 'noret' decl:void  noret () id:50 attachinfo:Dbx,MDSSA
    ild:any dummy0 id:100 attachinfo:MDSSA        
        intconst:any 0|0x0 id:65
  ----
  $8:i32 = call 'noret'  id:50 attachinfo:Dbx,MDSSA
  --DEFVMD:(MD2V9,PrevDEF:MD2V3)|USESET:
  --DEFVMD:(MD3V4,PrevDEF:MD3V2)|USESET:
  ild:any id:100 attachinfo:MDSSA
  --USEVMD:MD3V2,MD2V3
--- BB43 ---


[27]  return 0;

return id:53 attachinfo:Dbx
    intconst:i32 0|0x0 id:52 attachinfo:Dbx
==-- DUMP MDSSAMgr DU CHAIN 'main' --==

--- BB45 ---
--- BB1 ---

[11]  d = 1;

st:i32 'd' decl:int  d  id:3 attachinfo:Dbx,MDSSA    
    intconst:i32 1|0x1 id:2 attachinfo:Dbx
----------------
st(id:3) USESET:
  MD9V1:
  MD2V1:(ild id:98) 

[12]  while ((c = foo (argc, argv)) != -1)

$4:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) id:8 attachinfo:Dbx,MDSSA
    ld:i32 'argc' decl:int  argc  param0 id:6 attachinfo:Dbx,MDSSA
    ld:*<4> 'argv' decl:unsigned char  *  *  argv  param1 id:7 attachinfo:Dbx,MDSSA
    ild:any dummy0 id:98 attachinfo:MDSSA        
        intconst:any 0|0x0 id:57
----------------
call(id:8) USESET:
  MD2V2:(id id:110) 
  MD3V1:(id id:112) 
ld(id:6) DEFSET:
  MD13V0:
ild(id:98) DEFSET:
  MD3V0:
  MD2V1:(st id:3)
ld(id:7) DEFSET:
  MD14V0:
--- BB2 ---
st:i32 'c' decl:register int  c  id:10 attachinfo:Dbx,MDSSA    
    $4:i32 id:9 attachinfo:Dbx
----------------
st(id:10) USESET:
  MD15V1:(id id:114) 
--- BB3 ---
MDPhi4: MD15V2 <- (ID id:114 MD15V1 BB2), (ID id:115 MD15V3 BB40)|USESET:(ld id:19) 
MDPhi3: MD3V2 <- (ID id:112 MD3V1 BB2), (ID id:113 MD3V3 BB40)|USESET:(ild id:99) (ild id:100) 
MDPhi2: MD2V3 <- (ID id:110 MD2V2 BB2), (ID id:111 MD2V8 BB40)|USESET:(ild id:100) (id id:109) (ld id:24) 
$5:i32 = phi id:48
    $4:i32 id:106
    $6:i32 id:105
falsebr label _$L7 id:51 attachinfo:Dbx    
    ne:bool id:13 attachinfo:Dbx        
        $5:i32 id:1 attachinfo:Dbx        
        intconst:i32 -1|0xffffffffffffffff id:36 attachinfo:Dbx
--- BB4 ---

[13]    switch (c) {

stpr $7:i32 id:54 attachinfo:Dbx    
    ld:i32 'c' decl:register int  c  id:19 attachinfo:Dbx,MDSSA
----------------
ld(id:19) DEFSET:
  MD15V2:mdphi4 (st id:10) (st id:17)
truebr label _$L1 id:73    
    eq:bool id:71        
        $7:i32 id:70 attachinfo:Dbx        
        intconst:i32 115|0x73 id:38
--- BB8 ---
truebr label _$L2 id:76    
    eq:bool id:67        
        $7:i32 id:66 attachinfo:Dbx        
        intconst:i32 99|0x63 id:40
--- BB12 ---
truebr label _$L3 id:79    
    eq:bool id:63        
        $7:i32 id:62 attachinfo:Dbx        
        intconst:i32 102|0x66 id:42
--- BB16 ---
truebr label _$L4 id:82    
    eq:bool id:59        
        $7:i32 id:58 attachinfo:Dbx        
        intconst:i32 118|0x76 id:44
--- BB20 ---
falsebr label _$L8 id:85    
    eq:bool id:4        
        $7:i32 id:55 attachinfo:Dbx        
        intconst:i32 86|0x56 id:46
--- BB21 ---
goto label _$L5 id:31
--- BB33 ---

[17]      a = b;

st:*<1> 'a' decl:unsigned char  *  a  id:25 attachinfo:Dbx,MDSSA    
    ld:*<1> 'b' decl:unsigned char  *  b  id:24 attachinfo:Dbx,MDSSA
----------------
st(id:25) USESET:
  MD2V6:(id id:102) 
  MD7V1:
ld(id:24) DEFSET:
  MD8V0:
  MD2V3:mdphi2 (call id:8) (call id:14) (st id:3) mdphi1 (st id:25) (st id:30) (st id:35)

[18]      break;

goto label _$L8 id:93 attachinfo:Dbx
--- BB35 ---

[20]      d = 1;

st:i32 'd' decl:int  d  id:30 attachinfo:Dbx,MDSSA    
    intconst:i32 1|0x1 id:29 attachinfo:Dbx
----------------
st(id:30) USESET:
  MD9V3:
  MD2V5:(id id:107) 

[21]      break;

goto label _$L8 id:94 attachinfo:Dbx
--- BB37 ---

[23]      d = 0;

st:i32 'd' decl:int  d  id:35 attachinfo:Dbx,MDSSA    
    intconst:i32 0|0x0 id:34 attachinfo:Dbx
----------------
st(id:35) USESET:
  MD9V2:
  MD2V4:(id id:108) 
--- BB39 ---
MDPhi1: MD2V7 <- (ID id:102 MD2V6 BB33), (ID id:107 MD2V5 BB35), (ID id:108 MD2V4 BB37), (ID id:109 MD2V3 BB20)|USESET:(ild id:99) 

[12]  while ((c = foo (argc, argv)) != -1)

$6:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) id:14 attachinfo:Dbx,MDSSA
    ld:i32 'argc' decl:int  argc  param0 id:15 attachinfo:Dbx,MDSSA
    ld:*<4> 'argv' decl:unsigned char  *  *  argv  param1 id:16 attachinfo:Dbx,MDSSA
    ild:any dummy0 id:99 attachinfo:MDSSA        
        intconst:any 0|0x0 id:61
----------------
call(id:14) USESET:
  MD2V8:(id id:111) 
  MD3V3:(id id:113) 
ld(id:15) DEFSET:
  MD13V0:
ild(id:99) DEFSET:
  MD3V2:mdphi3 (call id:8) (call id:14)
  MD2V7:mdphi1 (st id:25) (st id:30) (st id:35) mdphi2 mdphi2 mdphi2 mdphi2 (st id:3)
ld(id:16) DEFSET:
  MD14V0:
--- BB40 ---
st:i32 'c' decl:register int  c  id:17 attachinfo:Dbx,MDSSA    
    $6:i32 id:18 attachinfo:Dbx
----------------
st(id:17) USESET:
  MD15V3:(id id:115) 
goto label _$L6 id:47
--- BB42 ---

[26]  noret ();

$8:i32 = call 'noret' decl:void  noret () id:50 attachinfo:Dbx,MDSSA
    ild:any dummy0 id:100 attachinfo:MDSSA        
        intconst:any 0|0x0 id:65
----------------
call(id:50) USESET:
  MD2V9:
  MD3V4:
ild(id:100) DEFSET:
  MD3V2:mdphi3 (call id:8) (call id:14)
  MD2V3:mdphi2 (st id:3) mdphi1 (st id:25) (st id:30) (st id:35)
--- BB43 ---

[27]  return 0;

return id:53 attachinfo:Dbx
    intconst:i32 0|0x0 id:52 attachinfo:Dbx

==---- DUMP DUMgr: IR REFERENCE 'main' ----==

==---- DUMP ALL MD ----==
MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:Var67(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:Var58(noret):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'void  noret ()' -- ofst:unbound
MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int ,unsigned char  *  * ,)' -- ofst:unbound
MD7 -- base:Var60(a):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  a ' -- ofst:0 -- size:4
MD8 -- base:Var61(b):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  b ' -- ofst:0 -- size:4
MD9 -- base:Var62(d):global,,addr_taken,align(4),i32,decl:'int  d ' -- ofst:0 -- size:4
MD10 -- base:Var63(main):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  main (int  argc ,unsigned char  *  *  argv ,)' -- ofst:unbound
MD11 -- base:Var68(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD12 -- base:Var69(pr3):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD13 -- base:Var64(argc):local,formal_param,align(4),i32,decl:'int  argc ' -- ofst:0 -- size:4
MD14 -- base:Var65(argv):local,formal_param,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'unsigned char  *  *  argv ' -- ofst:0 -- size:4
MD15 -- base:Var66(c):local,align(4),i32,decl:'register int  c ' -- ofst:0 -- size:4
MD16 -- base:Var70(pr1):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD17 -- base:Var71(pr2):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD18 -- base:Var72(pr4):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD19 -- base:Var73(pr5):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD20 -- base:Var74(pr6):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD21 -- base:Var75(pr7):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD22 -- base:Var76(pr8):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
==----==
RegionMayDef(OuterRegion):MD2,MD3
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
RegionMayUse(OuterRegion):MD2,MD3,MD8
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD8 -- base:Var61(b):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  b ' -- ofst:0 -- size:4
--- BB45 ---
--- BB1 ---
    st:i32 'd' id:3 attachinfo:Dbx,MDSSA
    EMD9 : MD2
    $4:i32 = call 'foo'  id:8 attachinfo:Dbx,MDSSA
    EMD18 : MD2,MD3 <-- MD2,MD3
      ld:i32 'argc' id:6 attachinfo:Dbx,MDSSA
      EMD13
      ld:*<4> 'argv' id:7 attachinfo:Dbx,MDSSA
      EMD14
      ild:any id:98 attachinfo:MDSSA
       : MD2,MD3
--- BB2 ---
    st:i32 'c' id:10 attachinfo:Dbx,MDSSA
    EMD15
      $4:i32 id:9 attachinfo:Dbx
      EMD18
--- BB3 ---
    $5:i32 = phi id:48
    EMD19
      $4:i32 id:106
      EMD18
      $6:i32 id:105
      EMD20
    falsebr label _$L7 id:51 attachinfo:Dbx
      ne:bool id:13 attachinfo:Dbx
        $5:i32 id:1 attachinfo:Dbx
        EMD19
--- BB4 ---
    stpr $7:i32 id:54 attachinfo:Dbx
    EMD21
      ld:i32 'c' id:19 attachinfo:Dbx,MDSSA
      EMD15
    truebr label _$L1 id:73
      eq:bool id:71
        $7:i32 id:70 attachinfo:Dbx
        EMD21
--- BB8 ---
    truebr label _$L2 id:76
      eq:bool id:67
        $7:i32 id:66 attachinfo:Dbx
        EMD21
--- BB12 ---
    truebr label _$L3 id:79
      eq:bool id:63
        $7:i32 id:62 attachinfo:Dbx
        EMD21
--- BB16 ---
    truebr label _$L4 id:82
      eq:bool id:59
        $7:i32 id:58 attachinfo:Dbx
        EMD21
--- BB20 ---
    falsebr label _$L8 id:85
      eq:bool id:4
        $7:i32 id:55 attachinfo:Dbx
        EMD21
--- BB21 ---
    goto label _$L5 id:31
--- BB33 ---
    st:*<1> 'a' id:25 attachinfo:Dbx,MDSSA
    EMD7 : MD2
      ld:*<1> 'b' id:24 attachinfo:Dbx,MDSSA
      EMD8 : MD2
    goto label _$L8 id:93 attachinfo:Dbx
--- BB35 ---
    st:i32 'd' id:30 attachinfo:Dbx,MDSSA
    EMD9 : MD2
    goto label _$L8 id:94 attachinfo:Dbx
--- BB37 ---
    st:i32 'd' id:35 attachinfo:Dbx,MDSSA
    EMD9 : MD2
--- BB39 ---
    $6:i32 = call 'foo'  id:14 attachinfo:Dbx,MDSSA
    EMD20 : MD2,MD3 <-- MD2,MD3
      ld:i32 'argc' id:15 attachinfo:Dbx,MDSSA
      EMD13
      ld:*<4> 'argv' id:16 attachinfo:Dbx,MDSSA
      EMD14
      ild:any id:99 attachinfo:MDSSA
       : MD2,MD3
--- BB40 ---
    st:i32 'c' id:17 attachinfo:Dbx,MDSSA
    EMD15
      $6:i32 id:18 attachinfo:Dbx
      EMD20
    goto label _$L6 id:47
--- BB42 ---
    $8:i32 = call 'noret'  id:50 attachinfo:Dbx,MDSSA
    EMD22 : MD2,MD3 <-- MD2,MD3
      ild:any id:100 attachinfo:MDSSA
       : MD2,MD3
--- BB43 ---
    return id:53 attachinfo:Dbx
==---- DUMP LICM Analysis Result : LoopInfo2 : 'main' ----==



==---- DUMP DUMgr: IR REFERENCE 'main' ----==

==---- DUMP ALL MD ----==
MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:Var67(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:Var58(noret):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'void  noret ()' -- ofst:unbound
MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int ,unsigned char  *  * ,)' -- ofst:unbound
MD7 -- base:Var60(a):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  a ' -- ofst:0 -- size:4
MD8 -- base:Var61(b):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  b ' -- ofst:0 -- size:4
MD9 -- base:Var62(d):global,,addr_taken,align(4),i32,decl:'int  d ' -- ofst:0 -- size:4
MD10 -- base:Var63(main):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  main (int  argc ,unsigned char  *  *  argv ,)' -- ofst:unbound
MD11 -- base:Var68(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD12 -- base:Var69(pr3):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD13 -- base:Var64(argc):local,formal_param,align(4),i32,decl:'int  argc ' -- ofst:0 -- size:4
MD14 -- base:Var65(argv):local,formal_param,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'unsigned char  *  *  argv ' -- ofst:0 -- size:4
MD15 -- base:Var66(c):local,align(4),i32,decl:'register int  c ' -- ofst:0 -- size:4
MD16 -- base:Var70(pr1):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD17 -- base:Var71(pr2):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD18 -- base:Var72(pr4):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD19 -- base:Var73(pr5):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD20 -- base:Var74(pr6):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD21 -- base:Var75(pr7):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD22 -- base:Var76(pr8):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
==----==
RegionMayDef(OuterRegion):MD2,MD3
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
RegionMayUse(OuterRegion):MD2,MD3,MD8
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD8 -- base:Var61(b):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  b ' -- ofst:0 -- size:4
--- BB45 ---
--- BB1 ---
    st:i32 'd' id:3 attachinfo:Dbx,MDSSA
    EMD9 : MD2
    $4:i32 = call 'foo'  id:8 attachinfo:Dbx,MDSSA
    EMD18 : MD2,MD3 <-- MD2,MD3
      ld:i32 'argc' id:6 attachinfo:Dbx,MDSSA
      EMD13
      ld:*<4> 'argv' id:7 attachinfo:Dbx,MDSSA
      EMD14
      ild:any id:98 attachinfo:MDSSA
       : MD2,MD3
--- BB2 ---
    st:i32 'c' id:10 attachinfo:Dbx,MDSSA
    EMD15
      $4:i32 id:9 attachinfo:Dbx
      EMD18
--- BB3 ---
    $5:i32 = phi id:48
    EMD19
      $4:i32 id:106
      EMD18
      $6:i32 id:105
      EMD20
    truebr label _$L7 id:51 attachinfo:Dbx
      eq:bool id:13 attachinfo:Dbx
        $5:i32 id:1 attachinfo:Dbx
        EMD19
--- BB4 ---
    stpr $7:i32 id:54 attachinfo:Dbx
    EMD21
      ld:i32 'c' id:19 attachinfo:Dbx,MDSSA
      EMD15
    truebr label _$L1 id:73
      eq:bool id:71
        $7:i32 id:70 attachinfo:Dbx
        EMD21
--- BB8 ---
    truebr label _$L2 id:76
      eq:bool id:67
        $7:i32 id:66 attachinfo:Dbx
        EMD21
--- BB12 ---
    truebr label _$L3 id:79
      eq:bool id:63
        $7:i32 id:62 attachinfo:Dbx
        EMD21
--- BB16 ---
    truebr label _$L4 id:82
      eq:bool id:59
        $7:i32 id:58 attachinfo:Dbx
        EMD21
--- BB20 ---
    falsebr label _$L8 id:85
      eq:bool id:4
        $7:i32 id:55 attachinfo:Dbx
        EMD21
--- BB21 ---
    goto label _$L5 id:31
--- BB33 ---
    st:*<1> 'a' id:25 attachinfo:Dbx,MDSSA
    EMD7 : MD2
      ld:*<1> 'b' id:24 attachinfo:Dbx,MDSSA
      EMD8 : MD2
    goto label _$L8 id:93 attachinfo:Dbx
--- BB35 ---
    st:i32 'd' id:30 attachinfo:Dbx,MDSSA
    EMD9 : MD2
    goto label _$L8 id:94 attachinfo:Dbx
--- BB37 ---
    st:i32 'd' id:35 attachinfo:Dbx,MDSSA
    EMD9 : MD2
--- BB39 ---
    $6:i32 = call 'foo'  id:14 attachinfo:Dbx,MDSSA
    EMD20 : MD2,MD3 <-- MD2,MD3
      ld:i32 'argc' id:15 attachinfo:Dbx,MDSSA
      EMD13
      ld:*<4> 'argv' id:16 attachinfo:Dbx,MDSSA
      EMD14
      ild:any id:99 attachinfo:MDSSA
       : MD2,MD3
--- BB40 ---
    st:i32 'c' id:17 attachinfo:Dbx,MDSSA
    EMD15
      $6:i32 id:18 attachinfo:Dbx
      EMD20
    goto label _$L6 id:47
--- BB42 ---
    $8:i32 = call 'noret'  id:50 attachinfo:Dbx,MDSSA
    EMD22 : MD2,MD3 <-- MD2,MD3
      ild:any id:100 attachinfo:MDSSA
       : MD2,MD3
--- BB43 ---
    return id:53 attachinfo:Dbx
==---- DUMP MDSSA Manager 'main' ----==
==---- DUMP NON-PR MD ----==
MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:Var67(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:Var58(noret):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'void  noret ()' -- ofst:unbound
MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int ,unsigned char  *  * ,)' -- ofst:unbound
MD7 -- base:Var60(a):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  a ' -- ofst:0 -- size:4
MD8 -- base:Var61(b):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  b ' -- ofst:0 -- size:4
MD9 -- base:Var62(d):global,,addr_taken,align(4),i32,decl:'int  d ' -- ofst:0 -- size:4
MD10 -- base:Var63(main):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  main (int  argc ,unsigned char  *  *  argv ,)' -- ofst:unbound
MD11 -- base:Var68(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD13 -- base:Var64(argc):local,formal_param,align(4),i32,decl:'int  argc ' -- ofst:0 -- size:4
MD14 -- base:Var65(argv):local,formal_param,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'unsigned char  *  *  argv ' -- ofst:0 -- size:4
MD15 -- base:Var66(c):local,align(4),i32,decl:'register int  c ' -- ofst:0 -- size:4
==-- DUMP MDSSAMgr VOpndRef 'main' --==

--- BB45 ---
--- BB1 ---


[11]  d = 1;

st:i32 'd' decl:int  d  id:3 attachinfo:Dbx,MDSSA    
    intconst:i32 1|0x1 id:2 attachinfo:Dbx
  ----
  st:i32 'd' id:3 attachinfo:Dbx,MDSSA
  --DEFVMD:(MD9V1,-,NextDEF:MD9V2,,NextDEF:MD9V3)|USESET:
  --DEFVMD:(MD2V1,-,NextDEF:MD2V2)|USESET:ild(id:98)


[12]  while ((c = foo (argc, argv)) != -1)

$4:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) id:8 attachinfo:Dbx,MDSSA
    ld:i32 'argc' decl:int  argc  param0 id:6 attachinfo:Dbx,MDSSA
    ld:*<4> 'argv' decl:unsigned char  *  *  argv  param1 id:7 attachinfo:Dbx,MDSSA
    ild:any dummy0 id:98 attachinfo:MDSSA        
        intconst:any 0|0x0 id:57
  ----
  $4:i32 = call 'foo'  id:8 attachinfo:Dbx,MDSSA
  --DEFVMD:(MD2V2,PrevDEF:MD2V1)|USESET:id(id:111)
  --DEFVMD:(MD3V1,-)|USESET:id(id:113)
  ld:i32 'argc' id:6 attachinfo:Dbx,MDSSA
  --USEVMD:MD13V0
  ild:any id:98 attachinfo:MDSSA
  --USEVMD:MD3V0,MD2V1
  ld:*<4> 'argv' id:7 attachinfo:Dbx,MDSSA
  --USEVMD:MD14V0
--- BB2 ---

st:i32 'c' decl:register int  c  id:10 attachinfo:Dbx,MDSSA    
    $4:i32 id:9 attachinfo:Dbx
  ----
  st:i32 'c' id:10 attachinfo:Dbx,MDSSA
  --DEFVMD:(MD15V1,-)|USESET:id(id:115)
--- BB3 ---
MDPhi4: MD15V2 <- (ID id:115 MD15V1 BB2), (ID id:114 MD15V3 BB40)|USESET:(ld id:19) 
MDPhi3: MD3V2 <- (ID id:113 MD3V1 BB2), (ID id:112 MD3V3 BB40)|USESET:(ild id:99) (ild id:100) 
MDPhi2: MD2V3 <- (ID id:111 MD2V2 BB2), (ID id:110 MD2V8 BB40)|USESET:(ild id:100) (id id:102) (ld id:24) 

$5:i32 = phi id:48
    $4:i32 id:106
    $6:i32 id:105

truebr label _$L7 id:51 attachinfo:Dbx    
    eq:bool id:13 attachinfo:Dbx        
        $5:i32 id:1 attachinfo:Dbx        
        intconst:i32 -1|0xffffffffffffffff id:36 attachinfo:Dbx
--- BB4 ---


[13]    switch (c) {

stpr $7:i32 id:54 attachinfo:Dbx    
    ld:i32 'c' decl:register int  c  id:19 attachinfo:Dbx,MDSSA
  ----
  ld:i32 'c' id:19 attachinfo:Dbx,MDSSA
  --USEVMD:MD15V2

truebr label _$L1 id:73    
    eq:bool id:71        
        $7:i32 id:70 attachinfo:Dbx        
        intconst:i32 115|0x73 id:38
--- BB8 ---

truebr label _$L2 id:76    
    eq:bool id:67        
        $7:i32 id:66 attachinfo:Dbx        
        intconst:i32 99|0x63 id:40
--- BB12 ---

truebr label _$L3 id:79    
    eq:bool id:63        
        $7:i32 id:62 attachinfo:Dbx        
        intconst:i32 102|0x66 id:42
--- BB16 ---

truebr label _$L4 id:82    
    eq:bool id:59        
        $7:i32 id:58 attachinfo:Dbx        
        intconst:i32 118|0x76 id:44
--- BB20 ---

falsebr label _$L8 id:85    
    eq:bool id:4        
        $7:i32 id:55 attachinfo:Dbx        
        intconst:i32 86|0x56 id:46
--- BB21 ---

goto label _$L5 id:31
--- BB33 ---


[17]      a = b;

st:*<1> 'a' decl:unsigned char  *  a  id:25 attachinfo:Dbx,MDSSA    
    ld:*<1> 'b' decl:unsigned char  *  b  id:24 attachinfo:Dbx,MDSSA
  ----
  st:*<1> 'a' id:25 attachinfo:Dbx,MDSSA
  --DEFVMD:(MD2V6,PrevDEF:MD2V3)|USESET:id(id:109)
  --DEFVMD:(MD7V1,-)|USESET:
  ld:*<1> 'b' id:24 attachinfo:Dbx,MDSSA
  --USEVMD:MD8V0,MD2V3


[18]      break;

goto label _$L8 id:93 attachinfo:Dbx
--- BB35 ---


[20]      d = 1;

st:i32 'd' decl:int  d  id:30 attachinfo:Dbx,MDSSA    
    intconst:i32 1|0x1 id:29 attachinfo:Dbx
  ----
  st:i32 'd' id:30 attachinfo:Dbx,MDSSA
  --DEFVMD:(MD9V3,PrevDEF:MD9V1)|USESET:
  --DEFVMD:(MD2V5,PrevDEF:MD2V3)|USESET:id(id:108)


[21]      break;

goto label _$L8 id:94 attachinfo:Dbx
--- BB37 ---


[23]      d = 0;

st:i32 'd' decl:int  d  id:35 attachinfo:Dbx,MDSSA    
    intconst:i32 0|0x0 id:34 attachinfo:Dbx
  ----
  st:i32 'd' id:35 attachinfo:Dbx,MDSSA
  --DEFVMD:(MD9V2,PrevDEF:MD9V1)|USESET:
  --DEFVMD:(MD2V4,PrevDEF:MD2V3)|USESET:id(id:107)
--- BB39 ---
MDPhi1: MD2V7 <- (ID id:109 MD2V6 BB33), (ID id:108 MD2V5 BB35), (ID id:107 MD2V4 BB37), (ID id:102 MD2V3 BB20)|USESET:(ild id:99) 


[12]  while ((c = foo (argc, argv)) != -1)

$6:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) id:14 attachinfo:Dbx,MDSSA
    ld:i32 'argc' decl:int  argc  param0 id:15 attachinfo:Dbx,MDSSA
    ld:*<4> 'argv' decl:unsigned char  *  *  argv  param1 id:16 attachinfo:Dbx,MDSSA
    ild:any dummy0 id:99 attachinfo:MDSSA        
        intconst:any 0|0x0 id:61
  ----
  $6:i32 = call 'foo'  id:14 attachinfo:Dbx,MDSSA
  --DEFVMD:(MD2V8,PrevDEF:MD2V7)|USESET:id(id:110)
  --DEFVMD:(MD3V3,PrevDEF:MD3V2)|USESET:id(id:112)
  ld:i32 'argc' id:15 attachinfo:Dbx,MDSSA
  --USEVMD:MD13V0
  ild:any id:99 attachinfo:MDSSA
  --USEVMD:MD3V2,MD2V7
  ld:*<4> 'argv' id:16 attachinfo:Dbx,MDSSA
  --USEVMD:MD14V0
--- BB40 ---

st:i32 'c' decl:register int  c  id:17 attachinfo:Dbx,MDSSA    
    $6:i32 id:18 attachinfo:Dbx
  ----
  st:i32 'c' id:17 attachinfo:Dbx,MDSSA
  --DEFVMD:(MD15V3,PrevDEF:MD15V2)|USESET:id(id:114)

goto label _$L6 id:47
--- BB42 ---


[26]  noret ();

$8:i32 = call 'noret' decl:void  noret () id:50 attachinfo:Dbx,MDSSA
    ild:any dummy0 id:100 attachinfo:MDSSA        
        intconst:any 0|0x0 id:65
  ----
  $8:i32 = call 'noret'  id:50 attachinfo:Dbx,MDSSA
  --DEFVMD:(MD2V9,PrevDEF:MD2V3)|USESET:
  --DEFVMD:(MD3V4,PrevDEF:MD3V2)|USESET:
  ild:any id:100 attachinfo:MDSSA
  --USEVMD:MD3V2,MD2V3
--- BB43 ---


[27]  return 0;

return id:53 attachinfo:Dbx
    intconst:i32 0|0x0 id:52 attachinfo:Dbx
==-- DUMP MDSSAMgr DU CHAIN 'main' --==

--- BB45 ---
--- BB1 ---

[11]  d = 1;

st:i32 'd' decl:int  d  id:3 attachinfo:Dbx,MDSSA    
    intconst:i32 1|0x1 id:2 attachinfo:Dbx
----------------
st(id:3) USESET:
  MD9V1:
  MD2V1:(ild id:98) 

[12]  while ((c = foo (argc, argv)) != -1)

$4:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) id:8 attachinfo:Dbx,MDSSA
    ld:i32 'argc' decl:int  argc  param0 id:6 attachinfo:Dbx,MDSSA
    ld:*<4> 'argv' decl:unsigned char  *  *  argv  param1 id:7 attachinfo:Dbx,MDSSA
    ild:any dummy0 id:98 attachinfo:MDSSA        
        intconst:any 0|0x0 id:57
----------------
call(id:8) USESET:
  MD2V2:(id id:111) 
  MD3V1:(id id:113) 
ld(id:6) DEFSET:
  MD13V0:
ild(id:98) DEFSET:
  MD3V0:
  MD2V1:(st id:3)
ld(id:7) DEFSET:
  MD14V0:
--- BB2 ---
st:i32 'c' decl:register int  c  id:10 attachinfo:Dbx,MDSSA    
    $4:i32 id:9 attachinfo:Dbx
----------------
st(id:10) USESET:
  MD15V1:(id id:115) 
--- BB3 ---
MDPhi4: MD15V2 <- (ID id:115 MD15V1 BB2), (ID id:114 MD15V3 BB40)|USESET:(ld id:19) 
MDPhi3: MD3V2 <- (ID id:113 MD3V1 BB2), (ID id:112 MD3V3 BB40)|USESET:(ild id:99) (ild id:100) 
MDPhi2: MD2V3 <- (ID id:111 MD2V2 BB2), (ID id:110 MD2V8 BB40)|USESET:(ild id:100) (id id:102) (ld id:24) 
$5:i32 = phi id:48
    $4:i32 id:106
    $6:i32 id:105
truebr label _$L7 id:51 attachinfo:Dbx    
    eq:bool id:13 attachinfo:Dbx        
        $5:i32 id:1 attachinfo:Dbx        
        intconst:i32 -1|0xffffffffffffffff id:36 attachinfo:Dbx
--- BB4 ---

[13]    switch (c) {

stpr $7:i32 id:54 attachinfo:Dbx    
    ld:i32 'c' decl:register int  c  id:19 attachinfo:Dbx,MDSSA
----------------
ld(id:19) DEFSET:
  MD15V2:mdphi4 (st id:10) (st id:17)
truebr label _$L1 id:73    
    eq:bool id:71        
        $7:i32 id:70 attachinfo:Dbx        
        intconst:i32 115|0x73 id:38
--- BB8 ---
truebr label _$L2 id:76    
    eq:bool id:67        
        $7:i32 id:66 attachinfo:Dbx        
        intconst:i32 99|0x63 id:40
--- BB12 ---
truebr label _$L3 id:79    
    eq:bool id:63        
        $7:i32 id:62 attachinfo:Dbx        
        intconst:i32 102|0x66 id:42
--- BB16 ---
truebr label _$L4 id:82    
    eq:bool id:59        
        $7:i32 id:58 attachinfo:Dbx        
        intconst:i32 118|0x76 id:44
--- BB20 ---
falsebr label _$L8 id:85    
    eq:bool id:4        
        $7:i32 id:55 attachinfo:Dbx        
        intconst:i32 86|0x56 id:46
--- BB21 ---
goto label _$L5 id:31
--- BB33 ---

[17]      a = b;

st:*<1> 'a' decl:unsigned char  *  a  id:25 attachinfo:Dbx,MDSSA    
    ld:*<1> 'b' decl:unsigned char  *  b  id:24 attachinfo:Dbx,MDSSA
----------------
st(id:25) USESET:
  MD2V6:(id id:109) 
  MD7V1:
ld(id:24) DEFSET:
  MD8V0:
  MD2V3:mdphi2 (call id:8) (call id:14) (st id:3) mdphi1 (st id:25) (st id:30) (st id:35)

[18]      break;

goto label _$L8 id:93 attachinfo:Dbx
--- BB35 ---

[20]      d = 1;

st:i32 'd' decl:int  d  id:30 attachinfo:Dbx,MDSSA    
    intconst:i32 1|0x1 id:29 attachinfo:Dbx
----------------
st(id:30) USESET:
  MD9V3:
  MD2V5:(id id:108) 

[21]      break;

goto label _$L8 id:94 attachinfo:Dbx
--- BB37 ---

[23]      d = 0;

st:i32 'd' decl:int  d  id:35 attachinfo:Dbx,MDSSA    
    intconst:i32 0|0x0 id:34 attachinfo:Dbx
----------------
st(id:35) USESET:
  MD9V2:
  MD2V4:(id id:107) 
--- BB39 ---
MDPhi1: MD2V7 <- (ID id:109 MD2V6 BB33), (ID id:108 MD2V5 BB35), (ID id:107 MD2V4 BB37), (ID id:102 MD2V3 BB20)|USESET:(ild id:99) 

[12]  while ((c = foo (argc, argv)) != -1)

$6:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) id:14 attachinfo:Dbx,MDSSA
    ld:i32 'argc' decl:int  argc  param0 id:15 attachinfo:Dbx,MDSSA
    ld:*<4> 'argv' decl:unsigned char  *  *  argv  param1 id:16 attachinfo:Dbx,MDSSA
    ild:any dummy0 id:99 attachinfo:MDSSA        
        intconst:any 0|0x0 id:61
----------------
call(id:14) USESET:
  MD2V8:(id id:110) 
  MD3V3:(id id:112) 
ld(id:15) DEFSET:
  MD13V0:
ild(id:99) DEFSET:
  MD3V2:mdphi3 (call id:8) (call id:14)
  MD2V7:mdphi1 (st id:25) (st id:30) (st id:35) mdphi2 mdphi2 mdphi2 mdphi2 (st id:3)
ld(id:16) DEFSET:
  MD14V0:
--- BB40 ---
st:i32 'c' decl:register int  c  id:17 attachinfo:Dbx,MDSSA    
    $6:i32 id:18 attachinfo:Dbx
----------------
st(id:17) USESET:
  MD15V3:(id id:114) 
goto label _$L6 id:47
--- BB42 ---

[26]  noret ();

$8:i32 = call 'noret' decl:void  noret () id:50 attachinfo:Dbx,MDSSA
    ild:any dummy0 id:100 attachinfo:MDSSA        
        intconst:any 0|0x0 id:65
----------------
call(id:50) USESET:
  MD2V9:
  MD3V4:
ild(id:100) DEFSET:
  MD3V2:mdphi3 (call id:8) (call id:14)
  MD2V3:mdphi2 (st id:3) mdphi1 (st id:25) (st id:30) (st id:35)
--- BB43 ---

[27]  return 0;

return id:53 attachinfo:Dbx
    intconst:i32 0|0x0 id:52 attachinfo:Dbx

==---- DUMP DUMgr: IR REFERENCE '.program' ----==

==---- DUMP ALL MD ----==
MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:Var67(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:Var58(noret):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'void  noret ()' -- ofst:unbound
MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int ,unsigned char  *  * ,)' -- ofst:unbound
MD7 -- base:Var60(a):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  a ' -- ofst:0 -- size:4
MD8 -- base:Var61(b):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  b ' -- ofst:0 -- size:4
MD9 -- base:Var62(d):global,,addr_taken,align(4),i32,decl:'int  d ' -- ofst:0 -- size:4
MD10 -- base:Var63(main):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  main (int  argc ,unsigned char  *  *  argv ,)' -- ofst:unbound
MD11 -- base:Var68(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD12 -- base:Var69(pr3):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD13 -- base:Var64(argc):local,formal_param,align(4),i32,decl:'int  argc ' -- ofst:0 -- size:4
MD14 -- base:Var65(argv):local,formal_param,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'unsigned char  *  *  argv ' -- ofst:0 -- size:4
MD15 -- base:Var66(c):local,align(4),i32,decl:'register int  c ' -- ofst:0 -- size:4
MD16 -- base:Var70(pr1):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD17 -- base:Var71(pr2):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD18 -- base:Var72(pr4):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD19 -- base:Var73(pr5):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD20 -- base:Var74(pr6):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD21 -- base:Var75(pr7):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD22 -- base:Var76(pr8):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD23 -- base:Var77(pr9):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
==----==
RegionMayDef(OuterRegion):
RegionMayUse(OuterRegion):MD2,MD3
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
--- BB3 ---
--- BB1 ---
    region 'main',id:2 id:1
==---- DUMP PRSSA Manager '.program' ----==
==---- DUMP PRSSAMgr:VPR '.program' ----==

--- BB3 ---
--- BB1 ---
    ------------------
    region 'main',id:2 id:1
    VP:-- <= --
==---- DUMP Dominator Frontier Control Set ----==

BB1 DF set:
BB3 DF set:
==---- DUMP MDSSA Manager '.program' ----==
==---- DUMP NON-PR MD ----==
MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:Var67(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:Var58(noret):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'void  noret ()' -- ofst:unbound
MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int ,unsigned char  *  * ,)' -- ofst:unbound
MD7 -- base:Var60(a):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  a ' -- ofst:0 -- size:4
MD8 -- base:Var61(b):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  b ' -- ofst:0 -- size:4
MD9 -- base:Var62(d):global,,addr_taken,align(4),i32,decl:'int  d ' -- ofst:0 -- size:4
MD10 -- base:Var63(main):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  main (int  argc ,unsigned char  *  *  argv ,)' -- ofst:unbound
MD11 -- base:Var68(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD13 -- base:Var64(argc):local,formal_param,align(4),i32,decl:'int  argc ' -- ofst:0 -- size:4
MD14 -- base:Var65(argv):local,formal_param,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'unsigned char  *  *  argv ' -- ofst:0 -- size:4
MD15 -- base:Var66(c):local,align(4),i32,decl:'register int  c ' -- ofst:0 -- size:4
==-- DUMP MDSSAMgr VOpndRef '.program' --==

--- BB3 ---
--- BB1 ---

region 'main',id:2 id:1
==-- DUMP MDSSAMgr DU CHAIN '.program' --==

--- BB3 ---
--- BB1 ---
region 'main',id:2 id:1

==---- DUMP DUMgr: IR REFERENCE '.program' ----==

==---- DUMP ALL MD ----==
MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:Var67(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:Var58(noret):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'void  noret ()' -- ofst:unbound
MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int ,unsigned char  *  * ,)' -- ofst:unbound
MD7 -- base:Var60(a):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  a ' -- ofst:0 -- size:4
MD8 -- base:Var61(b):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  b ' -- ofst:0 -- size:4
MD9 -- base:Var62(d):global,,addr_taken,align(4),i32,decl:'int  d ' -- ofst:0 -- size:4
MD10 -- base:Var63(main):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  main (int  argc ,unsigned char  *  *  argv ,)' -- ofst:unbound
MD11 -- base:Var68(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD12 -- base:Var69(pr3):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD13 -- base:Var64(argc):local,formal_param,align(4),i32,decl:'int  argc ' -- ofst:0 -- size:4
MD14 -- base:Var65(argv):local,formal_param,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'unsigned char  *  *  argv ' -- ofst:0 -- size:4
MD15 -- base:Var66(c):local,align(4),i32,decl:'register int  c ' -- ofst:0 -- size:4
MD16 -- base:Var70(pr1):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD17 -- base:Var71(pr2):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD18 -- base:Var72(pr4):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD19 -- base:Var73(pr5):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD20 -- base:Var74(pr6):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD21 -- base:Var75(pr7):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD22 -- base:Var76(pr8):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD23 -- base:Var77(pr9):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
==----==
RegionMayDef(OuterRegion):
RegionMayUse(OuterRegion):MD2,MD3
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
--- BB3 ---
--- BB1 ---
    region 'main',id:2 id:1

==---- DUMP DUMgr: IR REFERENCE '.program' ----==

==---- DUMP ALL MD ----==
MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:Var67(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:Var58(noret):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'void  noret ()' -- ofst:unbound
MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int ,unsigned char  *  * ,)' -- ofst:unbound
MD7 -- base:Var60(a):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  a ' -- ofst:0 -- size:4
MD8 -- base:Var61(b):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  b ' -- ofst:0 -- size:4
MD9 -- base:Var62(d):global,,addr_taken,align(4),i32,decl:'int  d ' -- ofst:0 -- size:4
MD10 -- base:Var63(main):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  main (int  argc ,unsigned char  *  *  argv ,)' -- ofst:unbound
MD11 -- base:Var68(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD12 -- base:Var69(pr3):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD13 -- base:Var64(argc):local,formal_param,align(4),i32,decl:'int  argc ' -- ofst:0 -- size:4
MD14 -- base:Var65(argv):local,formal_param,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'unsigned char  *  *  argv ' -- ofst:0 -- size:4
MD15 -- base:Var66(c):local,align(4),i32,decl:'register int  c ' -- ofst:0 -- size:4
MD16 -- base:Var70(pr1):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD17 -- base:Var71(pr2):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD18 -- base:Var72(pr4):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD19 -- base:Var73(pr5):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD20 -- base:Var74(pr6):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD21 -- base:Var75(pr7):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD22 -- base:Var76(pr8):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD23 -- base:Var77(pr9):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
==----==
RegionMayDef(OuterRegion):
RegionMayUse(OuterRegion):MD2,MD3
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
--- BB3 ---
--- BB1 ---
    region 'main',id:2 id:1
==---- DUMP MDSSA Manager '.program' ----==
==---- DUMP NON-PR MD ----==
MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:Var67(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:Var58(noret):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'void  noret ()' -- ofst:unbound
MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int ,unsigned char  *  * ,)' -- ofst:unbound
MD7 -- base:Var60(a):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  a ' -- ofst:0 -- size:4
MD8 -- base:Var61(b):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  b ' -- ofst:0 -- size:4
MD9 -- base:Var62(d):global,,addr_taken,align(4),i32,decl:'int  d ' -- ofst:0 -- size:4
MD10 -- base:Var63(main):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  main (int  argc ,unsigned char  *  *  argv ,)' -- ofst:unbound
MD11 -- base:Var68(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD13 -- base:Var64(argc):local,formal_param,align(4),i32,decl:'int  argc ' -- ofst:0 -- size:4
MD14 -- base:Var65(argv):local,formal_param,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'unsigned char  *  *  argv ' -- ofst:0 -- size:4
MD15 -- base:Var66(c):local,align(4),i32,decl:'register int  c ' -- ofst:0 -- size:4
==-- DUMP MDSSAMgr VOpndRef '.program' --==

--- BB3 ---
--- BB1 ---

region 'main',id:2 id:1
==-- DUMP MDSSAMgr DU CHAIN '.program' --==

--- BB3 ---
--- BB1 ---
region 'main',id:2 id:1