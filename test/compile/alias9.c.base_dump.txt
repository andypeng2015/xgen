
==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR8(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD7 -- base:VAR9(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
==---- DUMP POINT-TO OUT-SET (FLOW SENSITIVE) 'foo' ----==
--- BB3 ---
MD1 -- PT_SET: MD1,
MD2 -- PT_SET: MD2,MD3,
MD3 -- PT_SET: MD2,MD3,
MD4 -- NO PT
MD5 -- NO PT
MD6 -- NO PT
MD7 -- NO PT
--- BB1 ---
MD1 -- PT_SET: MD1,
MD2 -- PT_SET: MD2,MD3,
MD3 -- PT_SET: MD2,MD3,
MD4 -- NO PT
MD5 -- PT_SET: MD2,MD3,
MD6 -- NO PT
MD7 -- NO PT
==--- DUMP IR_AA 'foo' ----==
==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR8(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD7 -- base:VAR9(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
---- MAY-POINT-TO SET :MD2,MD3
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
---- IR POINT-TO:
--- BB3 ---
  ---- MD2MDSet:
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- NO PT
  MD6 -- NO PT
  MD7 -- NO PT
  ---- IR POINT-TO:
--- BB1 ---
  ---- MD2MDSet:
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- NO PT
  MD7 -- NO PT
  ---- IR POINT-TO:
  ------  

  [4]    p->a = 20; //S1

  ist:i32 id:5 attachinfo:Dbx      
      ld:*<8> 'p' decl:struct S * p  base id:3 attachinfo:Dbx      
      intconst:i32 20|0x14 id:4 attachinfo:Dbx
  LHS:
  ist:i32 id:5 attachinfo:Dbx
  	  MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound

  	  MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound

  RHS:
  >> MDSet DETAIL:
  ld:*<8> 'p' decl:struct S * p  id:3 attachinfo:Dbx
  	  MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound

  ------  

  [6]    return p->b; //S2

  return id:7 attachinfo:Dbx
      ild:i32:offset(4) id:1 attachinfo:Dbx          
          ld:*<8> 'p' decl:struct S * p  id:2 attachinfo:Dbx
  
  ild:i32:offset(4) id:1 attachinfo:Dbx
  	  MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound

  	  MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound

  >> MDSet DETAIL:
  ild:i32:offset(4) id:1 attachinfo:Dbx
  	  MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound

  	  MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound

  ld:*<8> 'p' decl:struct S * p  id:2 attachinfo:Dbx
  	  MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound


==---- DUMP IR_DU_MGR: IR REFERENCE 'foo' ----==

==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR8(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD7 -- base:VAR9(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
==----==
RegionMayDef(OuterRegion):MD2,MD3
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
RegionMayUse(OuterRegion):MD2,MD3,MD5
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
--- BB3 ---
--- BB1 ---
    ist:i32 id:5 attachinfo:Dbx
     : MD2,MD3
      ld:*<8> 'p' decl:struct S * p  id:3 attachinfo:Dbx
      MMD5 : MD2
    return id:7 attachinfo:Dbx
      ild:i32:offset(4) id:1 attachinfo:Dbx
       : MD2,MD3
        ld:*<8> 'p' decl:struct S * p  id:2 attachinfo:Dbx
        MMD5 : MD2
==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR8(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD7 -- base:VAR9(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
==---- DUMP POINT-TO OUT-SET (FLOW-INSENSITIVE) 'foo' ----==
MD1 -- PT_SET: MD1,
MD2 -- PT_SET: MD2,MD3,
MD3 -- PT_SET: MD2,MD3,
MD4 -- NO PT
MD5 -- PT_SET: MD2,MD3,
MD6 -- NO PT
MD7 -- NO PT
==--- DUMP IR_AA 'foo' ----==
==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR8(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD7 -- base:VAR9(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
---- MAY-POINT-TO SET :MD2,MD3
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
---- IR POINT-TO:
--- BB3 ---
  ---- MD2MDSet:
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- NO PT
  MD7 -- NO PT
  ---- IR POINT-TO:
--- BB1 ---
  ---- MD2MDSet:
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- NO PT
  MD7 -- NO PT
  ---- IR POINT-TO:
  ------  

  [4]    p->a = 20; //S1

  ist:i32 id:5 attachinfo:Dbx,MDSSA      
      ld:*<8> 'p' decl:struct S * p  base id:3 attachinfo:Dbx,MDSSA      
      intconst:i32 20|0x14 id:4 attachinfo:Dbx
  LHS:
  ist:i32 id:5 attachinfo:Dbx,MDSSA
  	  MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound

  	  MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound

  RHS:
  >> MDSet DETAIL:
  ld:*<8> 'p' decl:struct S * p  id:3 attachinfo:Dbx,MDSSA
  	  MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound

  ------  

  [6]    return p->b; //S2

  return id:7 attachinfo:Dbx
      ild:i32:offset(4) id:1 attachinfo:Dbx,MDSSA          
          ld:*<8> 'p' decl:struct S * p  id:2 attachinfo:Dbx,MDSSA
  
  ild:i32:offset(4) id:1 attachinfo:Dbx,MDSSA
  	  MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound

  	  MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound

  >> MDSet DETAIL:
  ild:i32:offset(4) id:1 attachinfo:Dbx,MDSSA
  	  MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound

  	  MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound

  ld:*<8> 'p' decl:struct S * p  id:2 attachinfo:Dbx,MDSSA
  	  MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound


==---- DUMP IR_DU_MGR: IR REFERENCE 'foo' ----==

==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR8(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD7 -- base:VAR9(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
==----==
RegionMayDef(OuterRegion):MD2,MD3
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
RegionMayUse(OuterRegion):MD2,MD3,MD5
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
--- BB3 ---
--- BB1 ---
    ist:i32 id:5 attachinfo:Dbx,MDSSA
     : MD2,MD3
      ld:*<8> 'p' decl:struct S * p  id:3 attachinfo:Dbx,MDSSA
      MMD5 : MD2
    return id:7 attachinfo:Dbx
      ild:i32:offset(4) id:1 attachinfo:Dbx,MDSSA
       : MD2,MD3
        ld:*<8> 'p' decl:struct S * p  id:2 attachinfo:Dbx,MDSSA
        MMD5 : MD2
==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR8(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD7 -- base:VAR9(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound

==---- DUMP IR_DU_MGR DU CHAIN of 'foo' ----==

--- BB3 ---
--- BB1 ---

[4]    p->a = 20; //S1

ist:i32 id:5 attachinfo:Dbx,MDSSA    
    ld:*<8> 'p' decl:struct S * p  base id:3 attachinfo:Dbx,MDSSA    
    intconst:i32 20|0x14 id:4 attachinfo:Dbx

	>>ist(id:5) DEFREF:MD2,MD3
	  USE-EXP LIST:
	>>ld(id:3) USEREF:MMD5,MD2
	  DEF-STMT LIST:


[6]    return p->b; //S2

return id:7 attachinfo:Dbx
    ild:i32:offset(4) id:1 attachinfo:Dbx,MDSSA        
        ld:*<8> 'p' decl:struct S * p  id:2 attachinfo:Dbx,MDSSA

	>>ild(id:1) USEREF:MD2,MD3
	  DEF-STMT LIST:
	>>ld(id:2) USEREF:MMD5,MD2
	  DEF-STMT LIST:

==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR8(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD7 -- base:VAR9(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
==---- DUMP POINT-TO OUT-SET (FLOW-INSENSITIVE) 'foo' ----==
MD1 -- PT_SET: MD1,
MD2 -- PT_SET: MD2,MD3,
MD3 -- PT_SET: MD2,MD3,
MD4 -- NO PT
MD5 -- PT_SET: MD2,MD3,
MD6 -- NO PT
MD7 -- NO PT
==--- DUMP IR_AA 'foo' ----==
==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR8(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD7 -- base:VAR9(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
---- MAY-POINT-TO SET :MD2,MD3
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
---- IR POINT-TO:
--- BB3 ---
  ---- MD2MDSet:
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- NO PT
  MD7 -- NO PT
  ---- IR POINT-TO:
--- BB1 ---
  ---- MD2MDSet:
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- NO PT
  MD7 -- NO PT
  ---- IR POINT-TO:
  ------  

  [4]    p->a = 20; //S1

  ist:i32 id:5 attachinfo:Dbx,MDSSA      
      ld:*<8> 'p' decl:struct S * p  base id:3 attachinfo:Dbx,MDSSA      
      intconst:i32 20|0x14 id:4 attachinfo:Dbx
  LHS:
  ist:i32 id:5 attachinfo:Dbx,MDSSA
  	  MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound

  	  MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound

  RHS:
  >> MDSet DETAIL:
  ld:*<8> 'p' decl:struct S * p  id:3 attachinfo:Dbx,MDSSA
  	  MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound

  ------  

  [6]    return p->b; //S2

  return id:7 attachinfo:Dbx
      ild:i32:offset(4) id:1 attachinfo:Dbx,MDSSA          
          ld:*<8> 'p' decl:struct S * p  id:2 attachinfo:Dbx,MDSSA
  
  ild:i32:offset(4) id:1 attachinfo:Dbx,MDSSA
  	  MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound

  	  MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound

  >> MDSet DETAIL:
  ild:i32:offset(4) id:1 attachinfo:Dbx,MDSSA
  	  MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound

  	  MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound

  ld:*<8> 'p' decl:struct S * p  id:2 attachinfo:Dbx,MDSSA
  	  MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
  		POINT TO:
  			MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
			MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound


==---- DUMP IR_DU_MGR: IR REFERENCE 'foo' ----==

==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR8(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD7 -- base:VAR9(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
==----==
RegionMayDef(OuterRegion):MD2,MD3
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
RegionMayUse(OuterRegion):MD2,MD3,MD5
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
--- BB3 ---
--- BB1 ---
    ist:i32 id:5 attachinfo:Dbx,MDSSA
     : MD2,MD3
      ld:*<8> 'p' decl:struct S * p  id:3 attachinfo:Dbx,MDSSA
      MMD5 : MD2
    return id:7 attachinfo:Dbx
      ild:i32:offset(4) id:1 attachinfo:Dbx,MDSSA
       : MD2,MD3
        ld:*<8> 'p' decl:struct S * p  id:2 attachinfo:Dbx,MDSSA
        MMD5 : MD2
==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR8(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD7 -- base:VAR9(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound

==---- DUMP IR_DU_MGR DU CHAIN of 'foo' ----==

--- BB3 ---
--- BB1 ---

[4]    p->a = 20; //S1

ist:i32 id:5 attachinfo:Dbx,MDSSA    
    ld:*<8> 'p' decl:struct S * p  base id:3 attachinfo:Dbx,MDSSA    
    intconst:i32 20|0x14 id:4 attachinfo:Dbx

	>>ist(id:5) DEFREF:MD2,MD3
	  USE-EXP LIST:ild(id:1),ld(id:2)
	>>ld(id:3) USEREF:MMD5,MD2
	  DEF-STMT LIST:


[6]    return p->b; //S2

return id:7 attachinfo:Dbx
    ild:i32:offset(4) id:1 attachinfo:Dbx,MDSSA        
        ld:*<8> 'p' decl:struct S * p  id:2 attachinfo:Dbx,MDSSA

	>>ild(id:1) USEREF:MD2,MD3
	  DEF-STMT LIST:ist(id:5)
	>>ld(id:2) USEREF:MMD5,MD2
	  DEF-STMT LIST:ist(id:5)

==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR8(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD7 -- base:VAR9(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
==---- DUMP POINT-TO OUT-SET (FLOW SENSITIVE) '.program' ----==
--- BB3 ---
MD1 -- PT_SET: MD1,
MD2 -- PT_SET: MD2,MD3,
MD3 -- PT_SET: MD2,MD3,
MD4 -- NO PT
MD5 -- PT_SET: MD2,MD3,
MD6 -- NO PT
MD7 -- NO PT
--- BB1 ---
MD1 -- PT_SET: MD1,
MD2 -- PT_SET: MD2,MD3,
MD3 -- PT_SET: MD2,MD3,
MD4 -- NO PT
MD5 -- PT_SET: MD2,MD3,
MD6 -- NO PT
MD7 -- NO PT
==--- DUMP IR_AA '.program' ----==
==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR8(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD7 -- base:VAR9(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
---- MAY-POINT-TO SET :MD2,MD3
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
---- IR POINT-TO:
--- BB3 ---
  ---- MD2MDSet:
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- NO PT
  MD7 -- NO PT
  ---- IR POINT-TO:
--- BB1 ---
  ---- MD2MDSet:
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- NO PT
  MD7 -- NO PT
  ---- IR POINT-TO:
  ------  
  region 'foo',id:2 id:1
  

==---- DUMP IR_DU_MGR: IR REFERENCE '.program' ----==

==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR8(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD7 -- base:VAR9(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
==----==
RegionMayDef(OuterRegion):
RegionMayUse(OuterRegion):MD2,MD3
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
--- BB3 ---
--- BB1 ---
    region 'foo',id:2 id:1
==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR8(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD7 -- base:VAR9(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
==---- DUMP POINT-TO OUT-SET (FLOW-INSENSITIVE) '.program' ----==
MD1 -- PT_SET: MD1,
MD2 -- PT_SET: MD2,MD3,
MD3 -- PT_SET: MD2,MD3,
MD4 -- NO PT
MD5 -- PT_SET: MD2,MD3,
MD6 -- NO PT
MD7 -- NO PT
==--- DUMP IR_AA '.program' ----==
==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR8(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD7 -- base:VAR9(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
---- MAY-POINT-TO SET :MD2,MD3
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
---- IR POINT-TO:
--- BB3 ---
  ---- MD2MDSet:
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- NO PT
  MD7 -- NO PT
  ---- IR POINT-TO:
--- BB1 ---
  ---- MD2MDSet:
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- NO PT
  MD7 -- NO PT
  ---- IR POINT-TO:
  ------  
  region 'foo',id:2 id:1
  

==---- DUMP IR_DU_MGR: IR REFERENCE '.program' ----==

==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR8(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD7 -- base:VAR9(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
==----==
RegionMayDef(OuterRegion):
RegionMayUse(OuterRegion):MD2,MD3
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
--- BB3 ---
--- BB1 ---
    region 'foo',id:2 id:1
==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR8(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD7 -- base:VAR9(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound

==---- DUMP IR_DU_MGR DU CHAIN of '.program' ----==

--- BB3 ---
--- BB1 ---
region 'foo',id:2 id:1
    region-info:
    ==---- REGION(2):foo:int foo () ----==
    VARIABLES:6
      VAR76(func_level_var_0):local,spill_loc,align(4),u32,decl:''
      VAR77(func_level_var_1):local,spill_loc,align(4),u32,decl:''
      VAR78(func_level_var_2):local,spill_loc,align(4),u32,decl:''
      VAR79(func_level_var_3):local,spill_loc,align(4),u32,decl:''
      VAR80(func_level_var_4):local,spill_loc,align(4),u32,decl:''
      VAR81(func_level_var_5):local,spill_loc,align(4),u32,decl:''
    RegionMayDef(OuterRegion):MD2,MD3
    MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
    MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
    RegionMayUse(OuterRegion):MD2,MD3,MD5
    MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
    MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
    MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
    'foo' use 7KB memory
    The number of IR Total:8, id:0(0.0)%, ld:2(25.0)%, st:0(0.0)%, lda:0(0.0)%,call:0(0.0)%, icall:0(0.0)%, pr:0(0.0)%, stpr:0(0.0)%, ist:1(12.5)%,bin:0(0.0)%, una:1(12.5)%
    ==---- DUMP IRBBList region 'foo' ----==
    ----- BB3 ------
    ATTR:entry_bb 
    STMT NUM:0
    
    ----- BB1 ------
    ATTR:fall_through 
    STMT NUM:2

       [4]    p->a = 20; //S1

       ist:i32 id:5 attachinfo:Dbx,MDSSA           
           ld:*<8> 'p' decl:struct S * p  base id:3 attachinfo:Dbx,MDSSA           
           intconst:i32 20|0x14 id:4 attachinfo:Dbx

       [6]    return p->b; //S2

       return id:7 attachinfo:Dbx
           ild:i32:offset(4) id:1 attachinfo:Dbx,MDSSA               
               ld:*<8> 'p' decl:struct S * p  id:2 attachinfo:Dbx,MDSSA
    

	>>region(id:1) DEFREF:
	  USE-EXP LIST:

==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR8(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD7 -- base:VAR9(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
==---- DUMP POINT-TO OUT-SET (FLOW-INSENSITIVE) '.program' ----==
MD1 -- PT_SET: MD1,
MD2 -- PT_SET: MD2,MD3,
MD3 -- PT_SET: MD2,MD3,
MD4 -- NO PT
MD5 -- PT_SET: MD2,MD3,
MD6 -- NO PT
MD7 -- NO PT
==--- DUMP IR_AA '.program' ----==
==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR8(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD7 -- base:VAR9(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
---- MAY-POINT-TO SET :MD2,MD3
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
---- IR POINT-TO:
--- BB3 ---
  ---- MD2MDSet:
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- NO PT
  MD7 -- NO PT
  ---- IR POINT-TO:
--- BB1 ---
  ---- MD2MDSet:
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- NO PT
  MD7 -- NO PT
  ---- IR POINT-TO:
  ------  
  region 'foo',id:2 id:1
  

==---- DUMP IR_DU_MGR: IR REFERENCE '.program' ----==

==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR8(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD7 -- base:VAR9(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
==----==
RegionMayDef(OuterRegion):
RegionMayUse(OuterRegion):MD2,MD3
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
--- BB3 ---
--- BB1 ---
    region 'foo',id:2 id:1
==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR8(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
MD6 -- base:VAR5(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo ()' -- ofst:unbound
MD7 -- base:VAR9(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound

==---- DUMP IR_DU_MGR DU CHAIN of '.program' ----==

--- BB3 ---
--- BB1 ---
region 'foo',id:2 id:1
    region-info:
    ==---- REGION(2):foo:int foo () ----==
    VARIABLES:6
      VAR76(func_level_var_0):local,spill_loc,align(4),u32,decl:''
      VAR77(func_level_var_1):local,spill_loc,align(4),u32,decl:''
      VAR78(func_level_var_2):local,spill_loc,align(4),u32,decl:''
      VAR79(func_level_var_3):local,spill_loc,align(4),u32,decl:''
      VAR80(func_level_var_4):local,spill_loc,align(4),u32,decl:''
      VAR81(func_level_var_5):local,spill_loc,align(4),u32,decl:''
    RegionMayDef(OuterRegion):MD2,MD3
    MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
    MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
    RegionMayUse(OuterRegion):MD2,MD3,MD5
    MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
    MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
    MD5 -- base:VAR4(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S * p ' -- ofst:0 -- size:4
    'foo' use 7KB memory
    The number of IR Total:8, id:0(0.0)%, ld:2(25.0)%, st:0(0.0)%, lda:0(0.0)%,call:0(0.0)%, icall:0(0.0)%, pr:0(0.0)%, stpr:0(0.0)%, ist:1(12.5)%,bin:0(0.0)%, una:1(12.5)%
    ==---- DUMP IRBBList region 'foo' ----==
    ----- BB3 ------
    ATTR:entry_bb 
    STMT NUM:0
    
    ----- BB1 ------
    ATTR:fall_through 
    STMT NUM:2

       [4]    p->a = 20; //S1

       ist:i32 id:5 attachinfo:Dbx,MDSSA           
           ld:*<8> 'p' decl:struct S * p  base id:3 attachinfo:Dbx,MDSSA           
           intconst:i32 20|0x14 id:4 attachinfo:Dbx

       [6]    return p->b; //S2

       return id:7 attachinfo:Dbx
           ild:i32:offset(4) id:1 attachinfo:Dbx,MDSSA               
               ld:*<8> 'p' decl:struct S * p  id:2 attachinfo:Dbx,MDSSA
    

	>>region(id:1) DEFREF:
	  USE-EXP LIST:
