$(info "====---- START Makefile.xocc ----====")

ifeq ($(TARG),)
  $(error "NEED TARG INFO:e.g:make TARG=FOR_ARM TARG_DIR=../arm")
endif

ifeq ($(TARG_DIR),)
  $(error "NEED TARG_DIR INFO:e.g:make TARG=FOR_ARM TARG_DIR=../arm")
endif

ifeq ($(THREAD_NUM),)
  THREAD_NUM=1
endif

ifneq ($(ROOT_DIR),)
  $(error "DO NOT SET ROOT_DIR IN CMD-LINE, IT WILL BE SET IN MAKEFILE")
endif

CFLAGS+=-Wall
ROOT_DIR=$(CURDIR)/..
XGEN_DIR=$(ROOT_DIR)/xgen
COM_DIR=$(ROOT_DIR)/com
READER_DIR=$(ROOT_DIR)/reader
OPT_DIR=$(ROOT_DIR)/opt
ELF_DIR=$(ROOT_DIR)/elf
MACH_DIR=$(ROOT_DIR)/mach
CFE_DIR=$(ROOT_DIR)/cfe
XOCC_DIR=$(ROOT_DIR)/xocc
XOCC_OUTPUT=xocc.exe

include Makefile.inc
include $(CFE_DIR)/Makefile.inc
include $(COM_DIR)/Makefile.inc
include $(ROOT_DIR)/Makefile.xoc.inc
include $(XGEN_DIR)/Makefile.inc
include $(ROOT_DIR)/Makefile.option
include $(ELF_DIR)/Makefile.inc
include $(MACH_DIR)/Makefile.inc

ifeq ($(OPEN_COVERAGE),true)
  CFLAGS+=--coverage
endif


CFLAGS+=\
  -D$(TARG) \
  -Wno-unknown-pragmas \
  -Wno-write-strings \
  -Wsign-promo \
  -Wparentheses \
  -Wformat \
  -Wsign-compare \
  -Wpointer-arith \
  -Wno-multichar \
  -Winit-self \
  -Wswitch \
  -D_SUPPORT_C11_

#Disable -Wconversion to avoid too much complaints.

ifeq ($(FOR_IP), true)
  CFLAGS+=-DFOR_IP
endif

ifneq (,$(filter $(CC),g++ gcc))
  CFLAGS+=-Wno-strict-aliasing -finline-limit=10000000
endif

#Use tmp-objs-name to compose multiple level path.
TMP_CFE_OBJS=$(foreach n,$(CFE_OBJS),$(CFE_DIR)/$(n))
TMP_ELF_OBJS=$(foreach n,$(ELF_OBJS),$(ELF_DIR)/$(n))
TMP_MACH_OBJS=$(foreach n,$(MACH_OBJS),$(MACH_DIR)/$(n))

#Display internal variables.
$(info "CURDIR:$(CURDIR)")
$(info "ROOT_DIR:$(ROOT_DIR)")
$(info "COMBINED CFE OBJS:$(TMP_CFE_OBJS)")
$(info "COMBINED ELF OBJS:$(TMP_ELF_OBJS)")
$(info "WIN=$(WIN),WSL=$(WSL)")
$(info "TARG:$(TARG)")
$(info "TARG_DIR:$(TARG_DIR)")
$(info "CC:$(CC)")
$(info "INC:$(INC)")
$(info "CFLAGS:$(CFLAGS)")
$(info "DEBUG:$(DEBUG)")
$(info "THREAD_NUM:$(THREAD_NUM)")
$(info "TMP_ELF_OBJS:$(TMP_ELF_OBJS)")
$(info "TMP_MACH_OBJS:$(TMP_MACH_OBJS)")

#Define dependencies and link-rules of xocc.exe.
$(XOCC_OUTPUT): xocc_objs tmp_cfe_objs tmp_elf_objs $(XGEN_OUTPUT)
	@echo "START BUILD $(XOCC_OUTPUT)"
	$(CC) $(XOCC_OBJS) \
      $(TMP_CFE_OBJS) \
      $(TMP_ELF_OBJS) \
      -Xlinker "-(" \
      $(XGEN_DIR)/$(XGEN_OUTPUT) \
      $(COM_DIR)/$(COM_OUTPUT) \
      $(ROOT_DIR)/$(XOC_OUTPUT) \
      -Xlinker "-)" \
      $(CFLAGS) \
      -o $@ -lstdc++ -lm  #-lgcov -lgcc
	@echo "END BUILD $(XOCC_OUTPUT)"
	@echo "SUCCESS TO GENERATE $(XOCC_OUTPUT)!!"

%.o:%.cpp
	@echo "BUILD $<"
	$(INFER) $(CC) $(CFLAGS) -c $< -o $@

tmp_cfe_objs: $(TMP_CFE_OBJS)
tmp_elf_objs: $(TMP_ELF_OBJS)
xocc_objs: $(XOCC_OBJS)

$(XGEN_OUTPUT):
	@echo "START BUILD $(XGEN_OUTPUT)"
	make -C $(XGEN_DIR) \
      TARG=$(TARG) \
      TARG_DIR=$(TARG_DIR) \
      ROOT_DIR=$(ROOT_DIR) \
      -j$(THREAD_NUM) \
      $(XGEN_OUTPUT) \
      -f Makefile.xgen \
      DEBUG=$(DEBUG) \
      CFLAGS="$(CFLAGS)" \
      THREAD_NUM=$(THREAD_NUM)
	@echo "END BUILD $(XGEN_OUTPUT)"

clean:
	@find ./ -name "*.o" | xargs rm -f
	@find ./ -name "*.a" | xargs rm -f
	@find ./ -name "*.d" | xargs rm -f
	@find ./ -name "*.exe" | xargs rm -f
	@find ./ -name "*.elf" | xargs rm -f
	@find ./ -name "*.out" | xargs rm -f
	@find ./ -name "*.tmp" | xargs rm -f
	@find ./ -name "*.asm" | xargs rm -f
	@find ./ -name "*.swp" | xargs rm -f
	@find ./ -name "*.swo" | xargs rm -f
	@find ./ -name "*.log" | xargs rm -f
	@find ./ -name "*.LOGLOG" | xargs rm -f
	@find ./ -name "LOGLOG" | xargs rm -f

-include $(COM_DIR)/*.d
-include $(READER_DIR)/*.d
-include $(OPT_DIR)/*.d
-include $(XGEN_DIR)/*.d
-include $(ELF_DIR)/*.d
-include $(MACH_DIR)/*.d
-include $(TARG_DIR)/*.d
-include $(CFE_DIR)/*.d
-include $(XOCC_DIR)/*.d
$(info "====---- END Makefile.xocc ----====")
