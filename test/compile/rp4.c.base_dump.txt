
==---- DUMP Loop Invariant Code Motion 'main' ----==
==-- DUMP ALL ACT --==
  ACT1:insert preheader BB8 of LOOP1
  ACT2:insert guard BB9 before prheader BB8
  ACT3:maintain DomTree: set BB10 dominates BB2
  ACT4:maintain DomTree: set BB9 dominates BB10
  ACT5:maintain DomTree: set BB8 dominates BB9
  ACT6:stpr execute at least once, thus it is moved from BB8 to BB9
==---- DUMP LICM Analysis Result : LoopInfo1 : 'main' ----==

==---- DUMP Natural Loop Info ----==
LOOP1 HEAD:BB2, BODY:2,3,
-- INVARIANT EXP (NUM=22) -- :
   intconst:i32 1|0x1 attachinfo:Dbx
   intconst:u32 4|0x4
   lda:*<40> 'x' attachinfo:Dbx
   $11:u32 attachinfo:Dbx
   intconst:u32 4|0x4
   lda:*<40> 'x' attachinfo:Dbx
   ld:i32 'n' attachinfo:Dbx,MDSSA
   $13:u32 attachinfo:Dbx
   intconst:u32 4|0x4
   intconst:u32 10|0xa
   ld:i32 'j' attachinfo:Dbx,MDSSA
   mul:u32 attachinfo:Dbx       
       ld:i32 'k' attachinfo:Dbx,MDSSA       
       intconst:u32 10|0xa
   $14:*<4> attachinfo:Dbx
   $12:u32 attachinfo:Dbx
   mul:u32 attachinfo:Dbx       
       $12:u32 attachinfo:Dbx       
       intconst:u32 4|0x4
   intconst:i32 1|0x1
   ld:i32 'k' attachinfo:Dbx,MDSSA
   lda:*<400> 'y' attachinfo:Dbx
   $15:i32
   add:*<4> attachinfo:Dbx       
       lda:*<400> 'y' attachinfo:Dbx       
       $13:u32 attachinfo:Dbx
   add:u32 attachinfo:Dbx       
       ld:i32 'j' attachinfo:Dbx,MDSSA       
       $11:u32 attachinfo:Dbx
   ild:i32 attachinfo:MDSSA,Dbx       
       $14:*<4> attachinfo:Dbx
-- INVARIANT STMT (NUM=5) -- :

   [9]        sum += x[i] + x[i+1] + y[k][j];
   
   stpr $11:u32 attachinfo:Dbx       
       mul:u32 attachinfo:Dbx           
           ld:i32 'k' decl:int  k  attachinfo:Dbx,MDSSA           
           intconst:u32 10|0xa
   stpr $12:u32 attachinfo:Dbx       
       add:u32 attachinfo:Dbx           
           ld:i32 'j' decl:int  j  attachinfo:Dbx,MDSSA           
           $11:u32 attachinfo:Dbx
   stpr $13:u32 attachinfo:Dbx       
       mul:u32 attachinfo:Dbx           
           $12:u32 attachinfo:Dbx           
           intconst:u32 4|0x4
   stpr $14:*<4> attachinfo:Dbx       
       add:*<4> attachinfo:Dbx           
           lda:*<400> 'y' decl:int  y [10][10] attachinfo:Dbx           
           $13:u32 attachinfo:Dbx
   stpr $15:i32 attachinfo:Dbx       
       ild:i32 attachinfo:MDSSA,Dbx           
           $14:*<4> attachinfo:Dbx
-- HOIST CAND (NUM=12) -- :
   add:u32 attachinfo:Dbx       
       ld:i32 'j' attachinfo:Dbx,MDSSA       
       $11:u32 attachinfo:Dbx
   stpr $11:u32 attachinfo:Dbx       
       mul:u32 attachinfo:Dbx           
           ld:i32 'k' attachinfo:Dbx,MDSSA           
           intconst:u32 10|0xa
   ld:i32 'n' attachinfo:Dbx,MDSSA
   stpr $13:u32 attachinfo:Dbx       
       mul:u32 attachinfo:Dbx           
           $12:u32 attachinfo:Dbx           
           intconst:u32 4|0x4
   mul:u32 attachinfo:Dbx       
       $12:u32 attachinfo:Dbx       
       intconst:u32 4|0x4
   ld:i32 'j' attachinfo:Dbx,MDSSA
   mul:u32 attachinfo:Dbx       
       ld:i32 'k' attachinfo:Dbx,MDSSA       
       intconst:u32 10|0xa
   stpr $14:*<4> attachinfo:Dbx       
       add:*<4> attachinfo:Dbx           
           lda:*<400> 'y' attachinfo:Dbx           
           $13:u32 attachinfo:Dbx
   stpr $12:u32 attachinfo:Dbx       
       add:u32 attachinfo:Dbx           
           ld:i32 'j' attachinfo:Dbx,MDSSA           
           $11:u32 attachinfo:Dbx
   add:*<4> attachinfo:Dbx       
       lda:*<400> 'y' attachinfo:Dbx       
       $13:u32 attachinfo:Dbx
   ild:i32 attachinfo:MDSSA,Dbx       
       $14:*<4> attachinfo:Dbx
   stpr $15:i32 attachinfo:Dbx       
       ild:i32 attachinfo:MDSSA,Dbx           
           $14:*<4> attachinfo:Dbx
-- HOISTED IR: --
  stpr $11:u32 attachinfo:Dbx
-- HOISTED IR: --
  stpr $12:u32 attachinfo:Dbx
-- HOISTED IR: --
  ld:i32 'n' attachinfo:Dbx,MDSSA
-- HOISTED IR: --
  stpr $13:u32 attachinfo:Dbx
-- HOISTED IR: --
  stpr $14:*<4> attachinfo:Dbx
-- HOISTED IR: --
  stpr $15:i32 attachinfo:Dbx
==---- DUMP Register Promotion 'main' ----==
  ==-- DUMP Dont Promotion Table --==
    ild:i32 attachinfo:MDSSA,Dbx
    ild:i32 attachinfo:MDSSA,Dbx
  ==-- DUMP ALL ACT --==
    ACT1:ild is swept out by ild, because:prevent by element in DontPromoteTab
==-- DUMP LoopInfo --==
  LOOP1 HEAD:BB2, BODY:2,3,
==-- DUMP ExactAccessTab --==
  DELEGATE:
    MD13 -- base:Var68(i):local,align(4),i32,decl:'int  i ' -- ofst:0 -- size:4
    ld:i32 'i' attachinfo:Dbx,MDSSA
    
    OCCLIST:
      ld:i32 'i' attachinfo:Dbx,MDSSA
      ld:i32 'i' attachinfo:Dbx,MDSSA
      ld:i32 'i' attachinfo:Dbx,MDSSA
      ld:i32 'i' attachinfo:Dbx,MDSSA
      st:i32 'i' attachinfo:Dbx,MDSSA
      ld:i32 'i' attachinfo:Dbx,MDSSA
  
  DELEGATE:
    MD15 -- base:Var67(sum):local,align(4),i32,decl:'int  sum ' -- ofst:0 -- size:4
    st:i32 'sum' attachinfo:Dbx,MDSSA
    
    OCCLIST:
      st:i32 'sum' attachinfo:Dbx,MDSSA
      ld:i32 'sum' attachinfo:Dbx,MDSSA
  
  
==-- DUMP InexactAccessTab --==
  
==-- DUMP DelegateMgr 'main' --==
  DELE2PR:
    --
    DELE:    ld:i32 'i' attachinfo:Dbx,MDSSA
    PR:    $24:i32
    --
    DELE:    st:i32 'sum' attachinfo:Dbx,MDSSA
    PR:    $25:i32
  DELE2INITSTPR:
  DELE2OutsideDefSet:
    --
    DELE:    ld:i32 'i' attachinfo:Dbx,MDSSA
    OutsideDefSet:      st:i32 'i' attachinfo:Dbx,MDSSA
  DELE2OutsideUseSet:
    --
    DELE:    st:i32 'sum' attachinfo:Dbx,MDSSA
    OutsideUseSet:      ld:i32 'sum' attachinfo:Dbx,MDSSA
  ==---- DUMP REF TO DELEGATE TABLE ----==
  ==---- DUMP DELEGATE TABLE ----==
  DELE2RESTORE:
  DELE2RESTORE:
    --
    DELE:    st:i32 'sum' attachinfo:Dbx,MDSSA
    RESTORE:
      st:i32 'sum' attachinfo:MDSSA          
          $29:i32