
//====---- Dump region '.program' ----====
region program @".program" () {

    var printf:i32:(func_decl,readonly,align(4));
    var x:mc<8>:(align(4));
    var y:mc<8>:(align(4));
    var p:*<8>:(align(4));
    var foobar:i32:(func_decl,align(4));
    var main:i32:(func_decl,align(4));
    var @"#DedicatedStringVar":str:(unallocable,align(4),string("DedicatedVarBeRegardedAsString"));
    var _const_string_1:str:(align(4),string("
success
"));
    //====---- Dump region 'foobar' ----====
    region func foobar () {

        var func_level_var_0:u32:(align(4));
        var func_level_var_1:u32:(align(4));
        var func_level_var_2:u32:(align(4));
        var func_level_var_3:u32:(align(4));
        var func_level_var_4:u32:(align(4));
        var func_level_var_5:u32:(align(4));
        var func_level_var_6:u32:(align(4));
        var func_level_var_7:u32:(align(4));
        st:i16:8 x = 0x2a:i32;
        ist:mc<8> = 
            ld:*<8> p,
            ld:mc<8> y;
        return 
            ld:i16:8 x;
    };
    //====---- Dump region 'main' ----====
    region func main () {

        var func_level_var_0:u32:(align(4));
        var func_level_var_1:u32:(align(4));
        var func_level_var_2:u32:(align(4));
        var func_level_var_3:u32:(align(4));
        var func_level_var_4:u32:(align(4));
        st:i16:8 y = 0x1:i32;
        st:*<8> p = 
            lda x;
        call:(use(
            ld:mc<8> y,
            ld:*<8> p,
            ld:mc<8> x)) $1:i32 = foobar();
        stpr $3:i32 = 
            cvt:i32 
                ld:i16:8 x;
        falsebr (
            eq:bool 
                $3:i32, 0x1:i32), _L1;
        call $2:i32 = printf(
            lda _const_string_1);
        return 0x0:i32;
        label _L1;
        return 0x1:i32;
    };
}