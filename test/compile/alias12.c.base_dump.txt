

==---- DUMP DUMgr: IR REFERENCE 'foo' ----==

==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR7(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo (int i ,)' -- ofst:unbound
MD6 -- base:VAR8(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD7 -- base:VAR6(x):local,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
==----==
RegionMayDef(OuterRegion):
RegionMayUse(OuterRegion):
--- BB3 ---
--- BB1 ---
    st:f32 'x' decl:int x  id:11 attachinfo:Dbx
    MMD7
    st:i32 'x' decl:int x  id:8 attachinfo:Dbx
    MMD7
    return id:10 attachinfo:Dbx
      ld:i32 'x' decl:int x  id:1 attachinfo:Dbx
      MMD7

==---- DUMP DUMgr: IR REFERENCE 'foo' ----==

==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR7(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo (int i ,)' -- ofst:unbound
MD6 -- base:VAR8(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD7 -- base:VAR6(x):local,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
==----==
RegionMayDef(OuterRegion):
RegionMayUse(OuterRegion):
--- BB3 ---
--- BB1 ---
    st:f32 'x' decl:int x  id:11 attachinfo:Dbx,MDSSA
    MMD7
    st:i32 'x' decl:int x  id:8 attachinfo:Dbx,MDSSA
    MMD7
    return id:10 attachinfo:Dbx
      ld:i32 'x' decl:int x  id:1 attachinfo:Dbx,MDSSA
      MMD7

==---- DUMP DUMgr 'foo' ----==

==---- DUMP NON-PR MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR7(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo (int i ,)' -- ofst:unbound
MD6 -- base:VAR8(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD7 -- base:VAR6(x):local,align(4),i32,decl:'int x ' -- ofst:0 -- size:4

==---- DUMP DUMgr DU CHAIN of 'foo' ----==

--- BB3 ---
--- BB1 ---

[4]    *(float*)&x = 2.3f;

st:f32 'x' decl:int x  id:11 attachinfo:Dbx,MDSSA    
    fpconst:f32 2.300000 id:6 attachinfo:Dbx

	>>st(id:11) DEFREF:MMD7
	  USE-EXP LIST:


[5]    x = 4;

st:i32 'x' decl:int x  id:8 attachinfo:Dbx,MDSSA    
    intconst:i32 4|0x4 id:2 attachinfo:Dbx

	>>st(id:8) DEFREF:MMD7
	  USE-EXP LIST:


[6]    return x;

return id:10 attachinfo:Dbx
    ld:i32 'x' decl:int x  id:1 attachinfo:Dbx,MDSSA

	>>ld(id:1) USEREF:MMD7
	  DEF-STMT LIST:


==---- DUMP DUMgr: IR REFERENCE 'foo' ----==

==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR7(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo (int i ,)' -- ofst:unbound
MD6 -- base:VAR8(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD7 -- base:VAR6(x):local,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
==----==
RegionMayDef(OuterRegion):
RegionMayUse(OuterRegion):
--- BB3 ---
--- BB1 ---
    st:f32 'x' decl:int x  id:11 attachinfo:Dbx,MDSSA
    MMD7
    st:i32 'x' decl:int x  id:8 attachinfo:Dbx,MDSSA
    MMD7
    return id:10 attachinfo:Dbx
      ld:i32 'x' decl:int x  id:1 attachinfo:Dbx,MDSSA
      MMD7

==---- DUMP DUMgr 'foo' ----==

==---- DUMP NON-PR MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR7(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo (int i ,)' -- ofst:unbound
MD6 -- base:VAR8(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD7 -- base:VAR6(x):local,align(4),i32,decl:'int x ' -- ofst:0 -- size:4

==---- DUMP DUMgr DU CHAIN of 'foo' ----==

--- BB3 ---
--- BB1 ---

[4]    *(float*)&x = 2.3f;

st:f32 'x' decl:int x  id:11 attachinfo:Dbx,MDSSA    
    fpconst:f32 2.300000 id:6 attachinfo:Dbx

	>>st(id:11) DEFREF:MMD7
	  USE-EXP LIST:


[5]    x = 4;

st:i32 'x' decl:int x  id:8 attachinfo:Dbx,MDSSA    
    intconst:i32 4|0x4 id:2 attachinfo:Dbx

	>>st(id:8) DEFREF:MMD7
	  USE-EXP LIST:ld(id:1)


[6]    return x;

return id:10 attachinfo:Dbx
    ld:i32 'x' decl:int x  id:1 attachinfo:Dbx,MDSSA

	>>ld(id:1) USEREF:MMD7
	  DEF-STMT LIST:st(id:8)


==---- DUMP DUMgr: IR REFERENCE '.program' ----==

==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR7(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo (int i ,)' -- ofst:unbound
MD6 -- base:VAR8(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD7 -- base:VAR6(x):local,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
==----==
RegionMayDef(OuterRegion):
RegionMayUse(OuterRegion):
--- BB3 ---
--- BB1 ---
    region 'foo',id:2 id:1

==---- DUMP DUMgr: IR REFERENCE '.program' ----==

==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR7(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo (int i ,)' -- ofst:unbound
MD6 -- base:VAR8(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD7 -- base:VAR6(x):local,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
==----==
RegionMayDef(OuterRegion):
RegionMayUse(OuterRegion):
--- BB3 ---
--- BB1 ---
    region 'foo',id:2 id:1

==---- DUMP DUMgr '.program' ----==

==---- DUMP NON-PR MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR7(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo (int i ,)' -- ofst:unbound
MD6 -- base:VAR8(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD7 -- base:VAR6(x):local,align(4),i32,decl:'int x ' -- ofst:0 -- size:4

==---- DUMP DUMgr DU CHAIN of '.program' ----==

--- BB3 ---
--- BB1 ---
region 'foo',id:2 id:1
    region-info:
    ==---- REGION(2):foo:int foo (int i ,) ----==
    FORMAL PARAMETERS:
      -- param0
      VAR5(i):local,formal_param,align(4),i32,decl:'int i ' param1
    VARIABLES:2
      VAR5(i):local,formal_param,align(4),i32,decl:'int i '
      VAR6(x):local,align(4),i32,decl:'int x '        
        MD7 -- base:VAR6(x):local,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
    RegionMayDef(OuterRegion):
    RegionMayUse(OuterRegion):
    'foo' use 5KB memory
    The number of IR Total:12, id:0(0.0)%, ld:1(8.3)%, st:2(16.7)%, lda:1(8.3)%,call:0(0.0)%, icall:0(0.0)%, pr:0(0.0)%, stpr:0(0.0)%, ist:0(0.0)%,bin:0(0.0)%, una:0(0.0)%
    ==---- DUMP IRBBList region 'foo' ----==
    ----- BB3 ------
    ATTR:entry_bb 
    STMT NUM:0
    
    ----- BB1 ------
    ATTR:fall_through 
    STMT NUM:3

       [4]    *(float*)&x = 2.3f;

       st:f32 'x' decl:int x  id:11 attachinfo:Dbx,MDSSA           
           fpconst:f32 2.300000 id:6 attachinfo:Dbx

       [5]    x = 4;

       st:i32 'x' decl:int x  id:8 attachinfo:Dbx,MDSSA           
           intconst:i32 4|0x4 id:2 attachinfo:Dbx

       [6]    return x;

       return id:10 attachinfo:Dbx
           ld:i32 'x' decl:int x  id:1 attachinfo:Dbx,MDSSA
    

	>>region(id:1) DEFREF:
	  USE-EXP LIST:


==---- DUMP DUMgr: IR REFERENCE '.program' ----==

==---- DUMP ALL MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR7(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo (int i ,)' -- ofst:unbound
MD6 -- base:VAR8(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD7 -- base:VAR6(x):local,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
==----==
RegionMayDef(OuterRegion):
RegionMayUse(OuterRegion):
--- BB3 ---
--- BB1 ---
    region 'foo',id:2 id:1

==---- DUMP DUMgr '.program' ----==

==---- DUMP NON-PR MD ----==
MD1 -- base:VAR1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:VAR2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:VAR3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:VAR7(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:VAR4(foo):global,,addr_taken,func_decl,align(4),i32,decl:'int foo (int i ,)' -- ofst:unbound
MD6 -- base:VAR8(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD7 -- base:VAR6(x):local,align(4),i32,decl:'int x ' -- ofst:0 -- size:4

==---- DUMP DUMgr DU CHAIN of '.program' ----==

--- BB3 ---
--- BB1 ---
region 'foo',id:2 id:1
    region-info:
    ==---- REGION(2):foo:int foo (int i ,) ----==
    FORMAL PARAMETERS:
      -- param0
      VAR5(i):local,formal_param,align(4),i32,decl:'int i ' param1
    VARIABLES:2
      VAR5(i):local,formal_param,align(4),i32,decl:'int i '
      VAR6(x):local,align(4),i32,decl:'int x '        
        MD7 -- base:VAR6(x):local,align(4),i32,decl:'int x ' -- ofst:0 -- size:4
    RegionMayDef(OuterRegion):
    RegionMayUse(OuterRegion):
    'foo' use 5KB memory
    The number of IR Total:12, id:0(0.0)%, ld:1(8.3)%, st:2(16.7)%, lda:1(8.3)%,call:0(0.0)%, icall:0(0.0)%, pr:0(0.0)%, stpr:0(0.0)%, ist:0(0.0)%,bin:0(0.0)%, una:0(0.0)%
    ==---- DUMP IRBBList region 'foo' ----==
    ----- BB3 ------
    ATTR:entry_bb 
    STMT NUM:0
    
    ----- BB1 ------
    ATTR:fall_through 
    STMT NUM:3

       [4]    *(float*)&x = 2.3f;

       st:f32 'x' decl:int x  id:11 attachinfo:Dbx,MDSSA           
           fpconst:f32 2.300000 id:6 attachinfo:Dbx

       [5]    x = 4;

       st:i32 'x' decl:int x  id:8 attachinfo:Dbx,MDSSA           
           intconst:i32 4|0x4 id:2 attachinfo:Dbx

       [6]    return x;

       return id:10 attachinfo:Dbx
           ld:i32 'x' decl:int x  id:1 attachinfo:Dbx,MDSSA
    

	>>region(id:1) DEFREF:
	  USE-EXP LIST:
