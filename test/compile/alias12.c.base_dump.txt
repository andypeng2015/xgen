
==---- DUMP Alias Analysis 'foo' ----==
  ==---- DUMP ALL MD ----==
  MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD4 -- base:Var61(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
  MD5 -- base:Var58(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int  i ,)' -- ofst:unbound
  MD6 -- base:Var62(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD7 -- base:Var60(x):local,align(4),i32,decl:'int  x ' -- ofst:0 -- size:4
  ==---- DUMP POINT-TO OUT-SET (FLOW SENSITIVE) 'foo' ----==
  --- BB3 ---
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- NO PT
  MD6 -- NO PT
  MD7 -- NO PT
  --- BB1 ---
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- NO PT
  MD6 -- NO PT
  MD7 -- NO PT
  -- DUMP WORSTCASE POINT-TO --
  MD2,MD3
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  -- DUMP IR POINT-TO FOR BB --

   -- BB3 --
    -- MD2MDSet: --
    MD1 -- PT_SET: MD1,
    MD2 -- PT_SET: MD2,MD3,
    MD3 -- PT_SET: MD2,MD3,
    MD4 -- NO PT
    MD5 -- NO PT
    MD6 -- NO PT
    MD7 -- NO PT

   -- BB1 --
    -- MD2MDSet: --
    MD1 -- PT_SET: MD1,
    MD2 -- PT_SET: MD2,MD3,
    MD3 -- PT_SET: MD2,MD3,
    MD4 -- NO PT
    MD5 -- NO PT
    MD6 -- NO PT
    MD7 -- NO PT

    -- IR POINT-TO: --
    ---------------------------------    

    [4]    *(float*)&x = 2.3f;
    
    st:f32 'x' attachinfo:Dbx        
        fpconst:f32 2.300000 attachinfo:Dbx
    LHS:
    st:f32 'x' attachinfo:Dbx
      MD7 -- base:Var60(x):local,align(4),i32,decl:'int  x ' -- ofst:0 -- size:4
        POINT TO:--
    RHS:
    >> MDSet DETAIL:
    ---------------------------------    

    [5]    x = 4;
    
    st:i32 'x' attachinfo:Dbx        
        intconst:i32 4|0x4 attachinfo:Dbx
    LHS:
    st:i32 'x' attachinfo:Dbx
      MD7 -- base:Var60(x):local,align(4),i32,decl:'int  x ' -- ofst:0 -- size:4
        POINT TO:--
    RHS:
    >> MDSet DETAIL:
    ---------------------------------    

    [6]    return x;
    
    return attachinfo:Dbx
        ld:i32 'x' attachinfo:Dbx
    
    ld:i32 'x' attachinfo:Dbx
      MD7 -- base:Var60(x):local,align(4),i32,decl:'int  x ' -- ofst:0 -- size:4
        POINT TO:--
    >> MDSet DETAIL:
    ld:i32 'x' attachinfo:Dbx
      MD7 -- base:Var60(x):local,align(4),i32,decl:'int  x ' -- ofst:0 -- size:4
        POINT TO:--
==---- DUMP DU Manager 'foo' ----==

  ==---- DUMP DUMgr: IR REFERENCE 'foo' ----==
  
  ==---- DUMP ALL MD ----==
  MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD4 -- base:Var61(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
  MD5 -- base:Var58(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int  i ,)' -- ofst:unbound
  MD6 -- base:Var62(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD7 -- base:Var60(x):local,align(4),i32,decl:'int  x ' -- ofst:0 -- size:4
  ==----==
  RegionMayDef(OuterRegion):
  RegionMayUse(OuterRegion):
  --- BB3 ---
  --- BB1 ---
      st:f32 'x' attachinfo:Dbx
      EMD7
      st:i32 'x' attachinfo:Dbx
      EMD7
      return attachinfo:Dbx
        ld:i32 'x' attachinfo:Dbx
        EMD7
==---- DUMP DU Manager 'foo' ----==

  ==---- DUMP DUMgr: IR REFERENCE 'foo' ----==
  
  ==---- DUMP ALL MD ----==
  MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD4 -- base:Var61(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
  MD5 -- base:Var58(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int  i ,)' -- ofst:unbound
  MD6 -- base:Var62(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD7 -- base:Var60(x):local,align(4),i32,decl:'int  x ' -- ofst:0 -- size:4
  ==----==
  RegionMayDef(OuterRegion):
  RegionMayUse(OuterRegion):
  --- BB3 ---
  --- BB1 ---
      st:f32 'x' attachinfo:Dbx,MDSSA
      EMD7
      st:i32 'x' attachinfo:Dbx,MDSSA
      EMD7
      return attachinfo:Dbx
        ld:i32 'x' attachinfo:Dbx,MDSSA
        EMD7
==---- DUMP Dead Code Eliminiation 'foo' ----==
  ==-- Ineffect BB --==
  --0- BB3		ineffect BB!
  --0- BB1		ineffect BB!
  
  ==---- DUMP IRBBList 'foo' ----==
  ----- BB3 --- rpo:0 -----
  ATTR:entry_bb fall_through 
  STMT NUM:0
  
  ----- BB1 --- rpo:5 -----
  ATTR:fall_through 
  STMT NUM:1
     return attachinfo:Dbx
         intconst:i32 4|0x4 attachinfo:Dbx
  
  ==---- DUMP BRIEF PRSSA Manager 'foo' ----==
  ==---- DUMP PRSSAMgr:VPR 'foo' ----==
  ==---- DUMP PRSSAMgr:VPR REF 'foo' ----==
  ----- BB3 --- rpo:0 -----
  ATTR:entry_bb fall_through 
  ----- BB1 --- rpo:5 -----
  ATTR:fall_through 
  -- <= --
  ==---- DUMP MDSSA Manager 'foo' ----==
    ==---- DUMP NON-PR MD ----==
    MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
    MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
    MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
    MD4 -- base:Var61(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
    MD5 -- base:Var58(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int  i ,)' -- ofst:unbound
    MD6 -- base:Var62(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
    MD7 -- base:Var60(x):local,align(4),i32,decl:'int  x ' -- ofst:0 -- size:4
    ==-- DUMP MDSSAMgr VOpndRef 'foo' --==
    
    --- BB3 ---
    --- BB1 ---
    
    return attachinfo:Dbx
        intconst:i32 4|0x4 attachinfo:Dbx
    ==-- DUMP MDSSAMgr DU CHAIN 'foo' --==
    
    ----- BB3 --- rpo:0 -----
    ATTR:entry_bb fall_through 
    ----- BB1 --- rpo:5 -----
    ATTR:fall_through 
    return attachinfo:Dbx
        intconst:i32 4|0x4 attachinfo:Dbx
==---- DUMP Alias Analysis 'foo' ----==
  ==---- DUMP ALL MD ----==
  MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD4 -- base:Var61(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
  MD5 -- base:Var58(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int  i ,)' -- ofst:unbound
  MD6 -- base:Var62(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD7 -- base:Var60(x):local,align(4),i32,decl:'int  x ' -- ofst:0 -- size:4
  ==---- DUMP POINT-TO OUT-SET (FLOW-INSENSITIVE) 'foo' ----==
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- NO PT
  MD6 -- NO PT
  MD7 -- NO PT
  -- DUMP WORSTCASE POINT-TO --
  MD2,MD3
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  -- DUMP IR POINT-TO FOR BB --

   -- BB3 --
    -- MD2MDSet: --
    MD1 -- PT_SET: MD1,
    MD2 -- PT_SET: MD2,MD3,
    MD3 -- PT_SET: MD2,MD3,
    MD4 -- NO PT
    MD5 -- NO PT
    MD6 -- NO PT
    MD7 -- NO PT

   -- BB1 --
    -- MD2MDSet: --
    MD1 -- PT_SET: MD1,
    MD2 -- PT_SET: MD2,MD3,
    MD3 -- PT_SET: MD2,MD3,
    MD4 -- NO PT
    MD5 -- NO PT
    MD6 -- NO PT
    MD7 -- NO PT

    -- IR POINT-TO: --
    ---------------------------------    
    return attachinfo:Dbx
        intconst:i32 4|0x4 attachinfo:Dbx
    
    >> MDSet DETAIL:
==---- DUMP Alias Analysis 'foo' ----==
  ==---- DUMP ALL MD ----==
  MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD4 -- base:Var61(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
  MD5 -- base:Var58(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int  i ,)' -- ofst:unbound
  MD6 -- base:Var62(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD7 -- base:Var60(x):local,align(4),i32,decl:'int  x ' -- ofst:0 -- size:4
  ==---- DUMP POINT-TO OUT-SET (FLOW SENSITIVE) 'foo' ----==
  --- BB3 ---
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- NO PT
  MD6 -- NO PT
  MD7 -- NO PT
  --- BB1 ---
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- NO PT
  MD6 -- NO PT
  MD7 -- NO PT
  -- DUMP WORSTCASE POINT-TO --
  MD2,MD3
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  -- DUMP IR POINT-TO FOR BB --

   -- BB3 --
    -- MD2MDSet: --
    MD1 -- PT_SET: MD1,
    MD2 -- PT_SET: MD2,MD3,
    MD3 -- PT_SET: MD2,MD3,
    MD4 -- NO PT
    MD5 -- NO PT
    MD6 -- NO PT
    MD7 -- NO PT

   -- BB1 --
    -- MD2MDSet: --
    MD1 -- PT_SET: MD1,
    MD2 -- PT_SET: MD2,MD3,
    MD3 -- PT_SET: MD2,MD3,
    MD4 -- NO PT
    MD5 -- NO PT
    MD6 -- NO PT
    MD7 -- NO PT

    -- IR POINT-TO: --
    ---------------------------------    
    return attachinfo:Dbx
        intconst:i32 4|0x4 attachinfo:Dbx
    
    >> MDSet DETAIL:
==---- DUMP DU Manager 'foo' ----==

  ==---- DUMP DUMgr: IR REFERENCE 'foo' ----==
  
  ==---- DUMP ALL MD ----==
  MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD4 -- base:Var61(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
  MD5 -- base:Var58(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int  i ,)' -- ofst:unbound
  MD6 -- base:Var62(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD7 -- base:Var60(x):local,align(4),i32,decl:'int  x ' -- ofst:0 -- size:4
  ==----==
  RegionMayDef(OuterRegion):
  RegionMayUse(OuterRegion):
  --- BB3 ---
  --- BB1 ---
      return attachinfo:Dbx
==---- DUMP Alias Analysis '.program' ----==
  ==---- DUMP ALL MD ----==
  MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD4 -- base:Var61(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
  MD5 -- base:Var58(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int  i ,)' -- ofst:unbound
  MD6 -- base:Var62(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD7 -- base:Var60(x):local,align(4),i32,decl:'int  x ' -- ofst:0 -- size:4
  ==---- DUMP POINT-TO OUT-SET (FLOW SENSITIVE) '.program' ----==
  --- BB3 ---
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- NO PT
  MD7 -- NO PT
  --- BB1 ---
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- NO PT
  MD7 -- NO PT
  -- DUMP WORSTCASE POINT-TO --
  MD2,MD3
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  -- DUMP IR POINT-TO FOR BB --

   -- BB3 --
    -- MD2MDSet: --
    MD1 -- PT_SET: MD1,
    MD2 -- PT_SET: MD2,MD3,
    MD3 -- PT_SET: MD2,MD3,
    MD4 -- NO PT
    MD5 -- PT_SET: MD2,MD3,
    MD6 -- NO PT
    MD7 -- NO PT

   -- BB1 --
    -- MD2MDSet: --
    MD1 -- PT_SET: MD1,
    MD2 -- PT_SET: MD2,MD3,
    MD3 -- PT_SET: MD2,MD3,
    MD4 -- NO PT
    MD5 -- PT_SET: MD2,MD3,
    MD6 -- NO PT
    MD7 -- NO PT

    -- IR POINT-TO: --
    ---------------------------------    
    region 'foo',id:2
    
==---- DUMP DU Manager '.program' ----==

  ==---- DUMP DUMgr: IR REFERENCE '.program' ----==
  
  ==---- DUMP ALL MD ----==
  MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD4 -- base:Var61(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
  MD5 -- base:Var58(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int  i ,)' -- ofst:unbound
  MD6 -- base:Var62(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD7 -- base:Var60(x):local,align(4),i32,decl:'int  x ' -- ofst:0 -- size:4
  ==----==
  RegionMayDef(OuterRegion):
  RegionMayUse(OuterRegion):
  --- BB3 ---
  --- BB1 ---
      region 'foo',id:2
==---- DUMP DU Manager '.program' ----==

  ==---- DUMP DUMgr: IR REFERENCE '.program' ----==
  
  ==---- DUMP ALL MD ----==
  MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD4 -- base:Var61(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
  MD5 -- base:Var58(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int  i ,)' -- ofst:unbound
  MD6 -- base:Var62(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD7 -- base:Var60(x):local,align(4),i32,decl:'int  x ' -- ofst:0 -- size:4
  ==----==
  RegionMayDef(OuterRegion):
  RegionMayUse(OuterRegion):
  --- BB3 ---
  --- BB1 ---
      region 'foo',id:2
==---- DUMP Alias Analysis '.program' ----==
  ==---- DUMP ALL MD ----==
  MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD4 -- base:Var61(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
  MD5 -- base:Var58(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int  i ,)' -- ofst:unbound
  MD6 -- base:Var62(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD7 -- base:Var60(x):local,align(4),i32,decl:'int  x ' -- ofst:0 -- size:4
  ==---- DUMP POINT-TO OUT-SET (FLOW-INSENSITIVE) '.program' ----==
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- NO PT
  MD7 -- NO PT
  -- DUMP WORSTCASE POINT-TO --
  MD2,MD3
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  -- DUMP IR POINT-TO FOR BB --

   -- BB3 --
    -- MD2MDSet: --
    MD1 -- PT_SET: MD1,
    MD2 -- PT_SET: MD2,MD3,
    MD3 -- PT_SET: MD2,MD3,
    MD4 -- NO PT
    MD5 -- PT_SET: MD2,MD3,
    MD6 -- NO PT
    MD7 -- NO PT

   -- BB1 --
    -- MD2MDSet: --
    MD1 -- PT_SET: MD1,
    MD2 -- PT_SET: MD2,MD3,
    MD3 -- PT_SET: MD2,MD3,
    MD4 -- NO PT
    MD5 -- PT_SET: MD2,MD3,
    MD6 -- NO PT
    MD7 -- NO PT

    -- IR POINT-TO: --
    ---------------------------------    
    region 'foo',id:2
    
==---- DUMP Alias Analysis '.program' ----==
  ==---- DUMP ALL MD ----==
  MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD4 -- base:Var61(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
  MD5 -- base:Var58(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int  i ,)' -- ofst:unbound
  MD6 -- base:Var62(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD7 -- base:Var60(x):local,align(4),i32,decl:'int  x ' -- ofst:0 -- size:4
  ==---- DUMP POINT-TO OUT-SET (FLOW SENSITIVE) '.program' ----==
  --- BB3 ---
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- NO PT
  MD7 -- NO PT
  --- BB1 ---
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- NO PT
  MD7 -- NO PT
  -- DUMP WORSTCASE POINT-TO --
  MD2,MD3
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  -- DUMP IR POINT-TO FOR BB --

   -- BB3 --
    -- MD2MDSet: --
    MD1 -- PT_SET: MD1,
    MD2 -- PT_SET: MD2,MD3,
    MD3 -- PT_SET: MD2,MD3,
    MD4 -- NO PT
    MD5 -- PT_SET: MD2,MD3,
    MD6 -- NO PT
    MD7 -- NO PT

   -- BB1 --
    -- MD2MDSet: --
    MD1 -- PT_SET: MD1,
    MD2 -- PT_SET: MD2,MD3,
    MD3 -- PT_SET: MD2,MD3,
    MD4 -- NO PT
    MD5 -- PT_SET: MD2,MD3,
    MD6 -- NO PT
    MD7 -- NO PT

    -- IR POINT-TO: --
    ---------------------------------    
    region 'foo',id:2
    
==---- DUMP DU Manager '.program' ----==

  ==---- DUMP DUMgr: IR REFERENCE '.program' ----==
  
  ==---- DUMP ALL MD ----==
  MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD4 -- base:Var61(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
  MD5 -- base:Var58(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int  i ,)' -- ofst:unbound
  MD6 -- base:Var62(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD7 -- base:Var60(x):local,align(4),i32,decl:'int  x ' -- ofst:0 -- size:4
  ==----==
  RegionMayDef(OuterRegion):
  RegionMayUse(OuterRegion):
  --- BB3 ---
  --- BB1 ---
      region 'foo',id:2