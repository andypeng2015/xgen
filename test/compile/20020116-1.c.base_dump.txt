

==---- DUMP DUMgr: IR REFERENCE 'main' ----==

==---- DUMP ALL MD ----==
MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:Var67(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:Var58(noret):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'void  noret ()' -- ofst:unbound
MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int ,unsigned char  *  * ,)' -- ofst:unbound
MD7 -- base:Var60(a):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  a ' -- ofst:0 -- size:4
MD8 -- base:Var61(b):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  b ' -- ofst:0 -- size:4
MD9 -- base:Var62(d):global,,addr_taken,align(4),i32,decl:'int  d ' -- ofst:0 -- size:4
MD10 -- base:Var63(main):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  main (int  argc ,unsigned char  *  *  argv ,)' -- ofst:unbound
MD11 -- base:Var68(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD12 -- base:Var71(pr3):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD13 -- base:Var64(argc):local,formal_param,align(4),i32,decl:'int  argc ' -- ofst:0 -- size:4
MD14 -- base:Var65(argv):local,formal_param,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'unsigned char  *  *  argv ' -- ofst:0 -- size:4
MD15 -- base:Var66(c):local,align(4),i32,decl:'register int  c ' -- ofst:0 -- size:4
MD16 -- base:Var69(pr1):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD17 -- base:Var70(pr2):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
==----==
RegionMayDef(OuterRegion):MD2,MD3
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
RegionMayUse(OuterRegion):MD2,MD3,MD8
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD8 -- base:Var61(b):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  b ' -- ofst:0 -- size:4
--- BB45 ---
--- BB1 ---
    st:i32 'd' attachinfo:Dbx
    EMD9 : MD2
    $1:i32 = call 'foo'  attachinfo:Dbx
    EMD16 : MD2,MD3 <-- MD2,MD3
      ld:i32 'argc' attachinfo:Dbx
      EMD13
      ld:*<4> 'argv' attachinfo:Dbx
      EMD14
      ild:any
       : MD2,MD3
--- BB2 ---
    st:i32 'c' attachinfo:Dbx
    EMD15
      $1:i32 attachinfo:Dbx
      EMD16
--- BB3 ---
    falsebr label _$L7 attachinfo:Dbx
      ne:bool attachinfo:Dbx
        $1:i32 attachinfo:Dbx
        EMD16
--- BB4 ---
    stpr $3:i32 attachinfo:Dbx
    EMD12
      ld:i32 'c' attachinfo:Dbx
      EMD15
    truebr label _$L18
      eq:bool
        $3:i32 attachinfo:Dbx
        EMD12
--- BB8 ---
    truebr label _$L18
      eq:bool
        $3:i32 attachinfo:Dbx
        EMD12
--- BB12 ---
    truebr label _$L18
      eq:bool
        $3:i32 attachinfo:Dbx
        EMD12
--- BB16 ---
    truebr label _$L4
      eq:bool
        $3:i32 attachinfo:Dbx
        EMD12
--- BB20 ---
    falsebr label _$L8
      eq:bool
        $3:i32 attachinfo:Dbx
        EMD12
--- BB21 ---
    goto label _$L5
--- BB33 ---
    st:*<1> 'a' attachinfo:Dbx
    EMD7 : MD2
      ld:*<1> 'b' attachinfo:Dbx
      EMD8 : MD2
    goto label _$L8 attachinfo:Dbx
--- BB35 ---
    st:i32 'd' attachinfo:Dbx
    EMD9 : MD2
    goto label _$L8 attachinfo:Dbx
--- BB37 ---
    st:i32 'd' attachinfo:Dbx
    EMD9 : MD2
--- BB39 ---
    $1:i32 = call 'foo'  attachinfo:Dbx
    EMD16 : MD2,MD3 <-- MD2,MD3
      ld:i32 'argc' attachinfo:Dbx
      EMD13
      ld:*<4> 'argv' attachinfo:Dbx
      EMD14
      ild:any
       : MD2,MD3
--- BB40 ---
    st:i32 'c' attachinfo:Dbx
    EMD15
      $1:i32 attachinfo:Dbx
      EMD16
    goto label _$L6
--- BB42 ---
    $2:i32 = call 'noret'  attachinfo:Dbx
    EMD17 : MD2,MD3 <-- MD2,MD3
      ild:any
       : MD2,MD3
--- BB43 ---
    return attachinfo:Dbx
==---- DUMP PRSSA Manager 'main' ----==
==---- DUMP PRSSAMgr:VPR 'main' ----==

VPR1:$1v0--: DEF:---	USE:
VPR2:$3v0--: DEF:---	USE:
VPR3:$2v0--: DEF:---	USE:
VPR4:$1v1$4: DEF:call ($4,id:8)	USE:($4,id:9),($4,id:106)
VPR0:--v0--: DEF:---	USE:
VPR6:$1v2$5: DEF:phi ($5,id:48)	USE:($5,id:1)
VPR7:$3v2$7: DEF:stpr ($7,id:54)	USE:($7,id:55),($7,id:58),($7,id:62),($7,id:66),($7,id:70)
VPR8:$1v3$6: DEF:call ($6,id:14)	USE:($6,id:18),($6,id:105)
VPR9:$2v1$8: DEF:call ($8,id:50)	USE:
--- BB45 ---
--- BB1 ---
    ------------------

    [11]  d = 1;
    
    st:i32 'd' decl:int  d  attachinfo:Dbx        
        intconst:i32 1|0x1 attachinfo:Dbx
    VP:-- <= --
    ------------------

    [12]  while ((c = foo (argc, argv)) != -1)
    
    $4:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) attachinfo:Dbx
        ld:i32 'argc' decl:int  argc  param0 attachinfo:Dbx
        ld:*<4> 'argv' decl:unsigned char  *  *  argv  param1 attachinfo:Dbx
        ild:any dummy0            
            intconst:any 0|0x0
    VP:$1v1$4  <= --
--- BB2 ---
    ------------------
    st:i32 'c' decl:register int  c  attachinfo:Dbx        
        $4:i32 attachinfo:Dbx
    VP:-- <= $1v1$4
--- BB3 ---
    ------------------
    $5:i32 = phi
        $4:i32
        $6:i32
    VP:$1v2$5  <= $1v1$4,$1v3$6
    ------------------
    falsebr label _$L7 attachinfo:Dbx        
        ne:bool attachinfo:Dbx            
            $5:i32 attachinfo:Dbx            
            intconst:i32 -1|0xffffffffffffffff attachinfo:Dbx
    VP:-- <= $1v2$5
--- BB4 ---
    ------------------

    [13]    switch (c) {
    
    stpr $7:i32 attachinfo:Dbx        
        ld:i32 'c' decl:register int  c  attachinfo:Dbx
    VP:$3v2$7  <= --
    ------------------
    truebr label _$L18        
        eq:bool            
            $7:i32 attachinfo:Dbx            
            intconst:i32 115|0x73
    VP:-- <= $3v2$7
--- BB8 ---
    ------------------
    truebr label _$L18        
        eq:bool            
            $7:i32 attachinfo:Dbx            
            intconst:i32 99|0x63
    VP:-- <= $3v2$7
--- BB12 ---
    ------------------
    truebr label _$L18        
        eq:bool            
            $7:i32 attachinfo:Dbx            
            intconst:i32 102|0x66
    VP:-- <= $3v2$7
--- BB16 ---
    ------------------
    truebr label _$L4        
        eq:bool            
            $7:i32 attachinfo:Dbx            
            intconst:i32 118|0x76
    VP:-- <= $3v2$7
--- BB20 ---
    ------------------
    falsebr label _$L8        
        eq:bool            
            $7:i32 attachinfo:Dbx            
            intconst:i32 86|0x56
    VP:-- <= $3v2$7
--- BB21 ---
    ------------------
    goto label _$L5
    VP:-- <= --
--- BB33 ---
    ------------------

    [17]      a = b;
    
    st:*<1> 'a' decl:unsigned char  *  a  attachinfo:Dbx        
        ld:*<1> 'b' decl:unsigned char  *  b  attachinfo:Dbx
    VP:-- <= --
    ------------------

    [18]      break;
    
    goto label _$L8 attachinfo:Dbx
    VP:-- <= --
--- BB35 ---
    ------------------

    [20]      d = 1;
    
    st:i32 'd' decl:int  d  attachinfo:Dbx        
        intconst:i32 1|0x1 attachinfo:Dbx
    VP:-- <= --
    ------------------

    [21]      break;
    
    goto label _$L8 attachinfo:Dbx
    VP:-- <= --
--- BB37 ---
    ------------------

    [23]      d = 0;
    
    st:i32 'd' decl:int  d  attachinfo:Dbx        
        intconst:i32 0|0x0 attachinfo:Dbx
    VP:-- <= --
--- BB39 ---
    ------------------

    [12]  while ((c = foo (argc, argv)) != -1)
    
    $6:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) attachinfo:Dbx
        ld:i32 'argc' decl:int  argc  param0 attachinfo:Dbx
        ld:*<4> 'argv' decl:unsigned char  *  *  argv  param1 attachinfo:Dbx
        ild:any dummy0            
            intconst:any 0|0x0
    VP:$1v3$6  <= --
--- BB40 ---
    ------------------
    st:i32 'c' decl:register int  c  attachinfo:Dbx        
        $6:i32 attachinfo:Dbx
    VP:-- <= $1v3$6
    ------------------
    goto label _$L6
    VP:-- <= --
--- BB42 ---
    ------------------

    [26]  noret ();
    
    $8:i32 = call 'noret' decl:void  noret () attachinfo:Dbx
        ild:any dummy0            
            intconst:any 0|0x0
    VP:$2v1$8  <= --
--- BB43 ---
    ------------------

    [27]  return 0;
    
    return attachinfo:Dbx
        intconst:i32 0|0x0 attachinfo:Dbx
    VP:-- <= --
==---- DUMP Dominator Frontier Control Set ----==

BB1 DF set:
BB2 DF set:
BB3 DF set:3,
BB4 DF set:3,
BB8 DF set:33,39,
BB12 DF set:33,39,
BB16 DF set:39,
BB20 DF set:39,
BB21 DF set:39,
BB33 DF set:39,
BB35 DF set:39,
BB37 DF set:39,
BB39 DF set:3,
BB40 DF set:3,
BB42 DF set:
BB43 DF set:
BB45 DF set:
==---- DUMP MDSSA Manager 'main' ----==
==---- DUMP NON-PR MD ----==
MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:Var67(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:Var58(noret):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'void  noret ()' -- ofst:unbound
MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int ,unsigned char  *  * ,)' -- ofst:unbound
MD7 -- base:Var60(a):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  a ' -- ofst:0 -- size:4
MD8 -- base:Var61(b):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  b ' -- ofst:0 -- size:4
MD9 -- base:Var62(d):global,,addr_taken,align(4),i32,decl:'int  d ' -- ofst:0 -- size:4
MD10 -- base:Var63(main):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  main (int  argc ,unsigned char  *  *  argv ,)' -- ofst:unbound
MD11 -- base:Var68(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD13 -- base:Var64(argc):local,formal_param,align(4),i32,decl:'int  argc ' -- ofst:0 -- size:4
MD14 -- base:Var65(argv):local,formal_param,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'unsigned char  *  *  argv ' -- ofst:0 -- size:4
MD15 -- base:Var66(c):local,align(4),i32,decl:'register int  c ' -- ofst:0 -- size:4
==-- DUMP MDSSAMgr VOpndRef 'main' --==

--- BB45 ---
--- BB1 ---


[11]  d = 1;

st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA    
    intconst:i32 1|0x1 attachinfo:Dbx
  ----
  st:i32 'd' attachinfo:Dbx,MDSSA
  --DEFVMD:(MD9V1,-,NextDEF:MD9V2,,NextDEF:MD9V3)|USESET:
  --DEFVMD:(MD2V1,-,NextDEF:MD2V2)|USESET:ild(id:98)


[12]  while ((c = foo (argc, argv)) != -1)

$4:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) attachinfo:Dbx,MDSSA
    ld:i32 'argc' decl:int  argc  param0 attachinfo:Dbx,MDSSA
    ld:*<4> 'argv' decl:unsigned char  *  *  argv  param1 attachinfo:Dbx,MDSSA
    ild:any dummy0 attachinfo:MDSSA        
        intconst:any 0|0x0
  ----
  $4:i32 = call 'foo'  attachinfo:Dbx,MDSSA
  --DEFVMD:(MD2V2,PrevDEF:MD2V1)|USESET:id(id:110)
  --DEFVMD:(MD3V1,-)|USESET:id(id:112)
  ld:i32 'argc' attachinfo:Dbx,MDSSA
  --USEVMD:MD13V0
  ild:any attachinfo:MDSSA
  --USEVMD:MD3V0,MD2V1
  ld:*<4> 'argv' attachinfo:Dbx,MDSSA
  --USEVMD:MD14V0
--- BB2 ---

st:i32 'c' decl:register int  c  attachinfo:Dbx,MDSSA    
    $4:i32 attachinfo:Dbx
  ----
  st:i32 'c' attachinfo:Dbx,MDSSA
  --DEFVMD:(MD15V1,-)|USESET:id(id:114)
--- BB3 ---
MDPhi4: MD15V2 <- (ID id:114 MD15V1 BB2), (ID id:115 MD15V3 BB40)|USESET:(ld id:19) 
MDPhi3: MD3V2 <- (ID id:112 MD3V1 BB2), (ID id:113 MD3V3 BB40)|USESET:(ild id:99) (ild id:100) 
MDPhi2: MD2V3 <- (ID id:110 MD2V2 BB2), (ID id:111 MD2V8 BB40)|USESET:(ild id:100) (id id:109) (ld id:24) 

$5:i32 = phi
    $4:i32
    $6:i32

falsebr label _$L7 attachinfo:Dbx    
    ne:bool attachinfo:Dbx        
        $5:i32 attachinfo:Dbx        
        intconst:i32 -1|0xffffffffffffffff attachinfo:Dbx
--- BB4 ---


[13]    switch (c) {

stpr $7:i32 attachinfo:Dbx    
    ld:i32 'c' decl:register int  c  attachinfo:Dbx,MDSSA
  ----
  ld:i32 'c' attachinfo:Dbx,MDSSA
  --USEVMD:MD15V2

truebr label _$L18    
    eq:bool        
        $7:i32 attachinfo:Dbx        
        intconst:i32 115|0x73
--- BB8 ---

truebr label _$L18    
    eq:bool        
        $7:i32 attachinfo:Dbx        
        intconst:i32 99|0x63
--- BB12 ---

truebr label _$L18    
    eq:bool        
        $7:i32 attachinfo:Dbx        
        intconst:i32 102|0x66
--- BB16 ---

truebr label _$L4    
    eq:bool        
        $7:i32 attachinfo:Dbx        
        intconst:i32 118|0x76
--- BB20 ---

falsebr label _$L8    
    eq:bool        
        $7:i32 attachinfo:Dbx        
        intconst:i32 86|0x56
--- BB21 ---

goto label _$L5
--- BB33 ---


[17]      a = b;

st:*<1> 'a' decl:unsigned char  *  a  attachinfo:Dbx,MDSSA    
    ld:*<1> 'b' decl:unsigned char  *  b  attachinfo:Dbx,MDSSA
  ----
  st:*<1> 'a' attachinfo:Dbx,MDSSA
  --DEFVMD:(MD2V6,PrevDEF:MD2V3)|USESET:id(id:102)
  --DEFVMD:(MD7V1,-)|USESET:
  ld:*<1> 'b' attachinfo:Dbx,MDSSA
  --USEVMD:MD8V0,MD2V3


[18]      break;

goto label _$L8 attachinfo:Dbx
--- BB35 ---


[20]      d = 1;

st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA    
    intconst:i32 1|0x1 attachinfo:Dbx
  ----
  st:i32 'd' attachinfo:Dbx,MDSSA
  --DEFVMD:(MD9V3,PrevDEF:MD9V1)|USESET:
  --DEFVMD:(MD2V5,PrevDEF:MD2V3)|USESET:id(id:107)


[21]      break;

goto label _$L8 attachinfo:Dbx
--- BB37 ---


[23]      d = 0;

st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA    
    intconst:i32 0|0x0 attachinfo:Dbx
  ----
  st:i32 'd' attachinfo:Dbx,MDSSA
  --DEFVMD:(MD9V2,PrevDEF:MD9V1)|USESET:
  --DEFVMD:(MD2V4,PrevDEF:MD2V3)|USESET:id(id:108)
--- BB39 ---
MDPhi1: MD2V7 <- (ID id:102 MD2V6 BB33), (ID id:107 MD2V5 BB35), (ID id:108 MD2V4 BB37), (ID id:109 MD2V3 BB20)|USESET:(ild id:99) 


[12]  while ((c = foo (argc, argv)) != -1)

$6:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) attachinfo:Dbx,MDSSA
    ld:i32 'argc' decl:int  argc  param0 attachinfo:Dbx,MDSSA
    ld:*<4> 'argv' decl:unsigned char  *  *  argv  param1 attachinfo:Dbx,MDSSA
    ild:any dummy0 attachinfo:MDSSA        
        intconst:any 0|0x0
  ----
  $6:i32 = call 'foo'  attachinfo:Dbx,MDSSA
  --DEFVMD:(MD2V8,PrevDEF:MD2V7)|USESET:id(id:111)
  --DEFVMD:(MD3V3,PrevDEF:MD3V2)|USESET:id(id:113)
  ld:i32 'argc' attachinfo:Dbx,MDSSA
  --USEVMD:MD13V0
  ild:any attachinfo:MDSSA
  --USEVMD:MD3V2,MD2V7
  ld:*<4> 'argv' attachinfo:Dbx,MDSSA
  --USEVMD:MD14V0
--- BB40 ---

st:i32 'c' decl:register int  c  attachinfo:Dbx,MDSSA    
    $6:i32 attachinfo:Dbx
  ----
  st:i32 'c' attachinfo:Dbx,MDSSA
  --DEFVMD:(MD15V3,PrevDEF:MD15V2)|USESET:id(id:115)

goto label _$L6
--- BB42 ---


[26]  noret ();

$8:i32 = call 'noret' decl:void  noret () attachinfo:Dbx,MDSSA
    ild:any dummy0 attachinfo:MDSSA        
        intconst:any 0|0x0
  ----
  $8:i32 = call 'noret'  attachinfo:Dbx,MDSSA
  --DEFVMD:(MD2V9,PrevDEF:MD2V3)|USESET:
  --DEFVMD:(MD3V4,PrevDEF:MD3V2)|USESET:
  ild:any attachinfo:MDSSA
  --USEVMD:MD3V2,MD2V3
--- BB43 ---


[27]  return 0;

return attachinfo:Dbx
    intconst:i32 0|0x0 attachinfo:Dbx
==-- DUMP MDSSAMgr DU CHAIN 'main' --==

--- BB45 ---
--- BB1 ---

[11]  d = 1;

st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA    
    intconst:i32 1|0x1 attachinfo:Dbx
----------------
st(id:3) USESET:
  MD9V1:
  MD2V1:(ild id:98) 

[12]  while ((c = foo (argc, argv)) != -1)

$4:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) attachinfo:Dbx,MDSSA
    ld:i32 'argc' decl:int  argc  param0 attachinfo:Dbx,MDSSA
    ld:*<4> 'argv' decl:unsigned char  *  *  argv  param1 attachinfo:Dbx,MDSSA
    ild:any dummy0 attachinfo:MDSSA        
        intconst:any 0|0x0
----------------
call(id:8) USESET:
  MD2V2:(id id:110) 
  MD3V1:(id id:112) 
ld(id:6) DEFSET:
  MD13V0:
ild(id:98) DEFSET:
  MD3V0:
  MD2V1:(st id:3)
ld(id:7) DEFSET:
  MD14V0:
--- BB2 ---
st:i32 'c' decl:register int  c  attachinfo:Dbx,MDSSA    
    $4:i32 attachinfo:Dbx
----------------
st(id:10) USESET:
  MD15V1:(id id:114) 
--- BB3 ---
MDPhi4: MD15V2 <- (ID id:114 MD15V1 BB2), (ID id:115 MD15V3 BB40)|USESET:(ld id:19) 
MDPhi3: MD3V2 <- (ID id:112 MD3V1 BB2), (ID id:113 MD3V3 BB40)|USESET:(ild id:99) (ild id:100) 
MDPhi2: MD2V3 <- (ID id:110 MD2V2 BB2), (ID id:111 MD2V8 BB40)|USESET:(ild id:100) (id id:109) (ld id:24) 
$5:i32 = phi
    $4:i32
    $6:i32
falsebr label _$L7 attachinfo:Dbx    
    ne:bool attachinfo:Dbx        
        $5:i32 attachinfo:Dbx        
        intconst:i32 -1|0xffffffffffffffff attachinfo:Dbx
--- BB4 ---

[13]    switch (c) {

stpr $7:i32 attachinfo:Dbx    
    ld:i32 'c' decl:register int  c  attachinfo:Dbx,MDSSA
----------------
ld(id:19) DEFSET:
  MD15V2:mdphi4 (st id:10) (st id:17)
truebr label _$L18    
    eq:bool        
        $7:i32 attachinfo:Dbx        
        intconst:i32 115|0x73
--- BB8 ---
truebr label _$L18    
    eq:bool        
        $7:i32 attachinfo:Dbx        
        intconst:i32 99|0x63
--- BB12 ---
truebr label _$L18    
    eq:bool        
        $7:i32 attachinfo:Dbx        
        intconst:i32 102|0x66
--- BB16 ---
truebr label _$L4    
    eq:bool        
        $7:i32 attachinfo:Dbx        
        intconst:i32 118|0x76
--- BB20 ---
falsebr label _$L8    
    eq:bool        
        $7:i32 attachinfo:Dbx        
        intconst:i32 86|0x56
--- BB21 ---
goto label _$L5
--- BB33 ---

[17]      a = b;

st:*<1> 'a' decl:unsigned char  *  a  attachinfo:Dbx,MDSSA    
    ld:*<1> 'b' decl:unsigned char  *  b  attachinfo:Dbx,MDSSA
----------------
st(id:25) USESET:
  MD2V6:(id id:102) 
  MD7V1:
ld(id:24) DEFSET:
  MD8V0:
  MD2V3:mdphi2 (call id:8) (call id:14) (st id:3) mdphi1 (st id:25) (st id:30) (st id:35)

[18]      break;

goto label _$L8 attachinfo:Dbx
--- BB35 ---

[20]      d = 1;

st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA    
    intconst:i32 1|0x1 attachinfo:Dbx
----------------
st(id:30) USESET:
  MD9V3:
  MD2V5:(id id:107) 

[21]      break;

goto label _$L8 attachinfo:Dbx
--- BB37 ---

[23]      d = 0;

st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA    
    intconst:i32 0|0x0 attachinfo:Dbx
----------------
st(id:35) USESET:
  MD9V2:
  MD2V4:(id id:108) 
--- BB39 ---
MDPhi1: MD2V7 <- (ID id:102 MD2V6 BB33), (ID id:107 MD2V5 BB35), (ID id:108 MD2V4 BB37), (ID id:109 MD2V3 BB20)|USESET:(ild id:99) 

[12]  while ((c = foo (argc, argv)) != -1)

$6:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) attachinfo:Dbx,MDSSA
    ld:i32 'argc' decl:int  argc  param0 attachinfo:Dbx,MDSSA
    ld:*<4> 'argv' decl:unsigned char  *  *  argv  param1 attachinfo:Dbx,MDSSA
    ild:any dummy0 attachinfo:MDSSA        
        intconst:any 0|0x0
----------------
call(id:14) USESET:
  MD2V8:(id id:111) 
  MD3V3:(id id:113) 
ld(id:15) DEFSET:
  MD13V0:
ild(id:99) DEFSET:
  MD3V2:mdphi3 (call id:8) (call id:14)
  MD2V7:mdphi1 (st id:25) (st id:30) (st id:35) mdphi2 mdphi2 mdphi2 mdphi2 (st id:3)
ld(id:16) DEFSET:
  MD14V0:
--- BB40 ---
st:i32 'c' decl:register int  c  attachinfo:Dbx,MDSSA    
    $6:i32 attachinfo:Dbx
----------------
st(id:17) USESET:
  MD15V3:(id id:115) 
goto label _$L6
--- BB42 ---

[26]  noret ();

$8:i32 = call 'noret' decl:void  noret () attachinfo:Dbx,MDSSA
    ild:any dummy0 attachinfo:MDSSA        
        intconst:any 0|0x0
----------------
call(id:50) USESET:
  MD2V9:
  MD3V4:
ild(id:100) DEFSET:
  MD3V2:mdphi3 (call id:8) (call id:14)
  MD2V3:mdphi2 (st id:3) mdphi1 (st id:25) (st id:30) (st id:35)
--- BB43 ---

[27]  return 0;

return attachinfo:Dbx
    intconst:i32 0|0x0 attachinfo:Dbx

==---- DUMP DUMgr: IR REFERENCE 'main' ----==

==---- DUMP ALL MD ----==
MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:Var67(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:Var58(noret):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'void  noret ()' -- ofst:unbound
MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int ,unsigned char  *  * ,)' -- ofst:unbound
MD7 -- base:Var60(a):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  a ' -- ofst:0 -- size:4
MD8 -- base:Var61(b):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  b ' -- ofst:0 -- size:4
MD9 -- base:Var62(d):global,,addr_taken,align(4),i32,decl:'int  d ' -- ofst:0 -- size:4
MD10 -- base:Var63(main):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  main (int  argc ,unsigned char  *  *  argv ,)' -- ofst:unbound
MD11 -- base:Var68(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD12 -- base:Var71(pr3):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD13 -- base:Var64(argc):local,formal_param,align(4),i32,decl:'int  argc ' -- ofst:0 -- size:4
MD14 -- base:Var65(argv):local,formal_param,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'unsigned char  *  *  argv ' -- ofst:0 -- size:4
MD15 -- base:Var66(c):local,align(4),i32,decl:'register int  c ' -- ofst:0 -- size:4
MD16 -- base:Var69(pr1):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD17 -- base:Var70(pr2):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD18 -- base:Var72(pr4):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD19 -- base:Var73(pr5):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD20 -- base:Var74(pr6):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD21 -- base:Var75(pr7):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD22 -- base:Var76(pr8):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
==----==
RegionMayDef(OuterRegion):MD2,MD3
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
RegionMayUse(OuterRegion):MD2,MD3,MD8
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD8 -- base:Var61(b):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  b ' -- ofst:0 -- size:4
--- BB45 ---
--- BB1 ---
    st:i32 'd' attachinfo:Dbx,MDSSA
    EMD9 : MD2
    $4:i32 = call 'foo'  attachinfo:Dbx,MDSSA
    EMD18 : MD2,MD3 <-- MD2,MD3
      ld:i32 'argc' attachinfo:Dbx,MDSSA
      EMD13
      ld:*<4> 'argv' attachinfo:Dbx,MDSSA
      EMD14
      ild:any attachinfo:MDSSA
       : MD2,MD3
--- BB2 ---
    st:i32 'c' attachinfo:Dbx,MDSSA
    EMD15
      $4:i32 attachinfo:Dbx
      EMD18
--- BB3 ---
    $5:i32 = phi
    EMD19
      $4:i32
      EMD18
      $6:i32
      EMD20
    falsebr label _$L7 attachinfo:Dbx
      ne:bool attachinfo:Dbx
        $5:i32 attachinfo:Dbx
        EMD19
--- BB4 ---
    stpr $7:i32 attachinfo:Dbx
    EMD21
      ld:i32 'c' attachinfo:Dbx,MDSSA
      EMD15
    truebr label _$L18
      eq:bool
        $7:i32 attachinfo:Dbx
        EMD21
--- BB8 ---
    truebr label _$L18
      eq:bool
        $7:i32 attachinfo:Dbx
        EMD21
--- BB12 ---
    truebr label _$L18
      eq:bool
        $7:i32 attachinfo:Dbx
        EMD21
--- BB16 ---
    truebr label _$L4
      eq:bool
        $7:i32 attachinfo:Dbx
        EMD21
--- BB20 ---
    falsebr label _$L8
      eq:bool
        $7:i32 attachinfo:Dbx
        EMD21
--- BB21 ---
    goto label _$L5
--- BB33 ---
    st:*<1> 'a' attachinfo:Dbx,MDSSA
    EMD7 : MD2
      ld:*<1> 'b' attachinfo:Dbx,MDSSA
      EMD8 : MD2
    goto label _$L8 attachinfo:Dbx
--- BB35 ---
    st:i32 'd' attachinfo:Dbx,MDSSA
    EMD9 : MD2
    goto label _$L8 attachinfo:Dbx
--- BB37 ---
    st:i32 'd' attachinfo:Dbx,MDSSA
    EMD9 : MD2
--- BB39 ---
    $6:i32 = call 'foo'  attachinfo:Dbx,MDSSA
    EMD20 : MD2,MD3 <-- MD2,MD3
      ld:i32 'argc' attachinfo:Dbx,MDSSA
      EMD13
      ld:*<4> 'argv' attachinfo:Dbx,MDSSA
      EMD14
      ild:any attachinfo:MDSSA
       : MD2,MD3
--- BB40 ---
    st:i32 'c' attachinfo:Dbx,MDSSA
    EMD15
      $6:i32 attachinfo:Dbx
      EMD20
    goto label _$L6
--- BB42 ---
    $8:i32 = call 'noret'  attachinfo:Dbx,MDSSA
    EMD22 : MD2,MD3 <-- MD2,MD3
      ild:any attachinfo:MDSSA
       : MD2,MD3
--- BB43 ---
    return attachinfo:Dbx
==---- DUMP LICM Analysis Result : LoopInfo1 : 'main' ----==


==---- DUMP Register Promotion 'main' ----==
==-- DUMP LoopInfo --==
LOOP1 HEAD:BB3, BODY:3,4,8,12,16,20,21,33,35,37,39,40,
==-- DUMP ExactAccessTab --==
  DELEGATE:
    MD14 -- base:Var65(argv):local,formal_param,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'unsigned char  *  *  argv ' -- ofst:0 -- size:4
    ld:*<4> 'argv' attachinfo:Dbx,MDSSA
    
    OCCLIST:
      ld:*<4> 'argv' attachinfo:Dbx,MDSSA
  
  DELEGATE:
    MD15 -- base:Var66(c):local,align(4),i32,decl:'register int  c ' -- ofst:0 -- size:4
    ld:i32 'c' attachinfo:Dbx,MDSSA
    
    OCCLIST:
      ld:i32 'c' attachinfo:Dbx,MDSSA
      st:i32 'c' attachinfo:Dbx,MDSSA
  
  DELEGATE:
    MD13 -- base:Var64(argc):local,formal_param,align(4),i32,decl:'int  argc ' -- ofst:0 -- size:4
    ld:i32 'argc' attachinfo:Dbx,MDSSA
    
    OCCLIST:
      ld:i32 'argc' attachinfo:Dbx,MDSSA
  
  
==-- DUMP InexactAccessTab --==
  
==---- DUMP PRSSA Manager 'main' ----==
==---- DUMP PRSSAMgr:VPR 'main' ----==

VPR1:$4v0--: DEF:---	USE:
VPR2:$9v0--: DEF:---	USE:
VPR3:$10v0--: DEF:---	USE:
VPR4:$11v0--: DEF:---	USE:
VPR5:$5v0--: DEF:---	USE:
VPR6:$7v0--: DEF:---	USE:
VPR7:$6v0--: DEF:---	USE:
VPR8:$8v0--: DEF:---	USE:
VPR9:$4v1$12: DEF:call ($12,id:8)	USE:($12,id:9)
VPR10:$9v1$13: DEF:stpr ($13,id:103)	USE:($13,id:120)
VPR11:$10v1$14: DEF:stpr ($14,id:121)	USE:($14,id:127)
VPR12:$11v1$15: DEF:stpr ($15,id:17)	USE:($15,id:124)
VPR13:$10v2$16: DEF:phi ($16,id:126)	USE:($16,id:122)
VPR0:--v0--: DEF:---	USE:
VPR0:--v0--: DEF:---	USE:
VPR16:$7v2$18: DEF:stpr ($18,id:54)	USE:($18,id:55),($18,id:58),($18,id:62),($18,id:66),($18,id:70)
VPR17:$6v2$19: DEF:call ($19,id:14)	USE:($19,id:18)
VPR18:$10v3$17: DEF:stpr ($17,id:123)	USE:($17,id:116)
VPR19:$8v1$20: DEF:call ($20,id:50)	USE:
--- BB45 ---
--- BB1 ---
    ------------------

    [11]  d = 1;
    
    st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA        
        intconst:i32 1|0x1 attachinfo:Dbx
    VP:-- <= --
    ------------------

    [12]  while ((c = foo (argc, argv)) != -1)
    
    $12:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) attachinfo:Dbx,MDSSA
        ld:i32 'argc' decl:int  argc  param0 attachinfo:Dbx,MDSSA
        ld:*<4> 'argv' decl:unsigned char  *  *  argv  param1 attachinfo:Dbx,MDSSA
        ild:any dummy0 attachinfo:MDSSA            
            intconst:any 0|0x0
    VP:$4v1$12  <= --
--- BB2 ---
    ------------------
    st:i32 'c' decl:register int  c  attachinfo:Dbx,MDSSA        
        $12:i32 attachinfo:Dbx
    VP:-- <= $4v1$12
    ------------------
    stpr $13:*<4> attachinfo:Dbx        
        ld:*<4> 'argv' decl:unsigned char  *  *  argv  attachinfo:Dbx
    VP:$9v1$13  <= --
    ------------------
    stpr $14:i32 attachinfo:Dbx        
        ld:i32 'c' decl:register int  c  attachinfo:Dbx
    VP:$10v1$14  <= --
    ------------------
    stpr $15:i32 attachinfo:Dbx        
        ld:i32 'argc' decl:int  argc  attachinfo:Dbx
    VP:$11v1$15  <= --
--- BB3 ---
    ------------------
    $16:i32 = phi
        $14:i32
        $17:i32
    VP:$10v2$16  <= $10v1$14,$10v3$17
    ------------------
    falsebr label _$L7 attachinfo:Dbx        
        ne:bool attachinfo:Dbx            
            $5:i32 attachinfo:Dbx            
            intconst:i32 -1|0xffffffffffffffff attachinfo:Dbx
    VP:-- <= $5v0$0
--- BB4 ---
    ------------------

    [13]    switch (c) {
    
    stpr $18:i32 attachinfo:Dbx        
        $16:i32 attachinfo:Dbx
    VP:$7v2$18  <= $10v2$16
    ------------------
    truebr label _$L18        
        eq:bool            
            $18:i32 attachinfo:Dbx            
            intconst:i32 115|0x73
    VP:-- <= $7v2$18
--- BB8 ---
    ------------------
    truebr label _$L18        
        eq:bool            
            $18:i32 attachinfo:Dbx            
            intconst:i32 99|0x63
    VP:-- <= $7v2$18
--- BB12 ---
    ------------------
    truebr label _$L18        
        eq:bool            
            $18:i32 attachinfo:Dbx            
            intconst:i32 102|0x66
    VP:-- <= $7v2$18
--- BB16 ---
    ------------------
    truebr label _$L4        
        eq:bool            
            $18:i32 attachinfo:Dbx            
            intconst:i32 118|0x76
    VP:-- <= $7v2$18
--- BB20 ---
    ------------------
    falsebr label _$L8        
        eq:bool            
            $18:i32 attachinfo:Dbx            
            intconst:i32 86|0x56
    VP:-- <= $7v2$18
--- BB21 ---
    ------------------
    goto label _$L5
    VP:-- <= --
--- BB33 ---
    ------------------

    [17]      a = b;
    
    st:*<1> 'a' decl:unsigned char  *  a  attachinfo:Dbx,MDSSA        
        ld:*<1> 'b' decl:unsigned char  *  b  attachinfo:Dbx,MDSSA
    VP:-- <= --
    ------------------

    [18]      break;
    
    goto label _$L8 attachinfo:Dbx
    VP:-- <= --
--- BB35 ---
    ------------------

    [20]      d = 1;
    
    st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA        
        intconst:i32 1|0x1 attachinfo:Dbx
    VP:-- <= --
    ------------------

    [21]      break;
    
    goto label _$L8 attachinfo:Dbx
    VP:-- <= --
--- BB37 ---
    ------------------

    [23]      d = 0;
    
    st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA        
        intconst:i32 0|0x0 attachinfo:Dbx
    VP:-- <= --
--- BB39 ---
    ------------------

    [12]  while ((c = foo (argc, argv)) != -1)
    
    $19:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) attachinfo:Dbx,MDSSA
        $15:i32 param0 attachinfo:Dbx
        $13:*<4> param1 attachinfo:Dbx
        ild:any dummy0 attachinfo:MDSSA            
            intconst:any 0|0x0
    VP:$6v2$19  <= $11v1$15,$9v1$13
--- BB40 ---
    ------------------
    stpr $17:i32 attachinfo:Dbx        
        $19:i32 attachinfo:Dbx
    VP:$10v3$17  <= $6v2$19
    ------------------
    goto label _$L6
    VP:-- <= --
--- BB42 ---
    ------------------

    [26]  noret ();
    
    $20:i32 = call 'noret' decl:void  noret () attachinfo:Dbx,MDSSA
        ild:any dummy0 attachinfo:MDSSA            
            intconst:any 0|0x0
    VP:$8v1$20  <= --
--- BB43 ---
    ------------------

    [27]  return 0;
    
    return attachinfo:Dbx
        intconst:i32 0|0x0 attachinfo:Dbx
    VP:-- <= --
==---- DUMP Dominator Frontier Control Set ----==

BB1 DF set:
BB2 DF set:
BB3 DF set:3,
BB4 DF set:3,
BB8 DF set:33,39,
BB12 DF set:33,39,
BB16 DF set:39,
BB20 DF set:39,
BB21 DF set:39,
BB33 DF set:39,
BB35 DF set:39,
BB37 DF set:39,
BB39 DF set:3,
BB40 DF set:3,
BB42 DF set:
BB43 DF set:
BB45 DF set:
==---- DUMP MDSSA Manager 'main' ----==
==---- DUMP NON-PR MD ----==
MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:Var67(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:Var58(noret):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'void  noret ()' -- ofst:unbound
MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int ,unsigned char  *  * ,)' -- ofst:unbound
MD7 -- base:Var60(a):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  a ' -- ofst:0 -- size:4
MD8 -- base:Var61(b):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  b ' -- ofst:0 -- size:4
MD9 -- base:Var62(d):global,,addr_taken,align(4),i32,decl:'int  d ' -- ofst:0 -- size:4
MD10 -- base:Var63(main):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  main (int  argc ,unsigned char  *  *  argv ,)' -- ofst:unbound
MD11 -- base:Var68(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD13 -- base:Var64(argc):local,formal_param,align(4),i32,decl:'int  argc ' -- ofst:0 -- size:4
MD14 -- base:Var65(argv):local,formal_param,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'unsigned char  *  *  argv ' -- ofst:0 -- size:4
MD15 -- base:Var66(c):local,align(4),i32,decl:'register int  c ' -- ofst:0 -- size:4
==-- DUMP MDSSAMgr VOpndRef 'main' --==

--- BB45 ---
--- BB1 ---


[11]  d = 1;

st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA    
    intconst:i32 1|0x1 attachinfo:Dbx
  ----
  st:i32 'd' attachinfo:Dbx,MDSSA
  --DEFVMD:(MD9V1,-,NextDEF:MD9V2,,NextDEF:MD9V3)|USESET:
  --DEFVMD:(MD2V1,-,NextDEF:MD2V2)|USESET:ild(id:98)


[12]  while ((c = foo (argc, argv)) != -1)

$12:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) attachinfo:Dbx,MDSSA
    ld:i32 'argc' decl:int  argc  param0 attachinfo:Dbx,MDSSA
    ld:*<4> 'argv' decl:unsigned char  *  *  argv  param1 attachinfo:Dbx,MDSSA
    ild:any dummy0 attachinfo:MDSSA        
        intconst:any 0|0x0
  ----
  $12:i32 = call 'foo'  attachinfo:Dbx,MDSSA
  --DEFVMD:(MD2V2,PrevDEF:MD2V1)|USESET:id(id:111)
  --DEFVMD:(MD3V1,-)|USESET:id(id:113)
  ld:i32 'argc' attachinfo:Dbx,MDSSA
  --USEVMD:MD13V0
  ild:any attachinfo:MDSSA
  --USEVMD:MD3V0,MD2V1
  ld:*<4> 'argv' attachinfo:Dbx,MDSSA
  --USEVMD:MD14V0
--- BB2 ---

st:i32 'c' decl:register int  c  attachinfo:Dbx,MDSSA    
    $12:i32 attachinfo:Dbx
  ----
  st:i32 'c' attachinfo:Dbx,MDSSA
  --DEFVMD:(MD15V1,-)|USESET:ld(id:16)

stpr $13:*<4> attachinfo:Dbx    
    ld:*<4> 'argv' decl:unsigned char  *  *  argv  attachinfo:Dbx,MDSSA
  ----
  ld:*<4> 'argv' attachinfo:Dbx,MDSSA
  --USEVMD:MD14V0

stpr $14:i32 attachinfo:Dbx    
    ld:i32 'c' decl:register int  c  attachinfo:MDSSA,Dbx
  ----
  ld:i32 'c' attachinfo:MDSSA,Dbx
  --USEVMD:MD15V1

stpr $15:i32 attachinfo:Dbx    
    ld:i32 'argc' decl:int  argc  attachinfo:MDSSA,Dbx
  ----
  ld:i32 'argc' attachinfo:MDSSA,Dbx
  --USEVMD:MD13V0
--- BB3 ---
MDPhi3: MD3V2 <- (ID id:113 MD3V1 BB2), (ID id:112 MD3V3 BB40)|USESET:(ild id:99) (ild id:100) 
MDPhi2: MD2V3 <- (ID id:111 MD2V2 BB2), (ID id:110 MD2V8 BB40)|USESET:(ild id:100) (id id:102) (ld id:24) 

$16:i32 = phi
    $14:i32
    $17:i32

falsebr label _$L7 attachinfo:Dbx    
    ne:bool attachinfo:Dbx        
        $5:i32 attachinfo:Dbx        
        intconst:i32 -1|0xffffffffffffffff attachinfo:Dbx
--- BB4 ---


[13]    switch (c) {

stpr $18:i32 attachinfo:Dbx    
    $16:i32 attachinfo:Dbx

truebr label _$L18    
    eq:bool        
        $18:i32 attachinfo:Dbx        
        intconst:i32 115|0x73
--- BB8 ---

truebr label _$L18    
    eq:bool        
        $18:i32 attachinfo:Dbx        
        intconst:i32 99|0x63
--- BB12 ---

truebr label _$L18    
    eq:bool        
        $18:i32 attachinfo:Dbx        
        intconst:i32 102|0x66
--- BB16 ---

truebr label _$L4    
    eq:bool        
        $18:i32 attachinfo:Dbx        
        intconst:i32 118|0x76
--- BB20 ---

falsebr label _$L8    
    eq:bool        
        $18:i32 attachinfo:Dbx        
        intconst:i32 86|0x56
--- BB21 ---

goto label _$L5
--- BB33 ---


[17]      a = b;

st:*<1> 'a' decl:unsigned char  *  a  attachinfo:Dbx,MDSSA    
    ld:*<1> 'b' decl:unsigned char  *  b  attachinfo:Dbx,MDSSA
  ----
  st:*<1> 'a' attachinfo:Dbx,MDSSA
  --DEFVMD:(MD2V6,PrevDEF:MD2V3)|USESET:id(id:109)
  --DEFVMD:(MD7V1,-)|USESET:
  ld:*<1> 'b' attachinfo:Dbx,MDSSA
  --USEVMD:MD8V0,MD2V3


[18]      break;

goto label _$L8 attachinfo:Dbx
--- BB35 ---


[20]      d = 1;

st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA    
    intconst:i32 1|0x1 attachinfo:Dbx
  ----
  st:i32 'd' attachinfo:Dbx,MDSSA
  --DEFVMD:(MD9V3,PrevDEF:MD9V1)|USESET:
  --DEFVMD:(MD2V5,PrevDEF:MD2V3)|USESET:id(id:108)


[21]      break;

goto label _$L8 attachinfo:Dbx
--- BB37 ---


[23]      d = 0;

st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA    
    intconst:i32 0|0x0 attachinfo:Dbx
  ----
  st:i32 'd' attachinfo:Dbx,MDSSA
  --DEFVMD:(MD9V2,PrevDEF:MD9V1)|USESET:
  --DEFVMD:(MD2V4,PrevDEF:MD2V3)|USESET:id(id:107)
--- BB39 ---
MDPhi1: MD2V7 <- (ID id:109 MD2V6 BB33), (ID id:108 MD2V5 BB35), (ID id:107 MD2V4 BB37), (ID id:102 MD2V3 BB20)|USESET:(ild id:99) 


[12]  while ((c = foo (argc, argv)) != -1)

$19:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) attachinfo:Dbx,MDSSA
    $15:i32 param0 attachinfo:Dbx
    $13:*<4> param1 attachinfo:Dbx
    ild:any dummy0 attachinfo:MDSSA        
        intconst:any 0|0x0
  ----
  $19:i32 = call 'foo'  attachinfo:Dbx,MDSSA
  --DEFVMD:(MD2V8,PrevDEF:MD2V7)|USESET:id(id:110)
  --DEFVMD:(MD3V3,PrevDEF:MD3V2)|USESET:id(id:112)
  ild:any attachinfo:MDSSA
  --USEVMD:MD3V2,MD2V7
--- BB40 ---

stpr $17:i32 attachinfo:Dbx    
    $19:i32 attachinfo:Dbx

goto label _$L6
--- BB42 ---


[26]  noret ();

$20:i32 = call 'noret' decl:void  noret () attachinfo:Dbx,MDSSA
    ild:any dummy0 attachinfo:MDSSA        
        intconst:any 0|0x0
  ----
  $20:i32 = call 'noret'  attachinfo:Dbx,MDSSA
  --DEFVMD:(MD2V9,PrevDEF:MD2V3)|USESET:
  --DEFVMD:(MD3V4,PrevDEF:MD3V2)|USESET:
  ild:any attachinfo:MDSSA
  --USEVMD:MD3V2,MD2V3
--- BB43 ---


[27]  return 0;

return attachinfo:Dbx
    intconst:i32 0|0x0 attachinfo:Dbx
==-- DUMP MDSSAMgr DU CHAIN 'main' --==

--- BB45 ---
--- BB1 ---

[11]  d = 1;

st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA    
    intconst:i32 1|0x1 attachinfo:Dbx
----------------
st(id:3) USESET:
  MD9V1:
  MD2V1:(ild id:98) 

[12]  while ((c = foo (argc, argv)) != -1)

$12:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) attachinfo:Dbx,MDSSA
    ld:i32 'argc' decl:int  argc  param0 attachinfo:Dbx,MDSSA
    ld:*<4> 'argv' decl:unsigned char  *  *  argv  param1 attachinfo:Dbx,MDSSA
    ild:any dummy0 attachinfo:MDSSA        
        intconst:any 0|0x0
----------------
call(id:8) USESET:
  MD2V2:(id id:111) 
  MD3V1:(id id:113) 
ld(id:6) DEFSET:
  MD13V0:
ild(id:98) DEFSET:
  MD3V0:
  MD2V1:(st id:3)
ld(id:7) DEFSET:
  MD14V0:
--- BB2 ---
st:i32 'c' decl:register int  c  attachinfo:Dbx,MDSSA    
    $12:i32 attachinfo:Dbx
----------------
st(id:10) USESET:
  MD15V1:(ld id:16) 
stpr $13:*<4> attachinfo:Dbx    
    ld:*<4> 'argv' decl:unsigned char  *  *  argv  attachinfo:Dbx,MDSSA
----------------
ld(id:119) DEFSET:
  MD14V0:
stpr $14:i32 attachinfo:Dbx    
    ld:i32 'c' decl:register int  c  attachinfo:MDSSA,Dbx
----------------
ld(id:16) KDEF:st(id:10)
stpr $15:i32 attachinfo:Dbx    
    ld:i32 'argc' decl:int  argc  attachinfo:MDSSA,Dbx
----------------
ld(id:19) DEFSET:
  MD13V0:
--- BB3 ---
MDPhi3: MD3V2 <- (ID id:113 MD3V1 BB2), (ID id:112 MD3V3 BB40)|USESET:(ild id:99) (ild id:100) 
MDPhi2: MD2V3 <- (ID id:111 MD2V2 BB2), (ID id:110 MD2V8 BB40)|USESET:(ild id:100) (id id:102) (ld id:24) 
$16:i32 = phi
    $14:i32
    $17:i32
falsebr label _$L7 attachinfo:Dbx    
    ne:bool attachinfo:Dbx        
        $5:i32 attachinfo:Dbx        
        intconst:i32 -1|0xffffffffffffffff attachinfo:Dbx
--- BB4 ---

[13]    switch (c) {

stpr $18:i32 attachinfo:Dbx    
    $16:i32 attachinfo:Dbx
truebr label _$L18    
    eq:bool        
        $18:i32 attachinfo:Dbx        
        intconst:i32 115|0x73
--- BB8 ---
truebr label _$L18    
    eq:bool        
        $18:i32 attachinfo:Dbx        
        intconst:i32 99|0x63
--- BB12 ---
truebr label _$L18    
    eq:bool        
        $18:i32 attachinfo:Dbx        
        intconst:i32 102|0x66
--- BB16 ---
truebr label _$L4    
    eq:bool        
        $18:i32 attachinfo:Dbx        
        intconst:i32 118|0x76
--- BB20 ---
falsebr label _$L8    
    eq:bool        
        $18:i32 attachinfo:Dbx        
        intconst:i32 86|0x56
--- BB21 ---
goto label _$L5
--- BB33 ---

[17]      a = b;

st:*<1> 'a' decl:unsigned char  *  a  attachinfo:Dbx,MDSSA    
    ld:*<1> 'b' decl:unsigned char  *  b  attachinfo:Dbx,MDSSA
----------------
st(id:25) USESET:
  MD2V6:(id id:109) 
  MD7V1:
ld(id:24) DEFSET:
  MD8V0:
  MD2V3:mdphi2 (call id:8) (call id:14) (st id:3) mdphi1 (st id:25) (st id:30) (st id:35)

[18]      break;

goto label _$L8 attachinfo:Dbx
--- BB35 ---

[20]      d = 1;

st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA    
    intconst:i32 1|0x1 attachinfo:Dbx
----------------
st(id:30) USESET:
  MD9V3:
  MD2V5:(id id:108) 

[21]      break;

goto label _$L8 attachinfo:Dbx
--- BB37 ---

[23]      d = 0;

st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA    
    intconst:i32 0|0x0 attachinfo:Dbx
----------------
st(id:35) USESET:
  MD9V2:
  MD2V4:(id id:107) 
--- BB39 ---
MDPhi1: MD2V7 <- (ID id:109 MD2V6 BB33), (ID id:108 MD2V5 BB35), (ID id:107 MD2V4 BB37), (ID id:102 MD2V3 BB20)|USESET:(ild id:99) 

[12]  while ((c = foo (argc, argv)) != -1)

$19:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) attachinfo:Dbx,MDSSA
    $15:i32 param0 attachinfo:Dbx
    $13:*<4> param1 attachinfo:Dbx
    ild:any dummy0 attachinfo:MDSSA        
        intconst:any 0|0x0
----------------
call(id:14) USESET:
  MD2V8:(id id:110) 
  MD3V3:(id id:112) 
ild(id:99) DEFSET:
  MD3V2:mdphi3 (call id:8) (call id:14)
  MD2V7:mdphi1 (st id:25) (st id:30) (st id:35) mdphi2 mdphi2 mdphi2 mdphi2 (st id:3)
--- BB40 ---
stpr $17:i32 attachinfo:Dbx    
    $19:i32 attachinfo:Dbx
goto label _$L6
--- BB42 ---

[26]  noret ();

$20:i32 = call 'noret' decl:void  noret () attachinfo:Dbx,MDSSA
    ild:any dummy0 attachinfo:MDSSA        
        intconst:any 0|0x0
----------------
call(id:50) USESET:
  MD2V9:
  MD3V4:
ild(id:100) DEFSET:
  MD3V2:mdphi3 (call id:8) (call id:14)
  MD2V3:mdphi2 (st id:3) mdphi1 (st id:25) (st id:30) (st id:35)
--- BB43 ---

[27]  return 0;

return attachinfo:Dbx
    intconst:i32 0|0x0 attachinfo:Dbx
==---- DUMP Dead Code Eliminiation 'main' ----==
==-- Ineffect BB --==
--0- BB45		ineffect BB!
--0- BB1
--0- BB2
--0- BB3
--0- BB4
--0- BB8
--0- BB12
--0- BB16
--0- BB20
--0- BB21
--0- BB33
--0- BB35
--0- BB37
--0- BB39
--0- BB40
--0- BB42
--0- BB43

==---- DUMP IRBBList 'main' ----==
----- BB45 --- rpo:0 -----
ATTR:entry_bb fall_through 
STMT NUM:0

----- BB1 --- rpo:5 -----
ATTR:fall_through 
STMT NUM:2

   [11]  d = 1;
   
   st:i32 'd' attachinfo:Dbx,MDSSA       
       intconst:i32 1|0x1 attachinfo:Dbx

   [12]  while ((c = foo (argc, argv)) != -1)
   
   $12:i32 = call 'foo'  attachinfo:Dbx,MDSSA
       ld:i32 'argc' param0 attachinfo:Dbx,MDSSA
       ld:*<4> 'argv' param1 attachinfo:Dbx,MDSSA
       ild:any dummy0 attachinfo:MDSSA           
           intconst:any 0|0x0

----- BB2 --- rpo:10 -----
ATTR:fall_through 
STMT NUM:2
   stpr $13:*<4> attachinfo:Dbx       
       ld:*<4> 'argv' attachinfo:Dbx,MDSSA
   stpr $15:i32 attachinfo:Dbx       
       ld:i32 'argc' attachinfo:MDSSA,Dbx

----- BB3 --- rpo:15 -----
LABEL:_$L6 
ATTR:fall_through branch_target 
STMT NUM:2
   $16:i32 = phi
       $12:i32 attachinfo:Dbx
       $17:i32
   truebr label _$L7 attachinfo:Dbx       
       eq:bool attachinfo:Dbx           
           $5:i32 attachinfo:Dbx           
           intconst:i32 -1|0xffffffffffffffff attachinfo:Dbx

----- BB4 --- rpo:30 -----
ATTR:fall_through 
STMT NUM:1
   truebr label _$L18       
       eq:bool           
           $16:i32 attachinfo:Dbx           
           intconst:i32 115|0x73

----- BB8 --- rpo:35 -----
ATTR:fall_through branch_target 
STMT NUM:1
   truebr label _$L18       
       eq:bool           
           $16:i32 attachinfo:Dbx           
           intconst:i32 99|0x63

----- BB12 --- rpo:40 -----
ATTR:fall_through branch_target 
STMT NUM:1
   truebr label _$L18       
       eq:bool           
           $16:i32 attachinfo:Dbx           
           intconst:i32 102|0x66

----- BB16 --- rpo:45 -----
ATTR:fall_through branch_target 
STMT NUM:1
   truebr label _$L4       
       eq:bool           
           $16:i32 attachinfo:Dbx           
           intconst:i32 118|0x76

----- BB20 --- rpo:50 -----
ATTR:fall_through branch_target 
STMT NUM:1
   falsebr label _$L8       
       eq:bool           
           $16:i32 attachinfo:Dbx           
           intconst:i32 86|0x56

----- BB21 --- rpo:55 -----
ATTR:
STMT NUM:1
   goto label _$L5

----- BB33 --- rpo:70 -----
LABEL:_$L18 
ATTR:branch_target 
STMT NUM:2

   [17]      a = b;
   
   st:*<1> 'a' attachinfo:Dbx,MDSSA       
       ld:*<1> 'b' attachinfo:Dbx,MDSSA

   [18]      break;
   
   goto label _$L8 attachinfo:Dbx

----- BB35 --- rpo:65 -----
LABEL:_$L4 
ATTR:branch_target 
STMT NUM:2

   [20]      d = 1;
   
   st:i32 'd' attachinfo:Dbx,MDSSA       
       intconst:i32 1|0x1 attachinfo:Dbx

   [21]      break;
   
   goto label _$L8 attachinfo:Dbx

----- BB37 --- rpo:60 -----
LABEL:_$L5 
ATTR:fall_through branch_target 
STMT NUM:1

   [23]      d = 0;
   
   st:i32 'd' attachinfo:Dbx,MDSSA       
       intconst:i32 0|0x0 attachinfo:Dbx

----- BB39 --- rpo:75 -----
LABEL:_$L8 
ATTR:fall_through branch_target 
STMT NUM:1

   [12]  while ((c = foo (argc, argv)) != -1)
   
   $19:i32 = call 'foo'  attachinfo:Dbx,MDSSA
       $15:i32 param0 attachinfo:Dbx
       $13:*<4> param1 attachinfo:Dbx
       ild:any dummy0 attachinfo:MDSSA           
           intconst:any 0|0x0

----- BB40 --- rpo:80 -----
ATTR:
STMT NUM:2
   stpr $17:i32 attachinfo:Dbx       
       $19:i32 attachinfo:Dbx
   goto label _$L6

----- BB42 --- rpo:20 -----
LABEL:_$L7 
ATTR:fall_through branch_target 
STMT NUM:1

   [26]  noret ();
   
   $20:i32 = call 'noret'  attachinfo:Dbx,MDSSA
       ild:any dummy0 attachinfo:MDSSA           
           intconst:any 0|0x0

----- BB43 --- rpo:25 -----
ATTR:fall_through 
STMT NUM:1

   [27]  return 0;
   
   return attachinfo:Dbx
       intconst:i32 0|0x0 attachinfo:Dbx

==---- DUMP PRSSA Manager 'main' ----==
==---- DUMP PRSSAMgr:VPR 'main' ----==

VPR1:$4v0--: DEF:---	USE:
VPR2:$9v0--: DEF:---	USE:
VPR3:$10v0--: DEF:---	USE:
VPR4:$11v0--: DEF:---	USE:
VPR5:$5v0--: DEF:---	USE:
VPR6:$7v0--: DEF:---	USE:
VPR7:$6v0--: DEF:---	USE:
VPR8:$8v0--: DEF:---	USE:
VPR9:$4v1$12: DEF:call ($12,id:8)	USE:($12,id:16)
VPR10:$9v1$13: DEF:stpr ($13,id:103)	USE:($13,id:120)
VPR11:$10v1$14: DEF:---	USE:
VPR12:$11v1$15: DEF:stpr ($15,id:17)	USE:($15,id:124)
VPR13:$10v2$16: DEF:phi ($16,id:126)	USE:($16,id:55),($16,id:58),($16,id:62),($16,id:66),($16,id:127)
VPR0:--v0--: DEF:---	USE:
VPR0:--v0--: DEF:---	USE:
VPR16:$7v2$18: DEF:---	USE:
VPR17:$6v2$19: DEF:call ($19,id:14)	USE:($19,id:18)
VPR18:$10v3$17: DEF:stpr ($17,id:123)	USE:($17,id:116)
VPR19:$8v1$20: DEF:call ($20,id:50)	USE:
--- BB45 ---
--- BB1 ---
    ------------------

    [11]  d = 1;
    
    st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA        
        intconst:i32 1|0x1 attachinfo:Dbx
    VP:-- <= --
    ------------------

    [12]  while ((c = foo (argc, argv)) != -1)
    
    $12:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) attachinfo:Dbx,MDSSA
        ld:i32 'argc' decl:int  argc  param0 attachinfo:Dbx,MDSSA
        ld:*<4> 'argv' decl:unsigned char  *  *  argv  param1 attachinfo:Dbx,MDSSA
        ild:any dummy0 attachinfo:MDSSA            
            intconst:any 0|0x0
    VP:$4v1$12  <= --
--- BB2 ---
    ------------------
    stpr $13:*<4> attachinfo:Dbx        
        ld:*<4> 'argv' decl:unsigned char  *  *  argv  attachinfo:Dbx,MDSSA
    VP:$9v1$13  <= --
    ------------------
    stpr $15:i32 attachinfo:Dbx        
        ld:i32 'argc' decl:int  argc  attachinfo:MDSSA,Dbx
    VP:$11v1$15  <= --
--- BB3 ---
    ------------------
    $16:i32 = phi
        $12:i32 attachinfo:Dbx
        $17:i32
    VP:$10v2$16  <= $4v1$12,$10v3$17
    ------------------
    truebr label _$L7 attachinfo:Dbx        
        eq:bool attachinfo:Dbx            
            $5:i32 attachinfo:Dbx            
            intconst:i32 -1|0xffffffffffffffff attachinfo:Dbx
    VP:-- <= $5v0$0
--- BB4 ---
    ------------------
    truebr label _$L18        
        eq:bool            
            $16:i32 attachinfo:Dbx            
            intconst:i32 115|0x73
    VP:-- <= $10v2$16
--- BB8 ---
    ------------------
    truebr label _$L18        
        eq:bool            
            $16:i32 attachinfo:Dbx            
            intconst:i32 99|0x63
    VP:-- <= $10v2$16
--- BB12 ---
    ------------------
    truebr label _$L18        
        eq:bool            
            $16:i32 attachinfo:Dbx            
            intconst:i32 102|0x66
    VP:-- <= $10v2$16
--- BB16 ---
    ------------------
    truebr label _$L4        
        eq:bool            
            $16:i32 attachinfo:Dbx            
            intconst:i32 118|0x76
    VP:-- <= $10v2$16
--- BB20 ---
    ------------------
    falsebr label _$L8        
        eq:bool            
            $16:i32 attachinfo:Dbx            
            intconst:i32 86|0x56
    VP:-- <= $10v2$16
--- BB21 ---
    ------------------
    goto label _$L5
    VP:-- <= --
--- BB33 ---
    ------------------

    [17]      a = b;
    
    st:*<1> 'a' decl:unsigned char  *  a  attachinfo:Dbx,MDSSA        
        ld:*<1> 'b' decl:unsigned char  *  b  attachinfo:Dbx,MDSSA
    VP:-- <= --
    ------------------

    [18]      break;
    
    goto label _$L8 attachinfo:Dbx
    VP:-- <= --
--- BB35 ---
    ------------------

    [20]      d = 1;
    
    st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA        
        intconst:i32 1|0x1 attachinfo:Dbx
    VP:-- <= --
    ------------------

    [21]      break;
    
    goto label _$L8 attachinfo:Dbx
    VP:-- <= --
--- BB37 ---
    ------------------

    [23]      d = 0;
    
    st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA        
        intconst:i32 0|0x0 attachinfo:Dbx
    VP:-- <= --
--- BB39 ---
    ------------------

    [12]  while ((c = foo (argc, argv)) != -1)
    
    $19:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) attachinfo:Dbx,MDSSA
        $15:i32 param0 attachinfo:Dbx
        $13:*<4> param1 attachinfo:Dbx
        ild:any dummy0 attachinfo:MDSSA            
            intconst:any 0|0x0
    VP:$6v2$19  <= $11v1$15,$9v1$13
--- BB40 ---
    ------------------
    stpr $17:i32 attachinfo:Dbx        
        $19:i32 attachinfo:Dbx
    VP:$10v3$17  <= $6v2$19
    ------------------
    goto label _$L6
    VP:-- <= --
--- BB42 ---
    ------------------

    [26]  noret ();
    
    $20:i32 = call 'noret' decl:void  noret () attachinfo:Dbx,MDSSA
        ild:any dummy0 attachinfo:MDSSA            
            intconst:any 0|0x0
    VP:$8v1$20  <= --
--- BB43 ---
    ------------------

    [27]  return 0;
    
    return attachinfo:Dbx
        intconst:i32 0|0x0 attachinfo:Dbx
    VP:-- <= --
==---- DUMP MDSSA Manager 'main' ----==
==---- DUMP NON-PR MD ----==
MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:Var67(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:Var58(noret):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'void  noret ()' -- ofst:unbound
MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int ,unsigned char  *  * ,)' -- ofst:unbound
MD7 -- base:Var60(a):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  a ' -- ofst:0 -- size:4
MD8 -- base:Var61(b):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  b ' -- ofst:0 -- size:4
MD9 -- base:Var62(d):global,,addr_taken,align(4),i32,decl:'int  d ' -- ofst:0 -- size:4
MD10 -- base:Var63(main):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  main (int  argc ,unsigned char  *  *  argv ,)' -- ofst:unbound
MD11 -- base:Var68(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD13 -- base:Var64(argc):local,formal_param,align(4),i32,decl:'int  argc ' -- ofst:0 -- size:4
MD14 -- base:Var65(argv):local,formal_param,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'unsigned char  *  *  argv ' -- ofst:0 -- size:4
MD15 -- base:Var66(c):local,align(4),i32,decl:'register int  c ' -- ofst:0 -- size:4
==-- DUMP MDSSAMgr VOpndRef 'main' --==

--- BB45 ---
--- BB1 ---


[11]  d = 1;

st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA    
    intconst:i32 1|0x1 attachinfo:Dbx
  ----
  st:i32 'd' attachinfo:Dbx,MDSSA
  --DEFVMD:(MD9V1,-,NextDEF:MD9V2,,NextDEF:MD9V3)|USESET:
  --DEFVMD:(MD2V1,-,NextDEF:MD2V2)|USESET:ild(id:98)


[12]  while ((c = foo (argc, argv)) != -1)

$12:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) attachinfo:Dbx,MDSSA
    ld:i32 'argc' decl:int  argc  param0 attachinfo:Dbx,MDSSA
    ld:*<4> 'argv' decl:unsigned char  *  *  argv  param1 attachinfo:Dbx,MDSSA
    ild:any dummy0 attachinfo:MDSSA        
        intconst:any 0|0x0
  ----
  $12:i32 = call 'foo'  attachinfo:Dbx,MDSSA
  --DEFVMD:(MD2V2,PrevDEF:MD2V1)|USESET:id(id:111)
  --DEFVMD:(MD3V1,-)|USESET:id(id:113)
  ld:i32 'argc' attachinfo:Dbx,MDSSA
  --USEVMD:MD13V0
  ild:any attachinfo:MDSSA
  --USEVMD:MD3V0,MD2V1
  ld:*<4> 'argv' attachinfo:Dbx,MDSSA
  --USEVMD:MD14V0
--- BB2 ---

stpr $13:*<4> attachinfo:Dbx    
    ld:*<4> 'argv' decl:unsigned char  *  *  argv  attachinfo:Dbx,MDSSA
  ----
  ld:*<4> 'argv' attachinfo:Dbx,MDSSA
  --USEVMD:MD14V0

stpr $15:i32 attachinfo:Dbx    
    ld:i32 'argc' decl:int  argc  attachinfo:MDSSA,Dbx
  ----
  ld:i32 'argc' attachinfo:MDSSA,Dbx
  --USEVMD:MD13V0
--- BB3 ---
MDPhi3: MD3V2 <- (ID id:113 MD3V1 BB2), (ID id:112 MD3V3 BB40)|USESET:(ild id:99) (ild id:100) 
MDPhi2: MD2V3 <- (ID id:111 MD2V2 BB2), (ID id:110 MD2V8 BB40)|USESET:(ild id:100) (id id:102) (ld id:24) 

$16:i32 = phi
    $12:i32 attachinfo:Dbx
    $17:i32

truebr label _$L7 attachinfo:Dbx    
    eq:bool attachinfo:Dbx        
        $5:i32 attachinfo:Dbx        
        intconst:i32 -1|0xffffffffffffffff attachinfo:Dbx
--- BB4 ---

truebr label _$L18    
    eq:bool        
        $16:i32 attachinfo:Dbx        
        intconst:i32 115|0x73
--- BB8 ---

truebr label _$L18    
    eq:bool        
        $16:i32 attachinfo:Dbx        
        intconst:i32 99|0x63
--- BB12 ---

truebr label _$L18    
    eq:bool        
        $16:i32 attachinfo:Dbx        
        intconst:i32 102|0x66
--- BB16 ---

truebr label _$L4    
    eq:bool        
        $16:i32 attachinfo:Dbx        
        intconst:i32 118|0x76
--- BB20 ---

falsebr label _$L8    
    eq:bool        
        $16:i32 attachinfo:Dbx        
        intconst:i32 86|0x56
--- BB21 ---

goto label _$L5
--- BB33 ---


[17]      a = b;

st:*<1> 'a' decl:unsigned char  *  a  attachinfo:Dbx,MDSSA    
    ld:*<1> 'b' decl:unsigned char  *  b  attachinfo:Dbx,MDSSA
  ----
  st:*<1> 'a' attachinfo:Dbx,MDSSA
  --DEFVMD:(MD2V6,PrevDEF:MD2V3)|USESET:id(id:109)
  --DEFVMD:(MD7V1,-)|USESET:
  ld:*<1> 'b' attachinfo:Dbx,MDSSA
  --USEVMD:MD8V0,MD2V3


[18]      break;

goto label _$L8 attachinfo:Dbx
--- BB35 ---


[20]      d = 1;

st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA    
    intconst:i32 1|0x1 attachinfo:Dbx
  ----
  st:i32 'd' attachinfo:Dbx,MDSSA
  --DEFVMD:(MD9V3,PrevDEF:MD9V1)|USESET:
  --DEFVMD:(MD2V5,PrevDEF:MD2V3)|USESET:id(id:108)


[21]      break;

goto label _$L8 attachinfo:Dbx
--- BB37 ---


[23]      d = 0;

st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA    
    intconst:i32 0|0x0 attachinfo:Dbx
  ----
  st:i32 'd' attachinfo:Dbx,MDSSA
  --DEFVMD:(MD9V2,PrevDEF:MD9V1)|USESET:
  --DEFVMD:(MD2V4,PrevDEF:MD2V3)|USESET:id(id:107)
--- BB39 ---
MDPhi1: MD2V7 <- (ID id:109 MD2V6 BB33), (ID id:108 MD2V5 BB35), (ID id:107 MD2V4 BB37), (ID id:102 MD2V3 BB20)|USESET:(ild id:99) 


[12]  while ((c = foo (argc, argv)) != -1)

$19:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) attachinfo:Dbx,MDSSA
    $15:i32 param0 attachinfo:Dbx
    $13:*<4> param1 attachinfo:Dbx
    ild:any dummy0 attachinfo:MDSSA        
        intconst:any 0|0x0
  ----
  $19:i32 = call 'foo'  attachinfo:Dbx,MDSSA
  --DEFVMD:(MD2V8,PrevDEF:MD2V7)|USESET:id(id:110)
  --DEFVMD:(MD3V3,PrevDEF:MD3V2)|USESET:id(id:112)
  ild:any attachinfo:MDSSA
  --USEVMD:MD3V2,MD2V7
--- BB40 ---

stpr $17:i32 attachinfo:Dbx    
    $19:i32 attachinfo:Dbx

goto label _$L6
--- BB42 ---


[26]  noret ();

$20:i32 = call 'noret' decl:void  noret () attachinfo:Dbx,MDSSA
    ild:any dummy0 attachinfo:MDSSA        
        intconst:any 0|0x0
  ----
  $20:i32 = call 'noret'  attachinfo:Dbx,MDSSA
  --DEFVMD:(MD2V9,PrevDEF:MD2V3)|USESET:
  --DEFVMD:(MD3V4,PrevDEF:MD3V2)|USESET:
  ild:any attachinfo:MDSSA
  --USEVMD:MD3V2,MD2V3
--- BB43 ---


[27]  return 0;

return attachinfo:Dbx
    intconst:i32 0|0x0 attachinfo:Dbx
==-- DUMP MDSSAMgr DU CHAIN 'main' --==

--- BB45 ---
--- BB1 ---

[11]  d = 1;

st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA    
    intconst:i32 1|0x1 attachinfo:Dbx
----------------
st(id:3) USESET:
  MD9V1:
  MD2V1:(ild id:98) 

[12]  while ((c = foo (argc, argv)) != -1)

$12:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) attachinfo:Dbx,MDSSA
    ld:i32 'argc' decl:int  argc  param0 attachinfo:Dbx,MDSSA
    ld:*<4> 'argv' decl:unsigned char  *  *  argv  param1 attachinfo:Dbx,MDSSA
    ild:any dummy0 attachinfo:MDSSA        
        intconst:any 0|0x0
----------------
call(id:8) USESET:
  MD2V2:(id id:111) 
  MD3V1:(id id:113) 
ld(id:6) DEFSET:
  MD13V0:
ild(id:98) DEFSET:
  MD3V0:
  MD2V1:(st id:3)
ld(id:7) DEFSET:
  MD14V0:
--- BB2 ---
stpr $13:*<4> attachinfo:Dbx    
    ld:*<4> 'argv' decl:unsigned char  *  *  argv  attachinfo:Dbx,MDSSA
----------------
ld(id:119) DEFSET:
  MD14V0:
stpr $15:i32 attachinfo:Dbx    
    ld:i32 'argc' decl:int  argc  attachinfo:MDSSA,Dbx
----------------
ld(id:19) DEFSET:
  MD13V0:
--- BB3 ---
MDPhi3: MD3V2 <- (ID id:113 MD3V1 BB2), (ID id:112 MD3V3 BB40)|USESET:(ild id:99) (ild id:100) 
MDPhi2: MD2V3 <- (ID id:111 MD2V2 BB2), (ID id:110 MD2V8 BB40)|USESET:(ild id:100) (id id:102) (ld id:24) 
$16:i32 = phi
    $12:i32 attachinfo:Dbx
    $17:i32
truebr label _$L7 attachinfo:Dbx    
    eq:bool attachinfo:Dbx        
        $5:i32 attachinfo:Dbx        
        intconst:i32 -1|0xffffffffffffffff attachinfo:Dbx
--- BB4 ---
truebr label _$L18    
    eq:bool        
        $16:i32 attachinfo:Dbx        
        intconst:i32 115|0x73
--- BB8 ---
truebr label _$L18    
    eq:bool        
        $16:i32 attachinfo:Dbx        
        intconst:i32 99|0x63
--- BB12 ---
truebr label _$L18    
    eq:bool        
        $16:i32 attachinfo:Dbx        
        intconst:i32 102|0x66
--- BB16 ---
truebr label _$L4    
    eq:bool        
        $16:i32 attachinfo:Dbx        
        intconst:i32 118|0x76
--- BB20 ---
falsebr label _$L8    
    eq:bool        
        $16:i32 attachinfo:Dbx        
        intconst:i32 86|0x56
--- BB21 ---
goto label _$L5
--- BB33 ---

[17]      a = b;

st:*<1> 'a' decl:unsigned char  *  a  attachinfo:Dbx,MDSSA    
    ld:*<1> 'b' decl:unsigned char  *  b  attachinfo:Dbx,MDSSA
----------------
st(id:25) USESET:
  MD2V6:(id id:109) 
  MD7V1:
ld(id:24) DEFSET:
  MD8V0:
  MD2V3:mdphi2 (call id:8) (call id:14) (st id:3) mdphi1 (st id:25) (st id:30) (st id:35)

[18]      break;

goto label _$L8 attachinfo:Dbx
--- BB35 ---

[20]      d = 1;

st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA    
    intconst:i32 1|0x1 attachinfo:Dbx
----------------
st(id:30) USESET:
  MD9V3:
  MD2V5:(id id:108) 

[21]      break;

goto label _$L8 attachinfo:Dbx
--- BB37 ---

[23]      d = 0;

st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA    
    intconst:i32 0|0x0 attachinfo:Dbx
----------------
st(id:35) USESET:
  MD9V2:
  MD2V4:(id id:107) 
--- BB39 ---
MDPhi1: MD2V7 <- (ID id:109 MD2V6 BB33), (ID id:108 MD2V5 BB35), (ID id:107 MD2V4 BB37), (ID id:102 MD2V3 BB20)|USESET:(ild id:99) 

[12]  while ((c = foo (argc, argv)) != -1)

$19:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) attachinfo:Dbx,MDSSA
    $15:i32 param0 attachinfo:Dbx
    $13:*<4> param1 attachinfo:Dbx
    ild:any dummy0 attachinfo:MDSSA        
        intconst:any 0|0x0
----------------
call(id:14) USESET:
  MD2V8:(id id:110) 
  MD3V3:(id id:112) 
ild(id:99) DEFSET:
  MD3V2:mdphi3 (call id:8) (call id:14)
  MD2V7:mdphi1 (st id:25) (st id:30) (st id:35) mdphi2 mdphi2 mdphi2 mdphi2 (st id:3)
--- BB40 ---
stpr $17:i32 attachinfo:Dbx    
    $19:i32 attachinfo:Dbx
goto label _$L6
--- BB42 ---

[26]  noret ();

$20:i32 = call 'noret' decl:void  noret () attachinfo:Dbx,MDSSA
    ild:any dummy0 attachinfo:MDSSA        
        intconst:any 0|0x0
----------------
call(id:50) USESET:
  MD2V9:
  MD3V4:
ild(id:100) DEFSET:
  MD3V2:mdphi3 (call id:8) (call id:14)
  MD2V3:mdphi2 (st id:3) mdphi1 (st id:25) (st id:30) (st id:35)
--- BB43 ---

[27]  return 0;

return attachinfo:Dbx
    intconst:i32 0|0x0 attachinfo:Dbx
==---- DUMP LICM Analysis Result : LoopInfo1 : 'main' ----==


==---- DUMP Register Promotion 'main' ----==
==-- DUMP LoopInfo --==
LOOP1 HEAD:BB3, BODY:3,4,8,12,16,20,21,33,35,37,39,40,
==-- DUMP ExactAccessTab --==
  
==-- DUMP InexactAccessTab --==
  

==---- DUMP DUMgr: IR REFERENCE 'main' ----==

==---- DUMP ALL MD ----==
MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:Var67(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:Var58(noret):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'void  noret ()' -- ofst:unbound
MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int ,unsigned char  *  * ,)' -- ofst:unbound
MD7 -- base:Var60(a):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  a ' -- ofst:0 -- size:4
MD8 -- base:Var61(b):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  b ' -- ofst:0 -- size:4
MD9 -- base:Var62(d):global,,addr_taken,align(4),i32,decl:'int  d ' -- ofst:0 -- size:4
MD10 -- base:Var63(main):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  main (int  argc ,unsigned char  *  *  argv ,)' -- ofst:unbound
MD11 -- base:Var68(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD12 -- base:Var71(pr3):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD13 -- base:Var64(argc):local,formal_param,align(4),i32,decl:'int  argc ' -- ofst:0 -- size:4
MD14 -- base:Var65(argv):local,formal_param,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'unsigned char  *  *  argv ' -- ofst:0 -- size:4
MD15 -- base:Var66(c):local,align(4),i32,decl:'register int  c ' -- ofst:0 -- size:4
MD16 -- base:Var69(pr1):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD17 -- base:Var70(pr2):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD18 -- base:Var72(pr4):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD19 -- base:Var73(pr5):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD20 -- base:Var74(pr6):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD21 -- base:Var75(pr7):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD22 -- base:Var76(pr8):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD23 -- base:Var77(pr9):local,unallocable,pointer,pt_base_sz:4,*,mem_size:4,decl:'' -- ofst:0 -- size:4
MD24 -- base:Var78(pr10):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD25 -- base:Var79(pr11):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD26 -- base:Var80(pr12):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD27 -- base:Var81(pr13):local,unallocable,pointer,pt_base_sz:4,*,mem_size:4,decl:'' -- ofst:0 -- size:4
MD28 -- base:Var82(pr14):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD29 -- base:Var83(pr15):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD30 -- base:Var84(pr16):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD31 -- base:Var85(pr17):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD32 -- base:Var86(pr18):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD33 -- base:Var87(pr19):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD34 -- base:Var88(pr20):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
==----==
RegionMayDef(OuterRegion):MD2,MD3
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
RegionMayUse(OuterRegion):MD2,MD3,MD8
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD8 -- base:Var61(b):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  b ' -- ofst:0 -- size:4
--- BB45 ---
--- BB1 ---
    st:i32 'd' attachinfo:Dbx,MDSSA
    EMD9 : MD2
    $12:i32 = call 'foo'  attachinfo:Dbx,MDSSA
    EMD26 : MD2,MD3 <-- MD2,MD3
      ld:i32 'argc' attachinfo:Dbx,MDSSA
      EMD13
      ld:*<4> 'argv' attachinfo:Dbx,MDSSA
      EMD14
      ild:any attachinfo:MDSSA
       : MD2,MD3
--- BB2 ---
    stpr $13:*<4> attachinfo:Dbx
    EMD27
      ld:*<4> 'argv' attachinfo:Dbx,MDSSA
      EMD14
    stpr $15:i32 attachinfo:Dbx
    EMD29
      ld:i32 'argc' attachinfo:MDSSA,Dbx
      EMD13
--- BB3 ---
    $16:i32 = phi
    EMD30
      $12:i32 attachinfo:Dbx
      EMD26
      $17:i32
      EMD31
    truebr label _$L7 attachinfo:Dbx
      eq:bool attachinfo:Dbx
        $5:i32 attachinfo:Dbx
        EMD19
--- BB4 ---
    truebr label _$L18
      eq:bool
        $16:i32 attachinfo:Dbx
        EMD30
--- BB8 ---
    truebr label _$L18
      eq:bool
        $16:i32 attachinfo:Dbx
        EMD30
--- BB12 ---
    truebr label _$L18
      eq:bool
        $16:i32 attachinfo:Dbx
        EMD30
--- BB16 ---
    truebr label _$L4
      eq:bool
        $16:i32 attachinfo:Dbx
        EMD30
--- BB20 ---
    falsebr label _$L8
      eq:bool
        $16:i32 attachinfo:Dbx
        EMD30
--- BB21 ---
    goto label _$L5
--- BB33 ---
    st:*<1> 'a' attachinfo:Dbx,MDSSA
    EMD7 : MD2
      ld:*<1> 'b' attachinfo:Dbx,MDSSA
      EMD8 : MD2
    goto label _$L8 attachinfo:Dbx
--- BB35 ---
    st:i32 'd' attachinfo:Dbx,MDSSA
    EMD9 : MD2
    goto label _$L8 attachinfo:Dbx
--- BB37 ---
    st:i32 'd' attachinfo:Dbx,MDSSA
    EMD9 : MD2
--- BB39 ---
    $19:i32 = call 'foo'  attachinfo:Dbx,MDSSA
    EMD33 : MD2,MD3 <-- MD2,MD3
      $15:i32 attachinfo:Dbx
      EMD29
      $13:*<4> attachinfo:Dbx
      EMD27
      ild:any attachinfo:MDSSA
       : MD2,MD3
--- BB40 ---
    stpr $17:i32 attachinfo:Dbx
    EMD31
      $19:i32 attachinfo:Dbx
      EMD33
    goto label _$L6
--- BB42 ---
    $20:i32 = call 'noret'  attachinfo:Dbx,MDSSA
    EMD34 : MD2,MD3 <-- MD2,MD3
      ild:any attachinfo:MDSSA
       : MD2,MD3
--- BB43 ---
    return attachinfo:Dbx
==---- DUMP MDSSA Manager 'main' ----==
==---- DUMP NON-PR MD ----==
MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:Var67(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:Var58(noret):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'void  noret ()' -- ofst:unbound
MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int ,unsigned char  *  * ,)' -- ofst:unbound
MD7 -- base:Var60(a):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  a ' -- ofst:0 -- size:4
MD8 -- base:Var61(b):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  b ' -- ofst:0 -- size:4
MD9 -- base:Var62(d):global,,addr_taken,align(4),i32,decl:'int  d ' -- ofst:0 -- size:4
MD10 -- base:Var63(main):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  main (int  argc ,unsigned char  *  *  argv ,)' -- ofst:unbound
MD11 -- base:Var68(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD13 -- base:Var64(argc):local,formal_param,align(4),i32,decl:'int  argc ' -- ofst:0 -- size:4
MD14 -- base:Var65(argv):local,formal_param,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'unsigned char  *  *  argv ' -- ofst:0 -- size:4
MD15 -- base:Var66(c):local,align(4),i32,decl:'register int  c ' -- ofst:0 -- size:4
==-- DUMP MDSSAMgr VOpndRef 'main' --==

--- BB45 ---
--- BB1 ---


[11]  d = 1;

st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA    
    intconst:i32 1|0x1 attachinfo:Dbx
  ----
  st:i32 'd' attachinfo:Dbx,MDSSA
  --DEFVMD:(MD9V1,-,NextDEF:MD9V2,,NextDEF:MD9V3)|USESET:
  --DEFVMD:(MD2V1,-,NextDEF:MD2V2)|USESET:ild(id:98)


[12]  while ((c = foo (argc, argv)) != -1)

$12:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) attachinfo:Dbx,MDSSA
    ld:i32 'argc' decl:int  argc  param0 attachinfo:Dbx,MDSSA
    ld:*<4> 'argv' decl:unsigned char  *  *  argv  param1 attachinfo:Dbx,MDSSA
    ild:any dummy0 attachinfo:MDSSA        
        intconst:any 0|0x0
  ----
  $12:i32 = call 'foo'  attachinfo:Dbx,MDSSA
  --DEFVMD:(MD2V2,PrevDEF:MD2V1)|USESET:id(id:110)
  --DEFVMD:(MD3V1,-)|USESET:id(id:112)
  ld:i32 'argc' attachinfo:Dbx,MDSSA
  --USEVMD:MD13V0
  ild:any attachinfo:MDSSA
  --USEVMD:MD3V0,MD2V1
  ld:*<4> 'argv' attachinfo:Dbx,MDSSA
  --USEVMD:MD14V0
--- BB2 ---

stpr $13:*<4> attachinfo:Dbx    
    ld:*<4> 'argv' decl:unsigned char  *  *  argv  attachinfo:Dbx,MDSSA
  ----
  ld:*<4> 'argv' attachinfo:Dbx,MDSSA
  --USEVMD:MD14V0

stpr $15:i32 attachinfo:Dbx    
    ld:i32 'argc' decl:int  argc  attachinfo:MDSSA,Dbx
  ----
  ld:i32 'argc' attachinfo:MDSSA,Dbx
  --USEVMD:MD13V0
--- BB3 ---
MDPhi3: MD3V2 <- (ID id:112 MD3V1 BB2), (ID id:113 MD3V3 BB40)|USESET:(ild id:99) (ild id:100) 
MDPhi2: MD2V3 <- (ID id:110 MD2V2 BB2), (ID id:111 MD2V8 BB40)|USESET:(ild id:100) (id id:109) (ld id:24) 

$16:i32 = phi
    $12:i32 attachinfo:Dbx
    $17:i32

truebr label _$L7 attachinfo:Dbx    
    eq:bool attachinfo:Dbx        
        $5:i32 attachinfo:Dbx        
        intconst:i32 -1|0xffffffffffffffff attachinfo:Dbx
--- BB4 ---

truebr label _$L18    
    eq:bool        
        $16:i32 attachinfo:Dbx        
        intconst:i32 115|0x73
--- BB8 ---

truebr label _$L18    
    eq:bool        
        $16:i32 attachinfo:Dbx        
        intconst:i32 99|0x63
--- BB12 ---

truebr label _$L18    
    eq:bool        
        $16:i32 attachinfo:Dbx        
        intconst:i32 102|0x66
--- BB16 ---

truebr label _$L4    
    eq:bool        
        $16:i32 attachinfo:Dbx        
        intconst:i32 118|0x76
--- BB20 ---

falsebr label _$L8    
    eq:bool        
        $16:i32 attachinfo:Dbx        
        intconst:i32 86|0x56
--- BB21 ---

goto label _$L5
--- BB33 ---


[17]      a = b;

st:*<1> 'a' decl:unsigned char  *  a  attachinfo:Dbx,MDSSA    
    ld:*<1> 'b' decl:unsigned char  *  b  attachinfo:Dbx,MDSSA
  ----
  st:*<1> 'a' attachinfo:Dbx,MDSSA
  --DEFVMD:(MD2V6,PrevDEF:MD2V3)|USESET:id(id:102)
  --DEFVMD:(MD7V1,-)|USESET:
  ld:*<1> 'b' attachinfo:Dbx,MDSSA
  --USEVMD:MD8V0,MD2V3


[18]      break;

goto label _$L8 attachinfo:Dbx
--- BB35 ---


[20]      d = 1;

st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA    
    intconst:i32 1|0x1 attachinfo:Dbx
  ----
  st:i32 'd' attachinfo:Dbx,MDSSA
  --DEFVMD:(MD9V3,PrevDEF:MD9V1)|USESET:
  --DEFVMD:(MD2V5,PrevDEF:MD2V3)|USESET:id(id:107)


[21]      break;

goto label _$L8 attachinfo:Dbx
--- BB37 ---


[23]      d = 0;

st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA    
    intconst:i32 0|0x0 attachinfo:Dbx
  ----
  st:i32 'd' attachinfo:Dbx,MDSSA
  --DEFVMD:(MD9V2,PrevDEF:MD9V1)|USESET:
  --DEFVMD:(MD2V4,PrevDEF:MD2V3)|USESET:id(id:108)
--- BB39 ---
MDPhi1: MD2V7 <- (ID id:102 MD2V6 BB33), (ID id:107 MD2V5 BB35), (ID id:108 MD2V4 BB37), (ID id:109 MD2V3 BB20)|USESET:(ild id:99) 


[12]  while ((c = foo (argc, argv)) != -1)

$19:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) attachinfo:Dbx,MDSSA
    $15:i32 param0 attachinfo:Dbx
    $13:*<4> param1 attachinfo:Dbx
    ild:any dummy0 attachinfo:MDSSA        
        intconst:any 0|0x0
  ----
  $19:i32 = call 'foo'  attachinfo:Dbx,MDSSA
  --DEFVMD:(MD2V8,PrevDEF:MD2V7)|USESET:id(id:111)
  --DEFVMD:(MD3V3,PrevDEF:MD3V2)|USESET:id(id:113)
  ild:any attachinfo:MDSSA
  --USEVMD:MD3V2,MD2V7
--- BB40 ---

stpr $17:i32 attachinfo:Dbx    
    $19:i32 attachinfo:Dbx

goto label _$L6
--- BB42 ---


[26]  noret ();

$20:i32 = call 'noret' decl:void  noret () attachinfo:Dbx,MDSSA
    ild:any dummy0 attachinfo:MDSSA        
        intconst:any 0|0x0
  ----
  $20:i32 = call 'noret'  attachinfo:Dbx,MDSSA
  --DEFVMD:(MD2V9,PrevDEF:MD2V3)|USESET:
  --DEFVMD:(MD3V4,PrevDEF:MD3V2)|USESET:
  ild:any attachinfo:MDSSA
  --USEVMD:MD3V2,MD2V3
--- BB43 ---


[27]  return 0;

return attachinfo:Dbx
    intconst:i32 0|0x0 attachinfo:Dbx
==-- DUMP MDSSAMgr DU CHAIN 'main' --==

--- BB45 ---
--- BB1 ---

[11]  d = 1;

st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA    
    intconst:i32 1|0x1 attachinfo:Dbx
----------------
st(id:3) USESET:
  MD9V1:
  MD2V1:(ild id:98) 

[12]  while ((c = foo (argc, argv)) != -1)

$12:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) attachinfo:Dbx,MDSSA
    ld:i32 'argc' decl:int  argc  param0 attachinfo:Dbx,MDSSA
    ld:*<4> 'argv' decl:unsigned char  *  *  argv  param1 attachinfo:Dbx,MDSSA
    ild:any dummy0 attachinfo:MDSSA        
        intconst:any 0|0x0
----------------
call(id:8) USESET:
  MD2V2:(id id:110) 
  MD3V1:(id id:112) 
ld(id:6) DEFSET:
  MD13V0:
ild(id:98) DEFSET:
  MD3V0:
  MD2V1:(st id:3)
ld(id:7) DEFSET:
  MD14V0:
--- BB2 ---
stpr $13:*<4> attachinfo:Dbx    
    ld:*<4> 'argv' decl:unsigned char  *  *  argv  attachinfo:Dbx,MDSSA
----------------
ld(id:119) DEFSET:
  MD14V0:
stpr $15:i32 attachinfo:Dbx    
    ld:i32 'argc' decl:int  argc  attachinfo:MDSSA,Dbx
----------------
ld(id:19) DEFSET:
  MD13V0:
--- BB3 ---
MDPhi3: MD3V2 <- (ID id:112 MD3V1 BB2), (ID id:113 MD3V3 BB40)|USESET:(ild id:99) (ild id:100) 
MDPhi2: MD2V3 <- (ID id:110 MD2V2 BB2), (ID id:111 MD2V8 BB40)|USESET:(ild id:100) (id id:109) (ld id:24) 
$16:i32 = phi
    $12:i32 attachinfo:Dbx
    $17:i32
truebr label _$L7 attachinfo:Dbx    
    eq:bool attachinfo:Dbx        
        $5:i32 attachinfo:Dbx        
        intconst:i32 -1|0xffffffffffffffff attachinfo:Dbx
--- BB4 ---
truebr label _$L18    
    eq:bool        
        $16:i32 attachinfo:Dbx        
        intconst:i32 115|0x73
--- BB8 ---
truebr label _$L18    
    eq:bool        
        $16:i32 attachinfo:Dbx        
        intconst:i32 99|0x63
--- BB12 ---
truebr label _$L18    
    eq:bool        
        $16:i32 attachinfo:Dbx        
        intconst:i32 102|0x66
--- BB16 ---
truebr label _$L4    
    eq:bool        
        $16:i32 attachinfo:Dbx        
        intconst:i32 118|0x76
--- BB20 ---
falsebr label _$L8    
    eq:bool        
        $16:i32 attachinfo:Dbx        
        intconst:i32 86|0x56
--- BB21 ---
goto label _$L5
--- BB33 ---

[17]      a = b;

st:*<1> 'a' decl:unsigned char  *  a  attachinfo:Dbx,MDSSA    
    ld:*<1> 'b' decl:unsigned char  *  b  attachinfo:Dbx,MDSSA
----------------
st(id:25) USESET:
  MD2V6:(id id:102) 
  MD7V1:
ld(id:24) DEFSET:
  MD8V0:
  MD2V3:mdphi2 (call id:8) (call id:14) (st id:3) mdphi1 (st id:25) (st id:30) (st id:35)

[18]      break;

goto label _$L8 attachinfo:Dbx
--- BB35 ---

[20]      d = 1;

st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA    
    intconst:i32 1|0x1 attachinfo:Dbx
----------------
st(id:30) USESET:
  MD9V3:
  MD2V5:(id id:107) 

[21]      break;

goto label _$L8 attachinfo:Dbx
--- BB37 ---

[23]      d = 0;

st:i32 'd' decl:int  d  attachinfo:Dbx,MDSSA    
    intconst:i32 0|0x0 attachinfo:Dbx
----------------
st(id:35) USESET:
  MD9V2:
  MD2V4:(id id:108) 
--- BB39 ---
MDPhi1: MD2V7 <- (ID id:102 MD2V6 BB33), (ID id:107 MD2V5 BB35), (ID id:108 MD2V4 BB37), (ID id:109 MD2V3 BB20)|USESET:(ild id:99) 

[12]  while ((c = foo (argc, argv)) != -1)

$19:i32 = call 'foo' decl:int  foo (int ,unsigned char  *  * ,) attachinfo:Dbx,MDSSA
    $15:i32 param0 attachinfo:Dbx
    $13:*<4> param1 attachinfo:Dbx
    ild:any dummy0 attachinfo:MDSSA        
        intconst:any 0|0x0
----------------
call(id:14) USESET:
  MD2V8:(id id:111) 
  MD3V3:(id id:113) 
ild(id:99) DEFSET:
  MD3V2:mdphi3 (call id:8) (call id:14)
  MD2V7:mdphi1 (st id:25) (st id:30) (st id:35) mdphi2 mdphi2 mdphi2 mdphi2 (st id:3)
--- BB40 ---
stpr $17:i32 attachinfo:Dbx    
    $19:i32 attachinfo:Dbx
goto label _$L6
--- BB42 ---

[26]  noret ();

$20:i32 = call 'noret' decl:void  noret () attachinfo:Dbx,MDSSA
    ild:any dummy0 attachinfo:MDSSA        
        intconst:any 0|0x0
----------------
call(id:50) USESET:
  MD2V9:
  MD3V4:
ild(id:100) DEFSET:
  MD3V2:mdphi3 (call id:8) (call id:14)
  MD2V3:mdphi2 (st id:3) mdphi1 (st id:25) (st id:30) (st id:35)
--- BB43 ---

[27]  return 0;

return attachinfo:Dbx
    intconst:i32 0|0x0 attachinfo:Dbx

==---- DUMP DUMgr: IR REFERENCE '.program' ----==

==---- DUMP ALL MD ----==
MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:Var67(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:Var58(noret):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'void  noret ()' -- ofst:unbound
MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int ,unsigned char  *  * ,)' -- ofst:unbound
MD7 -- base:Var60(a):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  a ' -- ofst:0 -- size:4
MD8 -- base:Var61(b):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  b ' -- ofst:0 -- size:4
MD9 -- base:Var62(d):global,,addr_taken,align(4),i32,decl:'int  d ' -- ofst:0 -- size:4
MD10 -- base:Var63(main):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  main (int  argc ,unsigned char  *  *  argv ,)' -- ofst:unbound
MD11 -- base:Var68(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD12 -- base:Var71(pr3):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD13 -- base:Var64(argc):local,formal_param,align(4),i32,decl:'int  argc ' -- ofst:0 -- size:4
MD14 -- base:Var65(argv):local,formal_param,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'unsigned char  *  *  argv ' -- ofst:0 -- size:4
MD15 -- base:Var66(c):local,align(4),i32,decl:'register int  c ' -- ofst:0 -- size:4
MD16 -- base:Var69(pr1):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD17 -- base:Var70(pr2):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD18 -- base:Var72(pr4):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD19 -- base:Var73(pr5):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD20 -- base:Var74(pr6):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD21 -- base:Var75(pr7):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD22 -- base:Var76(pr8):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD23 -- base:Var77(pr9):local,unallocable,pointer,pt_base_sz:4,*,mem_size:4,decl:'' -- ofst:0 -- size:4
MD24 -- base:Var78(pr10):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD25 -- base:Var79(pr11):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD26 -- base:Var80(pr12):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD27 -- base:Var81(pr13):local,unallocable,pointer,pt_base_sz:4,*,mem_size:4,decl:'' -- ofst:0 -- size:4
MD28 -- base:Var82(pr14):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD29 -- base:Var83(pr15):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD30 -- base:Var84(pr16):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD31 -- base:Var85(pr17):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD32 -- base:Var86(pr18):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD33 -- base:Var87(pr19):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD34 -- base:Var88(pr20):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD35 -- base:Var89(pr21):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
==----==
RegionMayDef(OuterRegion):
RegionMayUse(OuterRegion):MD2,MD3
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
--- BB3 ---
--- BB1 ---
    region 'main',id:2
==---- DUMP PRSSA Manager '.program' ----==
==---- DUMP PRSSAMgr:VPR '.program' ----==

--- BB3 ---
--- BB1 ---
    ------------------
    region 'main',id:2
    VP:-- <= --
==---- DUMP Dominator Frontier Control Set ----==

BB1 DF set:
BB3 DF set:
==---- DUMP MDSSA Manager '.program' ----==
==---- DUMP NON-PR MD ----==
MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:Var67(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:Var58(noret):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'void  noret ()' -- ofst:unbound
MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int ,unsigned char  *  * ,)' -- ofst:unbound
MD7 -- base:Var60(a):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  a ' -- ofst:0 -- size:4
MD8 -- base:Var61(b):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  b ' -- ofst:0 -- size:4
MD9 -- base:Var62(d):global,,addr_taken,align(4),i32,decl:'int  d ' -- ofst:0 -- size:4
MD10 -- base:Var63(main):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  main (int  argc ,unsigned char  *  *  argv ,)' -- ofst:unbound
MD11 -- base:Var68(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD13 -- base:Var64(argc):local,formal_param,align(4),i32,decl:'int  argc ' -- ofst:0 -- size:4
MD14 -- base:Var65(argv):local,formal_param,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'unsigned char  *  *  argv ' -- ofst:0 -- size:4
MD15 -- base:Var66(c):local,align(4),i32,decl:'register int  c ' -- ofst:0 -- size:4
==-- DUMP MDSSAMgr VOpndRef '.program' --==

--- BB3 ---
--- BB1 ---

region 'main',id:2
==-- DUMP MDSSAMgr DU CHAIN '.program' --==

--- BB3 ---
--- BB1 ---
region 'main',id:2

==---- DUMP DUMgr: IR REFERENCE '.program' ----==

==---- DUMP ALL MD ----==
MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:Var67(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:Var58(noret):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'void  noret ()' -- ofst:unbound
MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int ,unsigned char  *  * ,)' -- ofst:unbound
MD7 -- base:Var60(a):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  a ' -- ofst:0 -- size:4
MD8 -- base:Var61(b):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  b ' -- ofst:0 -- size:4
MD9 -- base:Var62(d):global,,addr_taken,align(4),i32,decl:'int  d ' -- ofst:0 -- size:4
MD10 -- base:Var63(main):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  main (int  argc ,unsigned char  *  *  argv ,)' -- ofst:unbound
MD11 -- base:Var68(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD12 -- base:Var71(pr3):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD13 -- base:Var64(argc):local,formal_param,align(4),i32,decl:'int  argc ' -- ofst:0 -- size:4
MD14 -- base:Var65(argv):local,formal_param,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'unsigned char  *  *  argv ' -- ofst:0 -- size:4
MD15 -- base:Var66(c):local,align(4),i32,decl:'register int  c ' -- ofst:0 -- size:4
MD16 -- base:Var69(pr1):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD17 -- base:Var70(pr2):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD18 -- base:Var72(pr4):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD19 -- base:Var73(pr5):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD20 -- base:Var74(pr6):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD21 -- base:Var75(pr7):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD22 -- base:Var76(pr8):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD23 -- base:Var77(pr9):local,unallocable,pointer,pt_base_sz:4,*,mem_size:4,decl:'' -- ofst:0 -- size:4
MD24 -- base:Var78(pr10):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD25 -- base:Var79(pr11):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD26 -- base:Var80(pr12):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD27 -- base:Var81(pr13):local,unallocable,pointer,pt_base_sz:4,*,mem_size:4,decl:'' -- ofst:0 -- size:4
MD28 -- base:Var82(pr14):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD29 -- base:Var83(pr15):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD30 -- base:Var84(pr16):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD31 -- base:Var85(pr17):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD32 -- base:Var86(pr18):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD33 -- base:Var87(pr19):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD34 -- base:Var88(pr20):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD35 -- base:Var89(pr21):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
==----==
RegionMayDef(OuterRegion):
RegionMayUse(OuterRegion):MD2,MD3
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
--- BB3 ---
--- BB1 ---
    region 'main',id:2

==---- DUMP DUMgr: IR REFERENCE '.program' ----==

==---- DUMP ALL MD ----==
MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:Var67(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:Var58(noret):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'void  noret ()' -- ofst:unbound
MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int ,unsigned char  *  * ,)' -- ofst:unbound
MD7 -- base:Var60(a):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  a ' -- ofst:0 -- size:4
MD8 -- base:Var61(b):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  b ' -- ofst:0 -- size:4
MD9 -- base:Var62(d):global,,addr_taken,align(4),i32,decl:'int  d ' -- ofst:0 -- size:4
MD10 -- base:Var63(main):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  main (int  argc ,unsigned char  *  *  argv ,)' -- ofst:unbound
MD11 -- base:Var68(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD12 -- base:Var71(pr3):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD13 -- base:Var64(argc):local,formal_param,align(4),i32,decl:'int  argc ' -- ofst:0 -- size:4
MD14 -- base:Var65(argv):local,formal_param,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'unsigned char  *  *  argv ' -- ofst:0 -- size:4
MD15 -- base:Var66(c):local,align(4),i32,decl:'register int  c ' -- ofst:0 -- size:4
MD16 -- base:Var69(pr1):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD17 -- base:Var70(pr2):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD18 -- base:Var72(pr4):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD19 -- base:Var73(pr5):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD20 -- base:Var74(pr6):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD21 -- base:Var75(pr7):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD22 -- base:Var76(pr8):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD23 -- base:Var77(pr9):local,unallocable,pointer,pt_base_sz:4,*,mem_size:4,decl:'' -- ofst:0 -- size:4
MD24 -- base:Var78(pr10):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD25 -- base:Var79(pr11):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD26 -- base:Var80(pr12):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD27 -- base:Var81(pr13):local,unallocable,pointer,pt_base_sz:4,*,mem_size:4,decl:'' -- ofst:0 -- size:4
MD28 -- base:Var82(pr14):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD29 -- base:Var83(pr15):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD30 -- base:Var84(pr16):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD31 -- base:Var85(pr17):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD32 -- base:Var86(pr18):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD33 -- base:Var87(pr19):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD34 -- base:Var88(pr20):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
MD35 -- base:Var89(pr21):local,unallocable,i32,decl:'' -- ofst:0 -- size:4
==----==
RegionMayDef(OuterRegion):
RegionMayUse(OuterRegion):MD2,MD3
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
--- BB3 ---
--- BB1 ---
    region 'main',id:2
==---- DUMP MDSSA Manager '.program' ----==
==---- DUMP NON-PR MD ----==
MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD4 -- base:Var67(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
MD5 -- base:Var58(noret):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'void  noret ()' -- ofst:unbound
MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo (int ,unsigned char  *  * ,)' -- ofst:unbound
MD7 -- base:Var60(a):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  a ' -- ofst:0 -- size:4
MD8 -- base:Var61(b):global,,addr_taken,align(4),pointer,pt_base_sz:1,*,mem_size:4,decl:'unsigned char  *  b ' -- ofst:0 -- size:4
MD9 -- base:Var62(d):global,,addr_taken,align(4),i32,decl:'int  d ' -- ofst:0 -- size:4
MD10 -- base:Var63(main):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  main (int  argc ,unsigned char  *  *  argv ,)' -- ofst:unbound
MD11 -- base:Var68(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
MD13 -- base:Var64(argc):local,formal_param,align(4),i32,decl:'int  argc ' -- ofst:0 -- size:4
MD14 -- base:Var65(argv):local,formal_param,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'unsigned char  *  *  argv ' -- ofst:0 -- size:4
MD15 -- base:Var66(c):local,align(4),i32,decl:'register int  c ' -- ofst:0 -- size:4
==-- DUMP MDSSAMgr VOpndRef '.program' --==

--- BB3 ---
--- BB1 ---

region 'main',id:2
==-- DUMP MDSSAMgr DU CHAIN '.program' --==

--- BB3 ---
--- BB1 ---
region 'main',id:2