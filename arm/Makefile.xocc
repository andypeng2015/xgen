#CPPSRC  += $(notdir $(wildcard $(DIR_SRC)/*.cpp))
#ASMSRC  += $(notdir $(wildcard $(DIR_SRC)/*.s))
#ASMSRC  += $(notdir $(wildcard $(STARTUP_SRC)/*.s))
#OBJ     = $(ASMSRC:%.s=%.o) $(CSRC:%.c=%.o) $(CPPSRC:%.cpp=%.o)
#OBJS    = $(addprefix $(RESULT)/,$(OBJ))
#CXXSRC += 
#OBJS = $(CSRC:%.c=%.o) $(CPPSRC:%.cpp=%.o) $(CXXSRC:%.cxx=%.o)

TARG=FOR_ARM
TARG_DIR=arm

include ../$(TARG_DIR)/Makefile.inc
include ../xocc/Makefile.inc
include ../reader/Makefile.inc
include ../cfe/Makefile.inc
include ../com/Makefile.inc
include ../xgen/Makefile.inc
include ../opt/Makefile.inc

ifdef WIN
#Add predefined macro if build host is Windows.
CFLAGS += -D_ON_WINDOWS_
endif

CFLAGS +=\
   -D_DEBUG_ \
   -O0 -g2 \
   -D$(TARG) \
   -Wno-unknown-pragmas \
   -Wno-write-strings \
   -Wsign-promo \
   -Wparentheses \
   -Wformat \
   -Wsign-compare \
   -Wpointer-arith \
   -Wno-multichar \
   -Winit-self \
   -Wswitch \
   -Wall #-DDEBUG_XOC -fprofile-arcs -ftest-coverage # # 

#CFLAGS+=\
   -Werror=pointer-to-int-cast \
   -Wmaybe-uninitialized \
   -Wuninitialized \
   -Wstrict-overflow \
   -Wtype-limits \
   -Werror=reorder

CC := $(shell which clang++ > /dev/null)

ifndef CC
CC = $(if $(shell which clang), clang, gcc)
endif

ifneq (,$(filter $(CC),g++ gcc))
    CFLAGS += -Wstrict-aliasing=3 -finline-limit=10000000
endif

xocc.exe: targ_gen xocc_objs opt_objs arm_objs com_objs cfe_objs reader_objs xgen_objs
	$(CC) $(XOCC_OBJS) $(OPT_OBJS) $(ARM_OBJS) $(CFE_OBJS) $(XGEN_OBJS) $(COM_OBJS) $(READER_OBJS) $(CFLAGS) -o $@ -lstdc++ -lm  #-lgcov -lgcc
	@echo "success!!"

%.o:%.cpp
	@echo "==---- Build $<"
	$(INFER) $(CC) $(CFLAGS) -c $< -o $@

targ_gen:
	@echo "==---- Generate target dependent files ----=="
	make -C ../$(TARG_DIR)/precompile CFLAGS="$(CFLAGS)" TARGET=$(TARG)
	cd ../$(TARG_DIR)/precompile; ./gentminfo.exe

reader_objs: $(READER_OBJS)
cfe_objs: $(CFE_OBJS)
com_objs: $(COM_OBJS)
xocc_objs: $(XOCC_OBJS)
opt_objs: $(OPT_OBJS)
arm_objs: $(ARM_OBJS)
dex_objs: $(DEX_OBJS)
xgen_objs: $(XGEN_OBJS)

clean:
	make -C ../ clean
	@find ../ -name "arm_targ_mach_resource.cpp" | xargs rm -f
