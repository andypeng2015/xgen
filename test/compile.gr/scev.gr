region program x() {
region func mat (undefined,var a:*<8>:(align(4)),var b:*<8>:(align(4)),var c:*<8>:(align(4)),var n:i32:(align(4)),var m:i32:(align(4)),var o:i32:(align(4))) {
    //e.g:C demo.
    //void mat(double *a, double *b, double *c,
    //         int n, int m, int o) {
    //    int i1;
    //    int i2;
    //    int n1;
    //    int n2;
    //    int j1;
    //    int j2;
    //    int i,j;
    //    for (int k = 0; k < o; ++k) {
    //        //i1 * n1 + j1 and i2 * n2 + j2 are CSE.
    //        c[i1 * n1 + j1] = c[i1 * n1 + j1] +
    //            a[i * n + k] * b[j * m + k];
    //    }
    //}
    var i1:i32:(align(4));
    var i2:i32:(align(4));
    var n1:i32:(align(4));
    var n2:i32:(align(4));
    var j1:i32:(align(4));
    var j2:i32:(align(4));
    var i:i32:(align(4));
    var j:i32:(align(4));
    var k:i32:(align(4));
    st:i32 k = 0;
    label "_GR__$L1";
    falsebr (lt ld:i32 k, ld:i32 o), "_GR__$L2";

    stpr $21:i32 = mul:i32 ld:i32 i1, ld:i32 n1;
    stpr $22:i32 = add:i32 $21:i32, ld:i32 j1;
    stpr $23:i32 = mul:i32 $22:i32, 8;
    stpr $24:*<8> = add:*<8> ld:*<8> c, $23:i32;
    stpr $9:f64 = ild:f64 $24:*<8>;

    //  LOOP:
    //  $1=(a+k)*8
    //  ild($1)
    //  k=k+1
    //==>
    //  $2=a*8
    //  LOOP:
    //  $1=$2+k
    //  ild($1)
    //  k=k*8
    stpr $10:i32 = mul:i32 ld:i32 i, ld:i32 n;
    stpr $11:i32 = add:i32 $10:i32, ld:i32 k;
    stpr $12:i32 = mul:i32 $11:i32, 8;
    stpr $13:*<8> = add:*<8> ld:*<8> a, $12:i32;
    stpr $14:f64 = ild:f64 $13:*<8>;

    stpr $15:i32 = mul:i32 ld:i32 j, ld:i32 m;
    stpr $16:i32 = add:i32 $15:i32, ld:i32 k;
    stpr $17:i32 = mul:i32 $16:i32, 8;
    stpr $18:*<8> = add:*<8> ld:*<8> b, $17:i32;
    stpr $19:f64 = ild:f64 $18:*<8>;

    stpr $20:f64 = mul:f64 $14:f64, $19:f64;

    ist:f64 = $24:*<8>, add:f64 $9:f64, $20:f64;

    st:i32 k = add ld k, 1;
    goto "_GR__$L1";
    label "_GR__$L2";
    return ;
}
}
