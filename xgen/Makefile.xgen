$(info "====---- START Makefile.xgen ----====")

ifeq ($(TARG),)
  $(error "NEED TARG INFO:e.g:make TARG=FOR_ARM TARG_DIR=../arm")
endif

ifeq ($(TARG_DIR),)
  $(error "NEED TARG_DIR INFO:e.g:make TARG=FOR_ARM TARG_DIR=../arm")
endif

ifeq ($(THREAD_NUM),)
  THREAD_NUM=1
endif

CFLAGS+=-Wall
ROOT_DIR=..
XGEN_DIR=.
COM_DIR=../com
OPT_DIR=../opt
READER_DIR=../reader

include $(XGEN_DIR)/Makefile.inc
include $(TARG_DIR)/Makefile.inc
include $(ROOT_DIR)/Makefile.xoc.inc
include $(ROOT_DIR)/Makefile.option

#SET DEFAULT CFLAGS.
CFLAGS+=\
  -D$(TARG) \
  -Wno-unknown-pragmas \
  -Wno-write-strings \
  -Wsign-promo \
  -Wparentheses \
  -Wformat \
  -Wsign-compare \
  -Wpointer-arith \
  -Wno-multichar \
  -Winit-self \
  -Wswitch \
  -D_SUPPORT_C11_

#Disable -Wconversion to avoid too much complaints.

ifneq (,$(filter $(CC),g++ gcc))
  CFLAGS+=-Wno-strict-aliasing -finline-limit=10000000
endif

ifeq ($(TARG), FOR_ARM)
  TARG_OBJS:=$(foreach n,$(ARM_OBJS),$(TARG_DIR)/$(n))
else ifeq ($(TARG), FOR_X86)
  TARG_OBJS:=$(foreach n,$(X86_OBJS),$(TARG_DIR)/$(n))
else ifeq ($(TARG), FOR_TECO)
  TARG_OBJS:=$(foreach n,$(TECO_OBJS),$(TARG_DIR)/$(n))
else
  $(error "UNKNOWN TARG:$(TARG)")
endif

INC=-I . -I com -I opt -I reader

#Display internal variables.
$(info "WIN=$(WIN),WSL=$(WSL)")
$(info "TARG:$(TARG)")
$(info "TARG_DIR:$(TARG_DIR)")
$(info "CC:$(CC)")
$(info "INC:$(INC)")
$(info "CFLAGS:$(CFLAGS)")
$(info "DEBUG:$(DEBUG)")
$(info "THREAD_NUM:$(THREAD_NUM)")

$(XGEN_OUTPUT): targmach_gen $(XOC_OUTPUT) xgen_objs targ_objs
	@echo "START BUILD $(XGEN_OUTPUT)"
	@echo "EXEC:"
	ar rcs $(XGEN_OUTPUT) $(ROOT_DIR)/$(XOC_OUTPUT) $(XGEN_OBJS) $(TARG_OBJS)
	@echo "END BUILD $(XGEN_OUTPUT)"
	@echo "SUCCESS TO GENERATE $(XGEN_OUTPUT)!!"

%.o:%.cpp
	@echo "BUILD $<"
	@echo "EXEC:"
	$(CC) $(CFLAGS) $(INC) -c $< -o $@

$(XOC_OUTPUT):
	@echo "START BUILD $(XOC_OUTPUT)"
	@echo "EXEC:"
	cd $(ROOT_DIR) && make -j$(THREAD_NUM) -f Makefile.xoc TARG=$(TARG) \
	  DEBUG=$(DEBUG) CFLAGS="$(CFLAGS)" THREAD_NUM=$(THREAD_NUM)
	@echo "END BUILD $(XOC_OUTPUT)"

xgen_objs: $(XGEN_OBJS)
	@echo "EXEC:xgen_objs:$(XGEN_OBJS)"

targ_objs: $(TARG_OBJS)
	@echo "EXEC:targ_objs:$(TARG_OBJS)"

targmach_gen:
	@echo "==-- START GENERATE TARGET MACHINE INFO AND RELATED FILES  --=="
	@echo "EXEC:"
	make -j$(THREAD_NUM) -C $(TARG_DIR)/precompile TARGET=$(TARG) CC=$(CC) \
	  DEBUG=$(DEBUG) CFLAGS="$(CFLAGS)" THREAD_NUM=$(THREAD_NUM)
	cd $(TARG_DIR)/precompile; ./gentminfo.exe
	@echo "==-- END GENERATE TARGET MACHINE INFO AND RELATED FILES  --=="

clean:
	@find ./ -name "*.gcda" | xargs rm -f
	@find ./ -name "*.gcno" | xargs rm -f
	@find ./ -name "*.o" | xargs rm -f
	@find ./ -name "*.d" | xargs rm -f
	@find ./ -name "*.a" | xargs rm -f
	@find ./ -name "*.dot" | xargs rm -f
	@find ./ -name "*.exe" | xargs rm -f
	@find ./ -name "*.elf" | xargs rm -f
	@find ./ -name "*.out" | xargs rm -f
	@find ./ -name "*.tmp" | xargs rm -f
	@find ./ -name "*.vcg" | xargs rm -f
	@find ./ -name "*.cxx" | xargs rm -f
	@find ./ -name "*.asm" | xargs rm -f
	@find ./ -name "*.swp" | xargs rm -f
	@find ./ -name "*.swo" | xargs rm -f
	@find ./ -name "*.log" | xargs rm -f
	@find ./ -name "*.LOGLOG" | xargs rm -f
	@find ./ -name "LOGLOG" | xargs rm -f

-include $(READER_DIR)/*.d
-include $(COM_DIR)/*.d
-include $(OPT_DIR)/*.d
-include $(XGEN_DIR)/*.d
-include $(TARG_DIR)/*.d

$(info "====---- END Makefile.xgen ----====")
