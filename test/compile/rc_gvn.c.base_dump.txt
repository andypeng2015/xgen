
==---- DUMP Global Value Numbering 'main' ----==
  -- BB8 
  
  -- BB1 
  

  [7]  check = 0;
  
  st:i32 'check' decl:int  check  attachinfo:Dbx,MDSSA      
      intconst:i32 0|0x0 attachinfo:Dbx
  vn1 <- {
  	const id:2 vn1
   }
  stpr $12:u32 attachinfo:Dbx      
      mul:u32 attachinfo:Dbx          
          intconst:i32 0|0x0 attachinfo:Dbx          
          intconst:u32 4|0x4
  vn3 <- {
  	mul id:10 vn3
  	const id:6 vn1
  	const id:15 vn2
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  ist:*<1> attachinfo:Dbx,MDSSA      
      add:*<4> attachinfo:Dbx          
          lda:*<20> 'args' decl:unsigned char  *  args [5] attachinfo:Dbx          
          $12:u32 attachinfo:Dbx      
      lda:*<4> '_const_string_1' attachinfo:Dbx
  vn8 <- {
  	add id:4 vn6
  	lda id:8 vn8
  	lda id:5 vn5
  	$12 id:54 vn3
   }
  stpr $13:u32 attachinfo:Dbx      
      mul:u32 attachinfo:Dbx          
          intconst:i32 1|0x1 attachinfo:Dbx          
          intconst:u32 4|0x4
  vn10 <- {
  	mul id:58 vn10
  	const id:12 vn9
  	const id:57 vn2
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  ist:*<1> attachinfo:Dbx,MDSSA      
      add:*<4> attachinfo:Dbx          
          lda:*<20> 'args' decl:unsigned char  *  args [5] attachinfo:Dbx          
          $13:u32 attachinfo:Dbx      
      lda:*<4> '_const_string_2' attachinfo:Dbx
  vn13 <- {
  	add id:59 vn11
  	lda id:13 vn13
  	lda id:11 vn5
  	$13 id:60 vn10
   }
  stpr $14:u32 attachinfo:Dbx      
      mul:u32 attachinfo:Dbx          
          intconst:i32 2|0x2 attachinfo:Dbx          
          intconst:u32 4|0x4
  vn15 <- {
  	mul id:64 vn15
  	const id:17 vn14
  	const id:63 vn2
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  ist:*<1> attachinfo:Dbx,MDSSA      
      add:*<4> attachinfo:Dbx          
          lda:*<20> 'args' decl:unsigned char  *  args [5] attachinfo:Dbx          
          $14:u32 attachinfo:Dbx      
      lda:*<4> '_const_string_3' attachinfo:Dbx
  vn18 <- {
  	add id:65 vn16
  	lda id:18 vn18
  	lda id:16 vn5
  	$14 id:66 vn15
   }
  stpr $15:u32 attachinfo:Dbx      
      mul:u32 attachinfo:Dbx          
          intconst:i32 3|0x3 attachinfo:Dbx          
          intconst:u32 4|0x4
  vn20 <- {
  	mul id:70 vn20
  	const id:22 vn19
  	const id:69 vn2
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  ist:*<1> attachinfo:Dbx,MDSSA      
      add:*<4> attachinfo:Dbx          
          lda:*<20> 'args' decl:unsigned char  *  args [5] attachinfo:Dbx          
          $15:u32 attachinfo:Dbx      
      lda:*<4> '_const_string_4' attachinfo:Dbx
  vn23 <- {
  	add id:71 vn21
  	lda id:23 vn23
  	lda id:21 vn5
  	$15 id:72 vn20
   }
  stpr $16:u32 attachinfo:Dbx      
      mul:u32 attachinfo:Dbx          
          intconst:i32 4|0x4 attachinfo:Dbx          
          intconst:u32 4|0x4
  vn24 <- {
  	mul id:76 vn24
  	const id:27 vn2
  	const id:75 vn2
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  ist:*<1> attachinfo:Dbx,MDSSA      
      add:*<4> attachinfo:Dbx          
          lda:*<20> 'args' decl:unsigned char  *  args [5] attachinfo:Dbx          
          $16:u32 attachinfo:Dbx      
      lda:*<4> '_const_string_5' attachinfo:Dbx
  vn27 <- {
  	add id:77 vn25
  	lda id:28 vn27
  	lda id:26 vn5
  	$16 id:78 vn24
   }

  [12]  if (x (5, args) != 0 || check != 2)
  
  $17:i32 = call 'x' decl:extern int  x (int ,unsigned char  *  * ,)  attachinfo:Dbx,MDSSA
      intconst:i32 5|0x5 param0 attachinfo:Dbx
      lda:*<20> 'args' decl:unsigned char  *  args [5] param1 attachinfo:Dbx
      ild:any dummy0 attachinfo:MDSSA          
          intconst:any 0|0x0
   <- {
  	const id:32 vn28
  	ild id:50 --
  	lda id:33 vn5
  	const id:30 --
   }
  -- BB2 
  
  truebr label _$L2 attachinfo:Dbx      
      ne:bool attachinfo:Dbx          
          $17:i32 attachinfo:Dbx          
          intconst:i32 0|0x0 attachinfo:Dbx
   <- {
  	ne id:36 --
  	$17 id:34 --
  	const id:35 vn1
   }
  -- BB9 
  
  falsebr label _$L1 attachinfo:Dbx      
      ne:bool attachinfo:Dbx          
          ld:i32 'check' decl:int  check  attachinfo:Dbx,MDSSA          
          intconst:i32 2|0x2 attachinfo:Dbx
   <- {
  	ne id:38 --
  	ld id:1 --
  	const id:37 vn14
   }
  -- BB3   _$L2 
  

  [13]    abort ();
  
  $18:i32 = call 'abort' decl:extern void  abort ()  attachinfo:Dbx,MDSSA
      ild:any dummy0 attachinfo:MDSSA          
          intconst:any 0|0x0
   <- {
  	ild id:51 --
  	const id:25 --
   }
  -- BB5   _$L1 
  

  [14]  exit (0);
  
  $19:i32 = call 'exit' decl:extern void  exit (int ,)  attachinfo:Dbx,MDSSA
      intconst:i32 0|0x0 param0 attachinfo:Dbx
      ild:any dummy0 attachinfo:MDSSA          
          intconst:any 0|0x0
   <- {
  	const id:45 vn1
  	ild id:52 --
  	const id:20 --
   }
  -- BB6 
  
  return
   <- { }
==---- DUMP Global Value Numbering 'main' ----==
  -- BB8 
  
  -- BB1 
  

  [7]  check = 0;
  
  st:i32 'check' decl:int  check  attachinfo:Dbx,MDSSA      
      intconst:i32 0|0x0 attachinfo:Dbx
  vn1 <- {
  	const id:2 vn1
   }
  stpr $12:u32 attachinfo:Dbx      
      mul:u32 attachinfo:Dbx          
          intconst:i32 0|0x0 attachinfo:Dbx          
          intconst:u32 4|0x4
  vn3 <- {
  	mul id:10 vn3
  	const id:6 vn1
  	const id:15 vn2
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  ist:*<1> attachinfo:Dbx,MDSSA      
      add:*<4> attachinfo:Dbx          
          lda:*<20> 'args' decl:unsigned char  *  args [5] attachinfo:Dbx          
          $12:u32 attachinfo:Dbx      
      lda:*<4> '_const_string_1' attachinfo:Dbx
  vn8 <- {
  	add id:4 vn6
  	lda id:8 vn8
  	lda id:5 vn5
  	$12 id:54 vn3
   }
  stpr $13:u32 attachinfo:Dbx      
      mul:u32 attachinfo:Dbx          
          intconst:i32 1|0x1 attachinfo:Dbx          
          intconst:u32 4|0x4
  vn10 <- {
  	mul id:58 vn10
  	const id:12 vn9
  	const id:57 vn2
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  ist:*<1> attachinfo:Dbx,MDSSA      
      add:*<4> attachinfo:Dbx          
          lda:*<20> 'args' decl:unsigned char  *  args [5] attachinfo:Dbx          
          $13:u32 attachinfo:Dbx      
      lda:*<4> '_const_string_2' attachinfo:Dbx
  vn13 <- {
  	add id:59 vn11
  	lda id:13 vn13
  	lda id:11 vn5
  	$13 id:60 vn10
   }
  stpr $14:u32 attachinfo:Dbx      
      mul:u32 attachinfo:Dbx          
          intconst:i32 2|0x2 attachinfo:Dbx          
          intconst:u32 4|0x4
  vn15 <- {
  	mul id:64 vn15
  	const id:17 vn14
  	const id:63 vn2
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  ist:*<1> attachinfo:Dbx,MDSSA      
      add:*<4> attachinfo:Dbx          
          lda:*<20> 'args' decl:unsigned char  *  args [5] attachinfo:Dbx          
          $14:u32 attachinfo:Dbx      
      lda:*<4> '_const_string_3' attachinfo:Dbx
  vn18 <- {
  	add id:65 vn16
  	lda id:18 vn18
  	lda id:16 vn5
  	$14 id:66 vn15
   }
  stpr $15:u32 attachinfo:Dbx      
      mul:u32 attachinfo:Dbx          
          intconst:i32 3|0x3 attachinfo:Dbx          
          intconst:u32 4|0x4
  vn20 <- {
  	mul id:70 vn20
  	const id:22 vn19
  	const id:69 vn2
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  ist:*<1> attachinfo:Dbx,MDSSA      
      add:*<4> attachinfo:Dbx          
          lda:*<20> 'args' decl:unsigned char  *  args [5] attachinfo:Dbx          
          $15:u32 attachinfo:Dbx      
      lda:*<4> '_const_string_4' attachinfo:Dbx
  vn23 <- {
  	add id:71 vn21
  	lda id:23 vn23
  	lda id:21 vn5
  	$15 id:72 vn20
   }
  stpr $16:u32 attachinfo:Dbx      
      mul:u32 attachinfo:Dbx          
          intconst:i32 4|0x4 attachinfo:Dbx          
          intconst:u32 4|0x4
  vn24 <- {
  	mul id:76 vn24
  	const id:27 vn2
  	const id:75 vn2
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  ist:*<1> attachinfo:Dbx,MDSSA      
      add:*<4> attachinfo:Dbx          
          lda:*<20> 'args' decl:unsigned char  *  args [5] attachinfo:Dbx          
          $16:u32 attachinfo:Dbx      
      lda:*<4> '_const_string_5' attachinfo:Dbx
  vn27 <- {
  	add id:77 vn25
  	lda id:28 vn27
  	lda id:26 vn5
  	$16 id:78 vn24
   }

  [12]  if (x (5, args) != 0 || check != 2)
  
  $17:i32 = call 'x' decl:extern int  x (int ,unsigned char  *  * ,)  attachinfo:Dbx,MDSSA
      intconst:i32 5|0x5 param0 attachinfo:Dbx
      lda:*<20> 'args' decl:unsigned char  *  args [5] param1 attachinfo:Dbx
      ild:any dummy0 attachinfo:MDSSA          
          intconst:any 0|0x0
   <- {
  	const id:32 vn28
  	ild id:50 --
  	lda id:33 vn5
  	const id:30 --
   }
  -- BB2 
  
  truebr label _$L2 attachinfo:Dbx      
      ne:bool attachinfo:Dbx          
          $17:i32 attachinfo:Dbx          
          intconst:i32 0|0x0 attachinfo:Dbx
   <- {
  	ne id:36 --
  	$17 id:34 --
  	const id:35 vn1
   }
  -- BB9 
  
  falsebr label _$L1 attachinfo:Dbx      
      ne:bool attachinfo:Dbx          
          ld:i32 'check' decl:int  check  attachinfo:Dbx,MDSSA          
          intconst:i32 2|0x2 attachinfo:Dbx
   <- {
  	ne id:38 --
  	ld id:1 --
  	const id:37 vn14
   }
  -- BB3   _$L2 
  

  [13]    abort ();
  
  $18:i32 = call 'abort' decl:extern void  abort ()  attachinfo:Dbx,MDSSA
      ild:any dummy0 attachinfo:MDSSA          
          intconst:any 0|0x0
   <- {
  	ild id:51 --
  	const id:25 --
   }
  -- BB5   _$L1 
  

  [14]  exit (0);
  
  $19:i32 = call 'exit' decl:extern void  exit (int ,)  attachinfo:Dbx,MDSSA
      intconst:i32 0|0x0 param0 attachinfo:Dbx
      ild:any dummy0 attachinfo:MDSSA          
          intconst:any 0|0x0
   <- {
  	const id:45 vn1
  	ild id:52 --
  	const id:20 --
   }
  -- BB6 
  
  return
   <- { }
==---- DUMP Global Value Numbering 'main' ----==
  -- BB8 
  
  -- BB1 
  

  [7]  check = 0;
  
  st:i32 'check' decl:int  check  attachinfo:Dbx,MDSSA      
      intconst:i32 0|0x0 attachinfo:Dbx
  vn1 <- {
  	const id:2 vn1
   }
  stpr $12:u32 attachinfo:Dbx      
      intconst:u32 0|0x0 attachinfo:Dbx
  vn1 <- {
  	const id:39 vn1
   }
  stpr $20:*<4> attachinfo:Dbx      
      add:*<4> attachinfo:Dbx          
          lda:*<20> 'args' decl:unsigned char  *  args [5] attachinfo:Dbx          
          $12:u32 attachinfo:Dbx
  vn4 <- {
  	add id:4 vn4
  	lda id:5 vn3
  	$12 id:54 vn1
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  ist:*<1> attachinfo:Dbx,MDSSA      
      $20:*<4> attachinfo:Dbx      
      lda:*<4> '_const_string_1' attachinfo:Dbx
  vn6 <- {
  	$20 id:84 vn4
  	lda id:8 vn6
   }
  stpr $13:u32 attachinfo:Dbx      
      intconst:u32 4|0x4 attachinfo:Dbx
  vn7 <- {
  	const id:10 vn7
   }
  stpr $21:*<4> attachinfo:Dbx      
      add:*<4> attachinfo:Dbx          
          lda:*<20> 'args' decl:unsigned char  *  args [5] attachinfo:Dbx          
          $13:u32 attachinfo:Dbx
  vn8 <- {
  	add id:59 vn8
  	lda id:11 vn3
  	$13 id:60 vn7
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  ist:*<1> attachinfo:Dbx,MDSSA      
      $21:*<4> attachinfo:Dbx      
      lda:*<4> '_const_string_2' attachinfo:Dbx
  vn10 <- {
  	$21 id:86 vn8
  	lda id:13 vn10
   }
  stpr $14:u32 attachinfo:Dbx      
      intconst:u32 8|0x8 attachinfo:Dbx
  vn11 <- {
  	const id:58 vn11
   }
  stpr $22:*<4> attachinfo:Dbx      
      add:*<4> attachinfo:Dbx          
          lda:*<20> 'args' decl:unsigned char  *  args [5] attachinfo:Dbx          
          $14:u32 attachinfo:Dbx
  vn12 <- {
  	add id:65 vn12
  	lda id:16 vn3
  	$14 id:66 vn11
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  ist:*<1> attachinfo:Dbx,MDSSA      
      $22:*<4> attachinfo:Dbx      
      lda:*<4> '_const_string_3' attachinfo:Dbx
  vn14 <- {
  	$22 id:88 vn12
  	lda id:18 vn14
   }
  stpr $15:u32 attachinfo:Dbx      
      intconst:u32 12|0xc attachinfo:Dbx
  vn15 <- {
  	const id:64 vn15
   }
  stpr $23:*<4> attachinfo:Dbx      
      add:*<4> attachinfo:Dbx          
          lda:*<20> 'args' decl:unsigned char  *  args [5] attachinfo:Dbx          
          $15:u32 attachinfo:Dbx
  vn16 <- {
  	add id:71 vn16
  	lda id:21 vn3
  	$15 id:72 vn15
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  ist:*<1> attachinfo:Dbx,MDSSA      
      $23:*<4> attachinfo:Dbx      
      lda:*<4> '_const_string_4' attachinfo:Dbx
  vn18 <- {
  	$23 id:90 vn16
  	lda id:23 vn18
   }
  stpr $16:u32 attachinfo:Dbx      
      intconst:u32 16|0x10 attachinfo:Dbx
  vn19 <- {
  	const id:70 vn19
   }
  stpr $24:*<4> attachinfo:Dbx      
      add:*<4> attachinfo:Dbx          
          lda:*<20> 'args' decl:unsigned char  *  args [5] attachinfo:Dbx          
          $16:u32 attachinfo:Dbx
  vn20 <- {
  	add id:77 vn20
  	lda id:26 vn3
  	$16 id:78 vn19
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  ist:*<1> attachinfo:Dbx,MDSSA      
      $24:*<4> attachinfo:Dbx      
      lda:*<4> '_const_string_5' attachinfo:Dbx
  vn22 <- {
  	$24 id:92 vn20
  	lda id:28 vn22
   }

  [12]  if (x (5, args) != 0 || check != 2)
  
  $17:i32 = call 'x' decl:extern int  x (int ,unsigned char  *  * ,)  attachinfo:Dbx,MDSSA
      intconst:i32 5|0x5 param0 attachinfo:Dbx
      lda:*<20> 'args' decl:unsigned char  *  args [5] param1 attachinfo:Dbx
      ild:any dummy0 attachinfo:MDSSA          
          intconst:any 0|0x0
   <- {
  	const id:32 vn23
  	ild id:50 --
  	lda id:33 vn3
  	const id:30 --
   }
  -- BB2 
  
  truebr label _$L2 attachinfo:Dbx      
      ne:bool attachinfo:Dbx          
          $17:i32 attachinfo:Dbx          
          intconst:i32 0|0x0 attachinfo:Dbx
   <- {
  	ne id:36 --
  	$17 id:34 --
  	const id:35 vn1
   }
  -- BB9 
  
  truebr label _$L1 attachinfo:Dbx      
      eq:bool attachinfo:Dbx          
          ld:i32 'check' decl:int  check  attachinfo:Dbx,MDSSA          
          intconst:i32 2|0x2 attachinfo:Dbx
   <- {
  	eq id:38 --
  	ld id:1 --
  	const id:37 vn24
   }
  -- BB3   _$L2 
  

  [13]    abort ();
  
  $18:i32 = call 'abort' decl:extern void  abort ()  attachinfo:Dbx,MDSSA
      ild:any dummy0 attachinfo:MDSSA          
          intconst:any 0|0x0
   <- {
  	ild id:51 --
  	const id:25 --
   }
  -- BB5   _$L1 
  

  [14]  exit (0);
  
  $19:i32 = call 'exit' decl:extern void  exit (int ,)  attachinfo:Dbx,MDSSA
      intconst:i32 0|0x0 param0 attachinfo:Dbx
      ild:any dummy0 attachinfo:MDSSA          
          intconst:any 0|0x0
   <- {
  	const id:45 vn1
  	ild id:52 --
  	const id:20 --
   }
  -- BB6 
  
  return
   <- { }
==---- DUMP Copy Propagation 'main' ----==
PROPAGATING CANDIDATE: const(id:39) THAT LOCATED IN STMT:
    stpr $12:u32 attachinfo:Dbx        
        intconst:u32 0|0x0 attachinfo:Dbx
WILL REPLACE pr THAT LOCATED IN STMT:
    stpr $20:*<4> attachinfo:Dbx        
        add:*<4> attachinfo:Dbx            
            lda:*<20> 'args' decl:unsigned char  *  args [5] attachinfo:Dbx            
            $12:u32 attachinfo:Dbx
==---- DUMP Copy Propagation 'main' ----==
PROPAGATING CANDIDATE: const(id:10) THAT LOCATED IN STMT:
    stpr $13:u32 attachinfo:Dbx        
        intconst:u32 4|0x4 attachinfo:Dbx
WILL REPLACE pr THAT LOCATED IN STMT:
    stpr $21:*<4> attachinfo:Dbx        
        add:*<4> attachinfo:Dbx            
            lda:*<20> 'args' decl:unsigned char  *  args [5] attachinfo:Dbx            
            $13:u32 attachinfo:Dbx
==---- DUMP Copy Propagation 'main' ----==
PROPAGATING CANDIDATE: const(id:58) THAT LOCATED IN STMT:
    stpr $14:u32 attachinfo:Dbx        
        intconst:u32 8|0x8 attachinfo:Dbx
WILL REPLACE pr THAT LOCATED IN STMT:
    stpr $22:*<4> attachinfo:Dbx        
        add:*<4> attachinfo:Dbx            
            lda:*<20> 'args' decl:unsigned char  *  args [5] attachinfo:Dbx            
            $14:u32 attachinfo:Dbx
==---- DUMP Copy Propagation 'main' ----==
PROPAGATING CANDIDATE: const(id:64) THAT LOCATED IN STMT:
    stpr $15:u32 attachinfo:Dbx        
        intconst:u32 12|0xc attachinfo:Dbx
WILL REPLACE pr THAT LOCATED IN STMT:
    stpr $23:*<4> attachinfo:Dbx        
        add:*<4> attachinfo:Dbx            
            lda:*<20> 'args' decl:unsigned char  *  args [5] attachinfo:Dbx            
            $15:u32 attachinfo:Dbx
==---- DUMP Copy Propagation 'main' ----==
PROPAGATING CANDIDATE: const(id:70) THAT LOCATED IN STMT:
    stpr $16:u32 attachinfo:Dbx        
        intconst:u32 16|0x10 attachinfo:Dbx
WILL REPLACE pr THAT LOCATED IN STMT:
    stpr $24:*<4> attachinfo:Dbx        
        add:*<4> attachinfo:Dbx            
            lda:*<20> 'args' decl:unsigned char  *  args [5] attachinfo:Dbx            
            $16:u32 attachinfo:Dbx
==---- DUMP Copy Propagation 'main' ----==
PROPAGATING CANDIDATE: lda(id:5) THAT LOCATED IN STMT:
    stpr $20:*<4> attachinfo:Dbx        
        lda:*<20> 'args' decl:unsigned char  *  args [5] attachinfo:Dbx
WILL REPLACE pr THAT LOCATED IN STMT:
    ist:*<1> attachinfo:Dbx,MDSSA        
        $20:*<4> attachinfo:Dbx        
        lda:*<4> '_const_string_1' attachinfo:Dbx
==---- DUMP Copy Propagation 'main' ----==
PROPAGATING CANDIDATE: lda(id:11) THAT LOCATED IN STMT:
    stpr $21:*<4> attachinfo:Dbx        
        lda:*<4>:offset(4) 'args' decl:unsigned char  *  args [5] attachinfo:Dbx
WILL REPLACE pr THAT LOCATED IN STMT:
    ist:*<1> attachinfo:Dbx,MDSSA        
        $21:*<4> attachinfo:Dbx        
        lda:*<4> '_const_string_2' attachinfo:Dbx
==---- DUMP Copy Propagation 'main' ----==
PROPAGATING CANDIDATE: lda(id:16) THAT LOCATED IN STMT:
    stpr $22:*<4> attachinfo:Dbx        
        lda:*<4>:offset(8) 'args' decl:unsigned char  *  args [5] attachinfo:Dbx
WILL REPLACE pr THAT LOCATED IN STMT:
    ist:*<1> attachinfo:Dbx,MDSSA        
        $22:*<4> attachinfo:Dbx        
        lda:*<4> '_const_string_3' attachinfo:Dbx
==---- DUMP Copy Propagation 'main' ----==
PROPAGATING CANDIDATE: lda(id:21) THAT LOCATED IN STMT:
    stpr $23:*<4> attachinfo:Dbx        
        lda:*<4>:offset(12) 'args' decl:unsigned char  *  args [5] attachinfo:Dbx
WILL REPLACE pr THAT LOCATED IN STMT:
    ist:*<1> attachinfo:Dbx,MDSSA        
        $23:*<4> attachinfo:Dbx        
        lda:*<4> '_const_string_4' attachinfo:Dbx
==---- DUMP Copy Propagation 'main' ----==
PROPAGATING CANDIDATE: lda(id:26) THAT LOCATED IN STMT:
    stpr $24:*<4> attachinfo:Dbx        
        lda:*<4>:offset(16) 'args' decl:unsigned char  *  args [5] attachinfo:Dbx
WILL REPLACE pr THAT LOCATED IN STMT:
    ist:*<1> attachinfo:Dbx,MDSSA        
        $24:*<4> attachinfo:Dbx        
        lda:*<4> '_const_string_5' attachinfo:Dbx
==---- DUMP Global Value Numbering 'main' ----==
  -- BB8 
  
  -- BB1 
  

  [7]  check = 0;
  
  st:i32 'check' decl:int  check  attachinfo:Dbx,MDSSA      
      intconst:i32 0|0x0 attachinfo:Dbx
  vn1 <- {
  	const id:2 vn1
   }
  stpr $12:u32 attachinfo:Dbx      
      intconst:u32 0|0x0 attachinfo:Dbx
  vn1 <- {
  	const id:39 vn1
   }
  stpr $20:*<4> attachinfo:Dbx      
      lda:*<20> 'args' decl:unsigned char  *  args [5] attachinfo:Dbx
  vn3 <- {
  	lda id:5 vn3
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  st:*<1> 'args' decl:unsigned char  *  args [5] attachinfo:Dbx,MDSSA      
      lda:*<4> '_const_string_1' attachinfo:Dbx
  vn5 <- {
  	lda id:8 vn5
   }
  stpr $13:u32 attachinfo:Dbx      
      intconst:u32 4|0x4 attachinfo:Dbx
  vn6 <- {
  	const id:10 vn6
   }
  stpr $21:*<4> attachinfo:Dbx      
      lda:*<4>:offset(4) 'args' decl:unsigned char  *  args [5] attachinfo:Dbx
  vn8 <- {
  	lda id:11 vn8
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  st:*<1>:offset(4) 'args' decl:unsigned char  *  args [5] attachinfo:MDSSA,Dbx      
      lda:*<4> '_const_string_2' attachinfo:Dbx
  vn10 <- {
  	lda id:13 vn10
   }
  stpr $14:u32 attachinfo:Dbx      
      intconst:u32 8|0x8 attachinfo:Dbx
  vn11 <- {
  	const id:58 vn11
   }
  stpr $22:*<4> attachinfo:Dbx      
      lda:*<4>:offset(8) 'args' decl:unsigned char  *  args [5] attachinfo:Dbx
  vn13 <- {
  	lda id:16 vn13
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  st:*<1>:offset(8) 'args' decl:unsigned char  *  args [5] attachinfo:MDSSA,Dbx      
      lda:*<4> '_const_string_3' attachinfo:Dbx
  vn15 <- {
  	lda id:18 vn15
   }
  stpr $15:u32 attachinfo:Dbx      
      intconst:u32 12|0xc attachinfo:Dbx
  vn16 <- {
  	const id:64 vn16
   }
  stpr $23:*<4> attachinfo:Dbx      
      lda:*<4>:offset(12) 'args' decl:unsigned char  *  args [5] attachinfo:Dbx
  vn18 <- {
  	lda id:21 vn18
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  st:*<1>:offset(12) 'args' decl:unsigned char  *  args [5] attachinfo:MDSSA,Dbx      
      lda:*<4> '_const_string_4' attachinfo:Dbx
  vn20 <- {
  	lda id:23 vn20
   }
  stpr $16:u32 attachinfo:Dbx      
      intconst:u32 16|0x10 attachinfo:Dbx
  vn21 <- {
  	const id:70 vn21
   }
  stpr $24:*<4> attachinfo:Dbx      
      lda:*<4>:offset(16) 'args' decl:unsigned char  *  args [5] attachinfo:Dbx
  vn23 <- {
  	lda id:26 vn23
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  st:*<1>:offset(16) 'args' decl:unsigned char  *  args [5] attachinfo:MDSSA,Dbx      
      lda:*<4> '_const_string_5' attachinfo:Dbx
  vn25 <- {
  	lda id:28 vn25
   }

  [12]  if (x (5, args) != 0 || check != 2)
  
  $17:i32 = call 'x' decl:extern int  x (int ,unsigned char  *  * ,)  attachinfo:Dbx,MDSSA
      intconst:i32 5|0x5 param0 attachinfo:Dbx
      lda:*<20> 'args' decl:unsigned char  *  args [5] param1 attachinfo:Dbx
      ild:any dummy0 attachinfo:MDSSA          
          intconst:any 0|0x0
   <- {
  	const id:32 vn26
  	ild id:50 --
  	lda id:33 vn3
  	const id:30 --
   }
  -- BB2 
  
  truebr label _$L2 attachinfo:Dbx      
      ne:bool attachinfo:Dbx          
          $17:i32 attachinfo:Dbx          
          intconst:i32 0|0x0 attachinfo:Dbx
   <- {
  	ne id:36 --
  	$17 id:34 --
  	const id:35 vn1
   }
  -- BB9 
  
  truebr label _$L1 attachinfo:Dbx      
      eq:bool attachinfo:Dbx          
          ld:i32 'check' decl:int  check  attachinfo:Dbx,MDSSA          
          intconst:i32 2|0x2 attachinfo:Dbx
   <- {
  	eq id:38 --
  	ld id:1 --
  	const id:37 vn27
   }
  -- BB3   _$L2 
  

  [13]    abort ();
  
  $18:i32 = call 'abort' decl:extern void  abort ()  attachinfo:Dbx,MDSSA
      ild:any dummy0 attachinfo:MDSSA          
          intconst:any 0|0x0
   <- {
  	ild id:51 --
  	const id:25 --
   }
  -- BB5   _$L1 
  

  [14]  exit (0);
  
  $19:i32 = call 'exit' decl:extern void  exit (int ,)  attachinfo:Dbx,MDSSA
      intconst:i32 0|0x0 param0 attachinfo:Dbx
      ild:any dummy0 attachinfo:MDSSA          
          intconst:any 0|0x0
   <- {
  	const id:45 vn1
  	ild id:52 --
  	const id:20 --
   }
  -- BB6 
  
  return
   <- { }
==---- DUMP Global Value Numbering 'main' ----==
  -- BB8 
  
  -- BB1 
  

  [7]  check = 0;
  
  st:i32 'check' decl:int  check  attachinfo:Dbx,MDSSA      
      intconst:i32 0|0x0 attachinfo:Dbx
  vn1 <- {
  	const id:2 vn1
   }
  stpr $12:u32 attachinfo:Dbx      
      intconst:u32 0|0x0 attachinfo:Dbx
  vn1 <- {
  	const id:39 vn1
   }
  stpr $20:*<4> attachinfo:Dbx      
      lda:*<20> 'args' decl:unsigned char  *  args [5] attachinfo:Dbx
  vn3 <- {
  	lda id:5 vn3
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  st:*<1> 'args' decl:unsigned char  *  args [5] attachinfo:Dbx,MDSSA      
      lda:*<4> '_const_string_1' attachinfo:Dbx
  vn5 <- {
  	lda id:8 vn5
   }
  stpr $13:u32 attachinfo:Dbx      
      intconst:u32 4|0x4 attachinfo:Dbx
  vn6 <- {
  	const id:10 vn6
   }
  stpr $21:*<4> attachinfo:Dbx      
      lda:*<4>:offset(4) 'args' decl:unsigned char  *  args [5] attachinfo:Dbx
  vn8 <- {
  	lda id:11 vn8
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  st:*<1>:offset(4) 'args' decl:unsigned char  *  args [5] attachinfo:MDSSA,Dbx      
      lda:*<4> '_const_string_2' attachinfo:Dbx
  vn10 <- {
  	lda id:13 vn10
   }
  stpr $14:u32 attachinfo:Dbx      
      intconst:u32 8|0x8 attachinfo:Dbx
  vn11 <- {
  	const id:58 vn11
   }
  stpr $22:*<4> attachinfo:Dbx      
      lda:*<4>:offset(8) 'args' decl:unsigned char  *  args [5] attachinfo:Dbx
  vn13 <- {
  	lda id:16 vn13
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  st:*<1>:offset(8) 'args' decl:unsigned char  *  args [5] attachinfo:MDSSA,Dbx      
      lda:*<4> '_const_string_3' attachinfo:Dbx
  vn15 <- {
  	lda id:18 vn15
   }
  stpr $15:u32 attachinfo:Dbx      
      intconst:u32 12|0xc attachinfo:Dbx
  vn16 <- {
  	const id:64 vn16
   }
  stpr $23:*<4> attachinfo:Dbx      
      lda:*<4>:offset(12) 'args' decl:unsigned char  *  args [5] attachinfo:Dbx
  vn18 <- {
  	lda id:21 vn18
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  st:*<1>:offset(12) 'args' decl:unsigned char  *  args [5] attachinfo:MDSSA,Dbx      
      lda:*<4> '_const_string_4' attachinfo:Dbx
  vn20 <- {
  	lda id:23 vn20
   }
  stpr $16:u32 attachinfo:Dbx      
      intconst:u32 16|0x10 attachinfo:Dbx
  vn21 <- {
  	const id:70 vn21
   }
  stpr $24:*<4> attachinfo:Dbx      
      lda:*<4>:offset(16) 'args' decl:unsigned char  *  args [5] attachinfo:Dbx
  vn23 <- {
  	lda id:26 vn23
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  st:*<1>:offset(16) 'args' decl:unsigned char  *  args [5] attachinfo:MDSSA,Dbx      
      lda:*<4> '_const_string_5' attachinfo:Dbx
  vn25 <- {
  	lda id:28 vn25
   }

  [12]  if (x (5, args) != 0 || check != 2)
  
  $17:i32 = call 'x' decl:extern int  x (int ,unsigned char  *  * ,)  attachinfo:Dbx,MDSSA
      intconst:i32 5|0x5 param0 attachinfo:Dbx
      lda:*<20> 'args' decl:unsigned char  *  args [5] param1 attachinfo:Dbx
      ild:any dummy0 attachinfo:MDSSA          
          intconst:any 0|0x0
   <- {
  	const id:32 vn26
  	ild id:50 --
  	lda id:33 vn3
  	const id:30 --
   }
  -- BB2 
  
  truebr label _$L2 attachinfo:Dbx      
      ne:bool attachinfo:Dbx          
          $17:i32 attachinfo:Dbx          
          intconst:i32 0|0x0 attachinfo:Dbx
   <- {
  	ne id:36 --
  	$17 id:34 --
  	const id:35 vn1
   }
  -- BB9 
  
  truebr label _$L1 attachinfo:Dbx      
      eq:bool attachinfo:Dbx          
          ld:i32 'check' decl:int  check  attachinfo:Dbx,MDSSA          
          intconst:i32 2|0x2 attachinfo:Dbx
   <- {
  	eq id:38 --
  	ld id:1 --
  	const id:37 vn27
   }
  -- BB3   _$L2 
  

  [13]    abort ();
  
  $18:i32 = call 'abort' decl:extern void  abort ()  attachinfo:Dbx,MDSSA
      ild:any dummy0 attachinfo:MDSSA          
          intconst:any 0|0x0
   <- {
  	ild id:51 --
  	const id:25 --
   }
  -- BB5   _$L1 
  

  [14]  exit (0);
  
  $19:i32 = call 'exit' decl:extern void  exit (int ,)  attachinfo:Dbx,MDSSA
      intconst:i32 0|0x0 param0 attachinfo:Dbx
      ild:any dummy0 attachinfo:MDSSA          
          intconst:any 0|0x0
   <- {
  	const id:45 vn1
  	ild id:52 --
  	const id:20 --
   }
  -- BB6 
  
  return
   <- { }
==---- DUMP Global Value Numbering 'main' ----==
  -- BB8 
  
  -- BB1 
  

  [7]  check = 0;
  
  st:i32 'check' decl:int  check  attachinfo:Dbx,MDSSA      
      intconst:i32 0|0x0 attachinfo:Dbx
  vn1 <- {
  	const id:2 vn1
   }
  stpr $12:u32 attachinfo:Dbx      
      intconst:u32 0|0x0 attachinfo:Dbx
  vn1 <- {
  	const id:39 vn1
   }
  stpr $20:*<4> attachinfo:Dbx      
      lda:*<20> 'args' decl:unsigned char  *  args [5] attachinfo:Dbx
  vn3 <- {
  	lda id:5 vn3
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  st:*<1> 'args' decl:unsigned char  *  args [5] attachinfo:Dbx,MDSSA      
      lda:*<4> '_const_string_1' attachinfo:Dbx
  vn5 <- {
  	lda id:8 vn5
   }
  stpr $13:u32 attachinfo:Dbx      
      intconst:u32 4|0x4 attachinfo:Dbx
  vn6 <- {
  	const id:10 vn6
   }
  stpr $21:*<4> attachinfo:Dbx      
      lda:*<4>:offset(4) 'args' decl:unsigned char  *  args [5] attachinfo:Dbx
  vn8 <- {
  	lda id:11 vn8
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  st:*<1>:offset(4) 'args' decl:unsigned char  *  args [5] attachinfo:MDSSA,Dbx      
      lda:*<4> '_const_string_2' attachinfo:Dbx
  vn10 <- {
  	lda id:13 vn10
   }
  stpr $14:u32 attachinfo:Dbx      
      intconst:u32 8|0x8 attachinfo:Dbx
  vn11 <- {
  	const id:58 vn11
   }
  stpr $22:*<4> attachinfo:Dbx      
      lda:*<4>:offset(8) 'args' decl:unsigned char  *  args [5] attachinfo:Dbx
  vn13 <- {
  	lda id:16 vn13
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  st:*<1>:offset(8) 'args' decl:unsigned char  *  args [5] attachinfo:MDSSA,Dbx      
      lda:*<4> '_const_string_3' attachinfo:Dbx
  vn15 <- {
  	lda id:18 vn15
   }
  stpr $15:u32 attachinfo:Dbx      
      intconst:u32 12|0xc attachinfo:Dbx
  vn16 <- {
  	const id:64 vn16
   }
  stpr $23:*<4> attachinfo:Dbx      
      lda:*<4>:offset(12) 'args' decl:unsigned char  *  args [5] attachinfo:Dbx
  vn18 <- {
  	lda id:21 vn18
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  st:*<1>:offset(12) 'args' decl:unsigned char  *  args [5] attachinfo:MDSSA,Dbx      
      lda:*<4> '_const_string_4' attachinfo:Dbx
  vn20 <- {
  	lda id:23 vn20
   }
  stpr $16:u32 attachinfo:Dbx      
      intconst:u32 16|0x10 attachinfo:Dbx
  vn21 <- {
  	const id:70 vn21
   }
  stpr $24:*<4> attachinfo:Dbx      
      lda:*<4>:offset(16) 'args' decl:unsigned char  *  args [5] attachinfo:Dbx
  vn23 <- {
  	lda id:26 vn23
   }

  [8]  char *args[] = {"a", "b", "c", "d", "e"};
  
  st:*<1>:offset(16) 'args' decl:unsigned char  *  args [5] attachinfo:MDSSA,Dbx      
      lda:*<4> '_const_string_5' attachinfo:Dbx
  vn25 <- {
  	lda id:28 vn25
   }

  [12]  if (x (5, args) != 0 || check != 2)
  
  $17:i32 = call 'x' decl:extern int  x (int ,unsigned char  *  * ,)  attachinfo:Dbx,MDSSA
      intconst:i32 5|0x5 param0 attachinfo:Dbx
      lda:*<20> 'args' decl:unsigned char  *  args [5] param1 attachinfo:Dbx
      ild:any dummy0 attachinfo:MDSSA          
          intconst:any 0|0x0
   <- {
  	const id:32 vn26
  	ild id:50 --
  	lda id:33 vn3
  	const id:30 --
   }
  -- BB2 
  
  truebr label _$L2 attachinfo:Dbx      
      ne:bool attachinfo:Dbx          
          $17:i32 attachinfo:Dbx          
          intconst:i32 0|0x0 attachinfo:Dbx
   <- {
  	ne id:36 --
  	$17 id:34 --
  	const id:35 vn1
   }
  -- BB9 
  
  truebr label _$L1 attachinfo:Dbx      
      eq:bool attachinfo:Dbx          
          ld:i32 'check' decl:int  check  attachinfo:Dbx,MDSSA          
          intconst:i32 2|0x2 attachinfo:Dbx
   <- {
  	eq id:38 --
  	ld id:1 --
  	const id:37 vn27
   }
  -- BB3   _$L2 
  

  [13]    abort ();
  
  $18:i32 = call 'abort' decl:extern void  abort ()  attachinfo:Dbx,MDSSA
      ild:any dummy0 attachinfo:MDSSA          
          intconst:any 0|0x0
   <- {
  	ild id:51 --
  	const id:25 --
   }
  -- BB5   _$L1 
  

  [14]  exit (0);
  
  $19:i32 = call 'exit' decl:extern void  exit (int ,)  attachinfo:Dbx,MDSSA
      intconst:i32 0|0x0 param0 attachinfo:Dbx
      ild:any dummy0 attachinfo:MDSSA          
          intconst:any 0|0x0
   <- {
  	const id:45 vn1
  	ild id:52 --
  	const id:20 --
   }
  -- BB6 
  
  return
   <- { }
==---- DUMP Global Value Numbering '.program' ----==
  -- BB3 
  
  -- BB1 
  
  region 'main',id:2
   <- { }
  -- BB2 
  

  [4]int check = 0;
  
  st:i32 'check' decl:int  check  attachinfo:Dbx,MDSSA      
      intconst:i32 0|0x0 attachinfo:Dbx
  vn1 <- {
  	const id:3 vn1
   }
==---- DUMP Global Value Numbering '.program' ----==
  -- BB3 
  
  -- BB1 
  
  region 'main',id:2
   <- { }
  -- BB2 
  
  st:i32 'check' decl:int  check  attachinfo:Dbx,MDSSA      
      intconst:i32 0|0x0 attachinfo:Dbx
  vn1 <- {
  	const id:3 vn1
   }
==---- DUMP Global Value Numbering '.program' ----==
  -- BB3 
  
  -- BB1 
  
  region 'main',id:2
   <- { }
  -- BB2 
  
  st:i32 'check' decl:int  check  attachinfo:Dbx,MDSSA      
      intconst:i32 0|0x0 attachinfo:Dbx
  vn1 <- {
  	const id:3 vn1
   }
==---- DUMP Global Value Numbering '.program' ----==
  -- BB3 
  
  -- BB1 
  
  region 'main',id:2
   <- { }
  -- BB2 
  
  st:i32 'check' decl:int  check  attachinfo:Dbx,MDSSA      
      intconst:i32 0|0x0 attachinfo:Dbx
  vn1 <- {
  	const id:3 vn1
   }