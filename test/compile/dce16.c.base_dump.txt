
==---- DUMP Dead Code Eliminiation 's61' ----==
==-- Ineffect BB --==
--0- BB13		ineffect BB!
--0- BB1		ineffect BB!
--0- BB2		ineffect BB!
--0- BB14		ineffect BB!
--0- BB4		ineffect BB!
--0- BB5		ineffect BB!
--0- BB6		ineffect BB!
--0- BB9		ineffect BB!
--0- BB11		ineffect BB!

  ==---- DUMP IRBBList 's61' ----==
  ----- BB13 --- rpo:0 -----
  ATTR:entry_bb fall_through 
  STMT NUM:0
  
  ----- BB1 --- rpo:5 -----
  ATTR:fall_through 
  STMT NUM:6

     [7]  pc[5] = blank_and_NUL;
     
     starray (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
         elem_num[6]
         intconst:i32 5|0x5 dim0 attachinfo:Dbx         
         lda:*<24> 'pc' array_base attachinfo:Dbx         
         lda:*<0> 'blank_and_NUL' rhs attachinfo:Dbx

     [8]  for (j = 0; j < 6; j++)
     
     st:i32 'j' attachinfo:Dbx,MDSSA         
         intconst:i32 0|0x0 attachinfo:Dbx
     stpr $11:*<1>         
         array (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
             elemnum[6]
             ld:i32 'j' dim0 attachinfo:Dbx,MDSSA             
             lda:*<24> 'pc' array_base attachinfo:Dbx
     stpr $12:bool         
         ne:bool attachinfo:Dbx             
             ild:u8 attachinfo:Dbx,MDSSA                 
                 array (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
                     elemnum[6]
                     ld:i32 'j' dim0 attachinfo:Dbx,MDSSA                     
                     lda:*<24> 'pc' array_base attachinfo:Dbx             
             intconst:u8 0|0x0

     [7]  pc[5] = blank_and_NUL;
     
     stpr $16:i32 attachinfo:Dbx         
         ld:i32 'j' attachinfo:Dbx,MDSSA
     stpr $19:i32 attachinfo:Dbx         
         ld:i32 'rc' attachinfo:MDSSA
  
  ----- BB2 --- rpo:10 -----
  LABEL:_$L1 
  ATTR:fall_through branch_target 
  STMT NUM:3
     $20:i32 = phi
         $19:i32
         $21:i32
     $17:i32 = phi
         $16:i32
         $18:i32

     [8]  for (j = 0; j < 6; j++)
     
     falsebr label _$L2 attachinfo:Dbx         
         lt:bool attachinfo:Dbx             
             $17:i32 attachinfo:Dbx             
             intconst:i32 6|0x6 attachinfo:Dbx
  
  ----- BB14 --- rpo:15 -----
  ATTR:fall_through 
  STMT NUM:2
     stpr $7:*<1>         
         $11:*<1>
     stpr $8:bool         
         $12:bool
  
  ----- BB4 --- rpo:20 -----
  LABEL:_$L3 
  ATTR:fall_through branch_target 
  STMT NUM:2
     $21:i32 = phi
         $20:i32
         $21:i32
         $22:i32

     [9]    while (*pc[j])
     
     falsebr label _$L4 attachinfo:Dbx         
         ne:bool             
             $8:bool             
             boolconst:bool 0
  
  ----- BB5 --- rpo:30 -----
  ATTR:fall_through 
  STMT NUM:2

     [10]      if (*pc[j]++ < 0)
     
     stpr $5:*<1> attachinfo:Dbx         
         $7:*<1>
     falsebr label _$L3 attachinfo:Dbx         
         lt:bool attachinfo:Dbx             
             cvt:i32 attachinfo:Dbx                 
                 ild:u8 attachinfo:Dbx,MDSSA                     
                     $5:*<1> attachinfo:Dbx             
             intconst:i32 0|0x0 attachinfo:Dbx
  
  ----- BB6 --- rpo:35 -----
  ATTR:
  STMT NUM:2

     [11]        rc = 1;
     
     stpr $22:i32 attachinfo:Dbx         
         intconst:i32 1|0x1 attachinfo:Dbx
     goto label _$L3
  
  ----- BB9 --- rpo:25 -----
  LABEL:_$L4 
  ATTR:branch_target 
  STMT NUM:2

     [8]  for (j = 0; j < 6; j++)
     
     stpr $18:i32 attachinfo:Dbx         
         add:i32             
             $17:i32 attachinfo:Dbx             
             intconst:i32 1|0x1
     goto label _$L1
  
  ----- BB11 --- rpo:40 -----
  LABEL:_$L2 
  ATTR:fall_through branch_target 
  STMT NUM:2

     [12]  return rc;
     
     st:i32 'rc' attachinfo:Dbx,MDSSA         
         $20:i32
     return attachinfo:Dbx
         ld:i32 'rc' attachinfo:Dbx,MDSSA
  
  ==---- DUMP PRSSA Manager 's61' ----==
  ==---- DUMP PRSSAMgr:VPR 's61' ----==
  
  VPR1:$1v0--: DEF:-- USE:--
  VPR2:$2v0--: DEF:-- USE:--
  VPR0:--v0--: DEF:-- USE:--
  VPR4:$1v1$3: DEF:-- USE:--
  VPR5:$1v2$4: DEF:-- USE:--
  VPR6:$1v3$5: DEF:stpr($5,id:26) USE:id:30
  VPR7:$2v2$6: DEF:-- USE:--
  VPR8:$7v1$7: DEF:stpr($7,id:65) USE:id:90
  VPR9:$8v1$8: DEF:stpr($8,id:93) USE:id:91
  VPR10:$9v1$9: DEF:-- USE:--
  VPR11:$10v1$10: DEF:-- USE:--
  VPR12:$11v1$11: DEF:stpr($11,id:99) USE:id:98
  VPR13:$12v1$12: DEF:stpr($12,id:101) USE:id:100
  VPR14:$13v1$13: DEF:-- USE:--
  VPR15:$14v0--: DEF:-- USE:--
  VPR16:$14v1$16: DEF:stpr($16,id:107) USE:id:116
  VPR17:$14v2$17: DEF:phi($17,id:113) USE:id:108,id:111
  VPR18:$14v3$18: DEF:stpr($18,id:110) USE:id:114
  VPR19:$15v0--: DEF:-- USE:--
  VPR20:$15v1$19: DEF:stpr($19,id:46) USE:id:123
  VPR21:$15v2$20: DEF:phi($20,id:120) USE:id:41,id:121
  VPR22:$15v3$21: DEF:phi($21,id:119) USE:id:44,id:115
  VPR23:$15v4$22: DEF:stpr($22,id:117) USE:id:7
  VPR24:$23v0--: DEF:-- USE:--
  VPR25:$23v1$25: DEF:-- USE:--
  VPR26:$23v2$24: DEF:-- USE:--
  VPR27:$23v3$26: DEF:-- USE:--
  --- BB13 ---
  --- BB1 ---
  -- <= --
  -- <= --
  $11 <= --
  $12 <= --
  $16 <= --
  $19 <= --
  --- BB2 ---
  $20 <= $19,$21
  $17 <= $16,$18
  -- <= $17
  --- BB14 ---
  $7 <= $11
  $8 <= $12
  --- BB4 ---
  $21 <= $20,$21,$22
  -- <= $8
  --- BB5 ---
  $5 <= $7
  -- <= $5
  --- BB6 ---
  $22 <= --
  -- <= --
  --- BB9 ---
  $18 <= $17
  -- <= --
  --- BB11 ---
  -- <= $20
  -- <= --
  ==---- DUMP MDSSA Manager 's61' ----==
  ==---- DUMP NON-PR MD ----==
  MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD4 -- base:Var64(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
  MD5 -- base:Var58(s61):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  s61 ()' -- ofst:unbound
  MD6 -- base:Var63(blank_and_NUL):global,,addr_taken,private,array,align(4),mc,mem_size:0,decl:'static unsigned char  blank_and_NUL [0]' -- ofst:0 -- size:0
  MD7 -- base:Var65(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD8 -- base:Var62(pc):local,array,align(4),mc,mem_size:24,decl:'unsigned char  *  pc [6]' -- ofst:0 -- size:4
  MD9 -- base:Var63(blank_and_NUL):global,,addr_taken,private,array,align(4),mc,mem_size:0,decl:'static unsigned char  blank_and_NUL [0]' -- ofst:0 -- size:4
  MD10 -- base:Var61(j):local,align(4),i32,decl:'int  j ' -- ofst:0 -- size:4
  MD11 -- base:Var59(rc):local,align(4),i32,decl:'int  rc ' -- ofst:0 -- size:4
  MD14 -- base:Var62(pc):local,array,align(4),mc,mem_size:24,decl:'unsigned char  *  pc [6]' -- ofst:20 -- size:4
  MD15 -- base:Var63(blank_and_NUL):global,,addr_taken,private,array,align(4),mc,mem_size:0,decl:'static unsigned char  blank_and_NUL [0]' -- ofst:0 -- size:1
  MD16 -- base:Var62(pc):local,array,align(4),mc,mem_size:24,decl:'unsigned char  *  pc [6]' -- start:0 -- end:24 -- range
  MD21 -- base:Var62(pc):local,array,align(4),mc,mem_size:24,decl:'unsigned char  *  pc [6]' -- ofst:0 -- size:24
  ==-- DUMP MDSSAMgr VOpndRef 's61' --==
  
  --- BB13 ---
  --- BB1 ---
  

  [7]  pc[5] = blank_and_NUL;
  
  starray (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
      elem_num[6]
      intconst:i32 5|0x5 dim0 attachinfo:Dbx      
      lda:*<24> 'pc' decl:unsigned char  *  pc [6] array_base attachinfo:Dbx      
      lda:*<0> 'blank_and_NUL' decl:static unsigned char  blank_and_NUL [0] rhs attachinfo:Dbx
    ----
    starray (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
    --DEF:VMD8:MD14V1,-|USESET:array(id:23),array(id:3)
    --DEF:VMD9:MD16V1,-|USESET:array(id:23),array(id:3)
  

  [8]  for (j = 0; j < 6; j++)
  
  st:i32 'j' decl:int  j  attachinfo:Dbx,MDSSA      
      intconst:i32 0|0x0 attachinfo:Dbx
    ----
    st:i32 'j' attachinfo:Dbx,MDSSA
    --DEF:VMD10:MD10V1,-|USESET:ld(id:25),ld(id:106),ld(id:14)
  
  stpr $11:*<1>      
      array (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
          elemnum[6]
          ld:i32 'j' decl:int  j  dim0 attachinfo:Dbx,MDSSA          
          lda:*<24> 'pc' decl:unsigned char  *  pc [6] array_base attachinfo:Dbx
    ----
    array (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
    --USE:MD8V0,MD14V1,MD16V1
    ld:i32 'j' attachinfo:Dbx,MDSSA
    --USE:MD10V1
  
  stpr $12:bool      
      ne:bool attachinfo:Dbx          
          ild:u8 attachinfo:Dbx,MDSSA              
              array (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
                  elemnum[6]
                  ld:i32 'j' decl:int  j  dim0 attachinfo:Dbx,MDSSA                  
                  lda:*<24> 'pc' decl:unsigned char  *  pc [6] array_base attachinfo:Dbx          
          intconst:u8 0|0x0
    ----
    ild:u8 attachinfo:Dbx,MDSSA
    --USE:MD2V0,MD3V0
    array (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
    --USE:MD8V0,MD14V1,MD16V1
    ld:i32 'j' attachinfo:Dbx,MDSSA
    --USE:MD10V1
  

  [7]  pc[5] = blank_and_NUL;
  
  stpr $16:i32 attachinfo:Dbx      
      ld:i32 'j' decl:int  j  attachinfo:Dbx,MDSSA
    ----
    ld:i32 'j' attachinfo:Dbx,MDSSA
    --USE:MD10V1
  
  stpr $19:i32 attachinfo:Dbx      
      ld:i32 'rc' decl:int  rc  attachinfo:MDSSA
    ----
    ld:i32 'rc' attachinfo:MDSSA
    --USE:MD11V0
  --- BB2 ---
  
  $20:i32 = phi
      $19:i32
      $21:i32
  
  $17:i32 = phi
      $16:i32
      $18:i32
  

  [8]  for (j = 0; j < 6; j++)
  
  falsebr label _$L2 attachinfo:Dbx      
      lt:bool attachinfo:Dbx          
          $17:i32 attachinfo:Dbx          
          intconst:i32 6|0x6 attachinfo:Dbx
  --- BB14 ---
  
  stpr $7:*<1>      
      $11:*<1>
  
  stpr $8:bool      
      $12:bool
  --- BB4 ---
  
  $21:i32 = phi
      $20:i32
      $21:i32
      $22:i32
  

  [9]    while (*pc[j])
  
  falsebr label _$L4 attachinfo:Dbx      
      ne:bool          
          $8:bool          
          boolconst:bool 0
  --- BB5 ---
  

  [10]      if (*pc[j]++ < 0)
  
  stpr $5:*<1> attachinfo:Dbx      
      $7:*<1>
  
  falsebr label _$L3 attachinfo:Dbx      
      lt:bool attachinfo:Dbx          
          cvt:i32 attachinfo:Dbx              
              ild:u8 attachinfo:Dbx,MDSSA                  
                  $5:*<1> attachinfo:Dbx          
          intconst:i32 0|0x0 attachinfo:Dbx
    ----
    ild:u8 attachinfo:Dbx,MDSSA
    --USE:MD2V0,MD3V0
  --- BB6 ---
  

  [11]        rc = 1;
  
  stpr $22:i32 attachinfo:Dbx      
      intconst:i32 1|0x1 attachinfo:Dbx
  
  goto label _$L3
  --- BB9 ---
  

  [8]  for (j = 0; j < 6; j++)
  
  stpr $18:i32 attachinfo:Dbx      
      add:i32          
          $17:i32 attachinfo:Dbx          
          intconst:i32 1|0x1
  
  goto label _$L1
  --- BB11 ---
  

  [12]  return rc;
  
  st:i32 'rc' decl:int  rc  attachinfo:Dbx,MDSSA      
      $20:i32
    ----
    st:i32 'rc' attachinfo:Dbx,MDSSA
    --DEF:VMD25:MD11V4,-|USESET:ld(id:49)
  
  return attachinfo:Dbx
      ld:i32 'rc' decl:int  rc  attachinfo:Dbx,MDSSA
    ----
    ld:i32 'rc' attachinfo:Dbx,MDSSA
    --USE:MD11V4
  ==-- DUMP MDSSAMgr DU CHAIN 's61' --==
  
  --- BB13 ---
  ATTR:entry_bb fall_through 
  --- BB1 ---
  ATTR:fall_through 

  [7]  pc[5] = blank_and_NUL;
  
  starray (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
      elem_num[6]
      intconst:i32 5|0x5 dim0 attachinfo:Dbx      
      lda:*<24> 'pc' decl:unsigned char  *  pc [6] array_base attachinfo:Dbx      
      lda:*<0> 'blank_and_NUL' decl:static unsigned char  blank_and_NUL [0] rhs attachinfo:Dbx
    ----------------
    starray(id:5) USESET:
      MD14V1:(array id:23) (array id:3) 
      MD16V1:(array id:23) (array id:3) 
    ----------------
    

  [8]  for (j = 0; j < 6; j++)
  
  st:i32 'j' decl:int  j  attachinfo:Dbx,MDSSA      
      intconst:i32 0|0x0 attachinfo:Dbx
    ----------------
    st(id:9) USESET:
      MD10V1:(ld id:25) (ld id:106) (ld id:14) 
    ----------------
    
  stpr $11:*<1>      
      array (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
          elemnum[6]
          ld:i32 'j' decl:int  j  dim0 attachinfo:Dbx,MDSSA          
          lda:*<24> 'pc' decl:unsigned char  *  pc [6] array_base attachinfo:Dbx
    ----------------
    array(id:23) DEFSET:
      MD8V0:
      MD14V1:(starray id:5)
      MD16V1:
    ld(id:25) KDEF:st(id:9) DEFSET:
      MD10V1:(st id:9)
    ----------------
    
  stpr $12:bool      
      ne:bool attachinfo:Dbx          
          ild:u8 attachinfo:Dbx,MDSSA              
              array (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
                  elemnum[6]
                  ld:i32 'j' decl:int  j  dim0 attachinfo:Dbx,MDSSA                  
                  lda:*<24> 'pc' decl:unsigned char  *  pc [6] array_base attachinfo:Dbx          
          intconst:u8 0|0x0
    ----------------
    ild(id:15) DEFSET:
      MD2V0:
      MD3V0:
    array(id:3) DEFSET:
      MD8V0:
      MD14V1:(starray id:5)
      MD16V1:
    ld(id:14) KDEF:st(id:9) DEFSET:
      MD10V1:(st id:9)
    ----------------
    

  [7]  pc[5] = blank_and_NUL;
  
  stpr $16:i32 attachinfo:Dbx      
      ld:i32 'j' decl:int  j  attachinfo:Dbx,MDSSA
    ----------------
    ld(id:106) KDEF:st(id:9) DEFSET:
      MD10V1:(st id:9)
    ----------------
    
  stpr $19:i32 attachinfo:Dbx      
      ld:i32 'rc' decl:int  rc  attachinfo:MDSSA
    ----------------
    ld(id:27) DEFSET:
      MD11V0:
    ----------------
    
  --- BB2 ---
  LABEL:_$L1 
  ATTR:fall_through branch_target 
  $20:i32 = phi
      $19:i32
      $21:i32
  $17:i32 = phi
      $16:i32
      $18:i32

  [8]  for (j = 0; j < 6; j++)
  
  falsebr label _$L2 attachinfo:Dbx      
      lt:bool attachinfo:Dbx          
          $17:i32 attachinfo:Dbx          
          intconst:i32 6|0x6 attachinfo:Dbx
  --- BB14 ---
  ATTR:fall_through 
  stpr $7:*<1>      
      $11:*<1>
  stpr $8:bool      
      $12:bool
  --- BB4 ---
  LABEL:_$L3 
  ATTR:fall_through branch_target 
  $21:i32 = phi
      $20:i32
      $21:i32
      $22:i32

  [9]    while (*pc[j])
  
  falsebr label _$L4 attachinfo:Dbx      
      ne:bool          
          $8:bool          
          boolconst:bool 0
  --- BB5 ---
  ATTR:fall_through 

  [10]      if (*pc[j]++ < 0)
  
  stpr $5:*<1> attachinfo:Dbx      
      $7:*<1>
  falsebr label _$L3 attachinfo:Dbx      
      lt:bool attachinfo:Dbx          
          cvt:i32 attachinfo:Dbx              
              ild:u8 attachinfo:Dbx,MDSSA                  
                  $5:*<1> attachinfo:Dbx          
          intconst:i32 0|0x0 attachinfo:Dbx
    ----------------
    ild(id:31) DEFSET:
      MD2V0:
      MD3V0:
    ----------------
    
  --- BB6 ---
  ATTR:

  [11]        rc = 1;
  
  stpr $22:i32 attachinfo:Dbx      
      intconst:i32 1|0x1 attachinfo:Dbx
  goto label _$L3
  --- BB9 ---
  LABEL:_$L4 
  ATTR:branch_target 

  [8]  for (j = 0; j < 6; j++)
  
  stpr $18:i32 attachinfo:Dbx      
      add:i32          
          $17:i32 attachinfo:Dbx          
          intconst:i32 1|0x1
  goto label _$L1
  --- BB11 ---
  LABEL:_$L2 
  ATTR:fall_through branch_target 

  [12]  return rc;
  
  st:i32 'rc' decl:int  rc  attachinfo:Dbx,MDSSA      
      $20:i32
    ----------------
    st(id:118) USESET:
      MD11V4:(ld id:49) 
    ----------------
    
  return attachinfo:Dbx
      ld:i32 'rc' decl:int  rc  attachinfo:Dbx,MDSSA
    ----------------
    ld(id:49) KDEF:st(id:118) DEFSET:
      MD11V4:(st id:118)
    ----------------
    
==---- DUMP Dead Code Eliminiation 's61' ----==
==-- Ineffect BB --==
--0- BB13		ineffect BB!
--0- BB1		ineffect BB!
--0- BB2		ineffect BB!
--0- BB4		ineffect BB!
--0- BB5		ineffect BB!
--0- BB6		ineffect BB!
--0- BB9		ineffect BB!
--0- BB11		ineffect BB!

  ==---- DUMP IRBBList 's61' ----==
  ----- BB13 --- rpo:0 -----
  ATTR:entry_bb fall_through 
  STMT NUM:0
  
  ----- BB1 --- rpo:5 -----
  ATTR:fall_through 
  STMT NUM:5

     [7]  pc[5] = blank_and_NUL;
     
     starray (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
         elem_num[6]
         intconst:i32 5|0x5 dim0 attachinfo:Dbx         
         lda:*<24> 'pc' array_base attachinfo:Dbx         
         lda:*<0> 'blank_and_NUL' rhs attachinfo:Dbx
     stpr $11:*<1>         
         array (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
             elemnum[6]
             intconst:i32 0|0x0 dim0 attachinfo:Dbx             
             lda:*<24> 'pc' array_base attachinfo:Dbx
     stpr $12:bool         
         ne:bool attachinfo:Dbx             
             ild:u8 attachinfo:Dbx,MDSSA                 
                 array (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
                     elemnum[6]
                     intconst:i32 0|0x0 dim0 attachinfo:Dbx                     
                     lda:*<24> 'pc' array_base attachinfo:Dbx             
             intconst:u8 0|0x0
     stpr $19:i32 attachinfo:Dbx         
         ld:i32 'rc' attachinfo:MDSSA
     stpr $28:u8 attachinfo:Dbx         
         ild:u8 attachinfo:MDSSA,Dbx             
             $11:*<1>
  
  ----- BB2 --- rpo:10 -----
  LABEL:_$L1 
  ATTR:fall_through branch_target 
  STMT NUM:3
     $20:i32 = phi
         $19:i32
         $21:i32
     $17:i32 = phi
         intconst:i32 0|0x0 attachinfo:Dbx
         $18:i32

     [8]  for (j = 0; j < 6; j++)
     
     falsebr label _$L2 attachinfo:Dbx         
         lt:bool attachinfo:Dbx             
             $17:i32 attachinfo:Dbx             
             intconst:i32 6|0x6 attachinfo:Dbx
  
  ----- BB4 --- rpo:15 -----
  LABEL:_$L3 
  ATTR:fall_through branch_target 
  STMT NUM:2
     $21:i32 = phi
         $20:i32
         $21:i32
         intconst:i32 1|0x1 attachinfo:Dbx

     [9]    while (*pc[j])
     
     truebr label _$L4 attachinfo:Dbx         
         eq:bool             
             $12:bool             
             boolconst:bool 0
  
  ----- BB5 --- rpo:25 -----
  ATTR:fall_through 
  STMT NUM:1

     [10]      if (*pc[j]++ < 0)
     
     falsebr label _$L3 attachinfo:Dbx         
         lt:bool attachinfo:Dbx             
             cvt:i32 attachinfo:Dbx                 
                 $28:u8 attachinfo:Dbx             
             intconst:i32 0|0x0 attachinfo:Dbx
  
  ----- BB6 --- rpo:30 -----
  ATTR:
  STMT NUM:1
     goto label _$L3
  
  ----- BB9 --- rpo:20 -----
  LABEL:_$L4 
  ATTR:branch_target 
  STMT NUM:2

     [8]  for (j = 0; j < 6; j++)
     
     stpr $18:i32 attachinfo:Dbx         
         add:i32             
             $17:i32 attachinfo:Dbx             
             intconst:i32 1|0x1
     goto label _$L1
  
  ----- BB11 --- rpo:35 -----
  LABEL:_$L2 
  ATTR:fall_through branch_target 
  STMT NUM:1

     [12]  return rc;
     
     return attachinfo:Dbx
         $20:i32
  
  ==---- DUMP PRSSA Manager 's61' ----==
  ==---- DUMP PRSSAMgr:VPR 's61' ----==
  
  VPR1:$1v0--: DEF:-- USE:--
  VPR2:$2v0--: DEF:-- USE:--
  VPR0:--v0--: DEF:-- USE:--
  VPR4:$1v1$3: DEF:-- USE:--
  VPR5:$1v2$4: DEF:-- USE:--
  VPR6:$1v3$5: DEF:-- USE:--
  VPR7:$2v2$6: DEF:-- USE:--
  VPR8:$7v1$7: DEF:-- USE:--
  VPR9:$8v1$8: DEF:-- USE:--
  VPR10:$9v1$9: DEF:-- USE:--
  VPR11:$10v1$10: DEF:-- USE:--
  VPR12:$11v1$11: DEF:stpr($11,id:99) USE:id:106
  VPR13:$12v1$12: DEF:stpr($12,id:101) USE:id:90
  VPR14:$13v1$13: DEF:-- USE:--
  VPR15:$14v0--: DEF:-- USE:--
  VPR16:$14v1$16: DEF:-- USE:--
  VPR17:$14v2$17: DEF:phi($17,id:113) USE:id:108,id:111
  VPR18:$14v3$18: DEF:stpr($18,id:110) USE:id:114
  VPR19:$15v0--: DEF:-- USE:--
  VPR20:$15v1$19: DEF:stpr($19,id:46) USE:id:123
  VPR21:$15v2$20: DEF:phi($20,id:120) USE:id:116,id:121
  VPR22:$15v3$21: DEF:phi($21,id:119) USE:id:44,id:115
  VPR23:$15v4$22: DEF:-- USE:--
  VPR24:$23v0--: DEF:-- USE:--
  VPR25:$23v1$25: DEF:-- USE:--
  VPR26:$23v2$24: DEF:-- USE:--
  VPR27:$23v3$26: DEF:-- USE:--
  VPR28:$27v0--: DEF:-- USE:--
  VPR29:$27v1$28: DEF:stpr($28,id:45) USE:id:25
  --- BB13 ---
  --- BB1 ---
  -- <= --
  $11 <= --
  $12 <= --
  $19 <= --
  $28 <= $11
  --- BB2 ---
  $20 <= $19,$21
  $17 <= $18
  -- <= $17
  --- BB4 ---
  $21 <= $20,$21
  -- <= $12
  --- BB5 ---
  -- <= $28
  --- BB6 ---
  -- <= --
  --- BB9 ---
  $18 <= $17
  -- <= --
  --- BB11 ---
  -- <= $20
  ==---- DUMP MDSSA Manager 's61' ----==
  ==---- DUMP NON-PR MD ----==
  MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD4 -- base:Var64(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
  MD5 -- base:Var58(s61):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  s61 ()' -- ofst:unbound
  MD6 -- base:Var63(blank_and_NUL):global,,addr_taken,private,array,align(4),mc,mem_size:0,decl:'static unsigned char  blank_and_NUL [0]' -- ofst:0 -- size:0
  MD7 -- base:Var65(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD8 -- base:Var62(pc):local,array,align(4),mc,mem_size:24,decl:'unsigned char  *  pc [6]' -- ofst:0 -- size:4
  MD9 -- base:Var63(blank_and_NUL):global,,addr_taken,private,array,align(4),mc,mem_size:0,decl:'static unsigned char  blank_and_NUL [0]' -- ofst:0 -- size:4
  MD10 -- base:Var61(j):local,align(4),i32,decl:'int  j ' -- ofst:0 -- size:4
  MD11 -- base:Var59(rc):local,align(4),i32,decl:'int  rc ' -- ofst:0 -- size:4
  MD14 -- base:Var62(pc):local,array,align(4),mc,mem_size:24,decl:'unsigned char  *  pc [6]' -- ofst:20 -- size:4
  MD15 -- base:Var63(blank_and_NUL):global,,addr_taken,private,array,align(4),mc,mem_size:0,decl:'static unsigned char  blank_and_NUL [0]' -- ofst:0 -- size:1
  MD16 -- base:Var62(pc):local,array,align(4),mc,mem_size:24,decl:'unsigned char  *  pc [6]' -- start:0 -- end:24 -- range
  MD21 -- base:Var62(pc):local,array,align(4),mc,mem_size:24,decl:'unsigned char  *  pc [6]' -- ofst:0 -- size:24
  ==-- DUMP MDSSAMgr VOpndRef 's61' --==
  
  --- BB13 ---
  --- BB1 ---
  

  [7]  pc[5] = blank_and_NUL;
  
  starray (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
      elem_num[6]
      intconst:i32 5|0x5 dim0 attachinfo:Dbx      
      lda:*<24> 'pc' decl:unsigned char  *  pc [6] array_base attachinfo:Dbx      
      lda:*<0> 'blank_and_NUL' decl:static unsigned char  blank_and_NUL [0] rhs attachinfo:Dbx
    ----
    starray (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
    --DEF:VMD8:MD14V1,-|USESET:array(id:23),array(id:3)
    --DEF:VMD9:MD16V1,-|USESET:array(id:23),array(id:3)
  
  stpr $11:*<1>      
      array (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
          elemnum[6]
          intconst:i32 0|0x0 dim0 attachinfo:Dbx          
          lda:*<24> 'pc' decl:unsigned char  *  pc [6] array_base attachinfo:Dbx
    ----
    array (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
    --USE:MD8V0,MD14V1,MD16V1
  
  stpr $12:bool      
      ne:bool attachinfo:Dbx          
          ild:u8 attachinfo:Dbx,MDSSA              
              array (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
                  elemnum[6]
                  intconst:i32 0|0x0 dim0 attachinfo:Dbx                  
                  lda:*<24> 'pc' decl:unsigned char  *  pc [6] array_base attachinfo:Dbx          
          intconst:u8 0|0x0
    ----
    ild:u8 attachinfo:Dbx,MDSSA
    --USE:MD2V0,MD3V0
    array (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
    --USE:MD8V0,MD14V1,MD16V1
  
  stpr $19:i32 attachinfo:Dbx      
      ld:i32 'rc' decl:int  rc  attachinfo:MDSSA
    ----
    ld:i32 'rc' attachinfo:MDSSA
    --USE:MD11V0
  
  stpr $28:u8 attachinfo:Dbx      
      ild:u8 attachinfo:MDSSA,Dbx          
          $11:*<1>
    ----
    ild:u8 attachinfo:MDSSA,Dbx
    --USE:MD2V0,MD3V0
  --- BB2 ---
  
  $20:i32 = phi
      $19:i32
      $21:i32
  
  $17:i32 = phi
      intconst:i32 0|0x0 attachinfo:Dbx
      $18:i32
  

  [8]  for (j = 0; j < 6; j++)
  
  falsebr label _$L2 attachinfo:Dbx      
      lt:bool attachinfo:Dbx          
          $17:i32 attachinfo:Dbx          
          intconst:i32 6|0x6 attachinfo:Dbx
  --- BB4 ---
  
  $21:i32 = phi
      $20:i32
      $21:i32
      intconst:i32 1|0x1 attachinfo:Dbx
  

  [9]    while (*pc[j])
  
  truebr label _$L4 attachinfo:Dbx      
      eq:bool          
          $12:bool          
          boolconst:bool 0
  --- BB5 ---
  

  [10]      if (*pc[j]++ < 0)
  
  falsebr label _$L3 attachinfo:Dbx      
      lt:bool attachinfo:Dbx          
          cvt:i32 attachinfo:Dbx              
              $28:u8 attachinfo:Dbx          
          intconst:i32 0|0x0 attachinfo:Dbx
  --- BB6 ---
  
  goto label _$L3
  --- BB9 ---
  

  [8]  for (j = 0; j < 6; j++)
  
  stpr $18:i32 attachinfo:Dbx      
      add:i32          
          $17:i32 attachinfo:Dbx          
          intconst:i32 1|0x1
  
  goto label _$L1
  --- BB11 ---
  

  [12]  return rc;
  
  return attachinfo:Dbx
      $20:i32
  ==-- DUMP MDSSAMgr DU CHAIN 's61' --==
  
  --- BB13 ---
  ATTR:entry_bb fall_through 
  --- BB1 ---
  ATTR:fall_through 

  [7]  pc[5] = blank_and_NUL;
  
  starray (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
      elem_num[6]
      intconst:i32 5|0x5 dim0 attachinfo:Dbx      
      lda:*<24> 'pc' decl:unsigned char  *  pc [6] array_base attachinfo:Dbx      
      lda:*<0> 'blank_and_NUL' decl:static unsigned char  blank_and_NUL [0] rhs attachinfo:Dbx
    ----------------
    starray(id:5) USESET:
      MD14V1:(array id:23) (array id:3) 
      MD16V1:(array id:23) (array id:3) 
    ----------------
    
  stpr $11:*<1>      
      array (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
          elemnum[6]
          intconst:i32 0|0x0 dim0 attachinfo:Dbx          
          lda:*<24> 'pc' decl:unsigned char  *  pc [6] array_base attachinfo:Dbx
    ----------------
    array(id:23) DEFSET:
      MD8V0:
      MD14V1:(starray id:5)
      MD16V1:
    ----------------
    
  stpr $12:bool      
      ne:bool attachinfo:Dbx          
          ild:u8 attachinfo:Dbx,MDSSA              
              array (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
                  elemnum[6]
                  intconst:i32 0|0x0 dim0 attachinfo:Dbx                  
                  lda:*<24> 'pc' decl:unsigned char  *  pc [6] array_base attachinfo:Dbx          
          intconst:u8 0|0x0
    ----------------
    ild(id:15) DEFSET:
      MD2V0:
      MD3V0:
    array(id:3) DEFSET:
      MD8V0:
      MD14V1:(starray id:5)
      MD16V1:
    ----------------
    
  stpr $19:i32 attachinfo:Dbx      
      ld:i32 'rc' decl:int  rc  attachinfo:MDSSA
    ----------------
    ld(id:27) DEFSET:
      MD11V0:
    ----------------
    
  stpr $28:u8 attachinfo:Dbx      
      ild:u8 attachinfo:MDSSA,Dbx          
          $11:*<1>
    ----------------
    ild(id:30) DEFSET:
      MD2V0:
      MD3V0:
    ----------------
    
  --- BB2 ---
  LABEL:_$L1 
  ATTR:fall_through branch_target 
  $20:i32 = phi
      $19:i32
      $21:i32
  $17:i32 = phi
      intconst:i32 0|0x0 attachinfo:Dbx
      $18:i32

  [8]  for (j = 0; j < 6; j++)
  
  falsebr label _$L2 attachinfo:Dbx      
      lt:bool attachinfo:Dbx          
          $17:i32 attachinfo:Dbx          
          intconst:i32 6|0x6 attachinfo:Dbx
  --- BB4 ---
  LABEL:_$L3 
  ATTR:fall_through branch_target 
  $21:i32 = phi
      $20:i32
      $21:i32
      intconst:i32 1|0x1 attachinfo:Dbx

  [9]    while (*pc[j])
  
  truebr label _$L4 attachinfo:Dbx      
      eq:bool          
          $12:bool          
          boolconst:bool 0
  --- BB5 ---
  ATTR:fall_through 

  [10]      if (*pc[j]++ < 0)
  
  falsebr label _$L3 attachinfo:Dbx      
      lt:bool attachinfo:Dbx          
          cvt:i32 attachinfo:Dbx              
              $28:u8 attachinfo:Dbx          
          intconst:i32 0|0x0 attachinfo:Dbx
  --- BB6 ---
  ATTR:
  goto label _$L3
  --- BB9 ---
  LABEL:_$L4 
  ATTR:branch_target 

  [8]  for (j = 0; j < 6; j++)
  
  stpr $18:i32 attachinfo:Dbx      
      add:i32          
          $17:i32 attachinfo:Dbx          
          intconst:i32 1|0x1
  goto label _$L1
  --- BB11 ---
  LABEL:_$L2 
  ATTR:fall_through branch_target 

  [12]  return rc;
  
  return attachinfo:Dbx
      $20:i32
==---- DUMP Dead Code Eliminiation 's61' ----==
==-- Ineffect BB --==
--0- BB13		ineffect BB!
--0- BB1		ineffect BB!
--0- BB2		ineffect BB!
--0- BB4		ineffect BB!
--0- BB5		ineffect BB!
--0- BB6		ineffect BB!
--0- BB9		ineffect BB!
--0- BB11		ineffect BB!

  ==---- DUMP IRBBList 's61' ----==
  ----- BB13 --- rpo:0 -----
  ATTR:entry_bb fall_through 
  STMT NUM:0
  
  ----- BB1 --- rpo:5 -----
  ATTR:fall_through 
  STMT NUM:6

     [7]  pc[5] = blank_and_NUL;
     
     starray (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
         elem_num[6]
         intconst:i32 5|0x5 dim0 attachinfo:Dbx         
         lda:*<24> 'pc' array_base attachinfo:Dbx         
         lda:*<0> 'blank_and_NUL' rhs attachinfo:Dbx
     stpr $11:*<1>         
         array (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
             elemnum[6]
             intconst:i32 0|0x0 dim0 attachinfo:Dbx             
             lda:*<24> 'pc' array_base attachinfo:Dbx
     stpr $12:bool         
         ne:bool attachinfo:Dbx             
             ild:u8 attachinfo:Dbx,MDSSA                 
                 array (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
                     elemnum[6]
                     intconst:i32 0|0x0 dim0 attachinfo:Dbx                     
                     lda:*<24> 'pc' array_base attachinfo:Dbx             
             intconst:u8 0|0x0
     stpr $19:i32 attachinfo:Dbx         
         ld:i32 'rc' attachinfo:MDSSA
     stpr $28:u8 attachinfo:Dbx         
         ild:u8 attachinfo:MDSSA,Dbx             
             $11:*<1>
     stpr $30:bool         
         lt:bool attachinfo:Dbx             
             cvt:i32 attachinfo:Dbx                 
                 $28:u8 attachinfo:Dbx             
             intconst:i32 0|0x0 attachinfo:Dbx
  
  ----- BB2 --- rpo:10 -----
  LABEL:_$L1 
  ATTR:fall_through branch_target 
  STMT NUM:3
     $20:i32 = phi
         $19:i32
         $21:i32
     $17:i32 = phi
         intconst:i32 0|0x0 attachinfo:Dbx
         $18:i32

     [8]  for (j = 0; j < 6; j++)
     
     falsebr label _$L2 attachinfo:Dbx         
         lt:bool attachinfo:Dbx             
             $17:i32 attachinfo:Dbx             
             intconst:i32 6|0x6 attachinfo:Dbx
  
  ----- BB4 --- rpo:15 -----
  LABEL:_$L3 
  ATTR:fall_through branch_target 
  STMT NUM:2
     $21:i32 = phi
         $20:i32
         $21:i32
         intconst:i32 1|0x1 attachinfo:Dbx

     [9]    while (*pc[j])
     
     truebr label _$L4 attachinfo:Dbx         
         eq:bool             
             $12:bool             
             boolconst:bool 0
  
  ----- BB5 --- rpo:25 -----
  ATTR:fall_through 
  STMT NUM:1

     [10]      if (*pc[j]++ < 0)
     
     truebr label _$L3 attachinfo:Dbx         
         eq:bool             
             $30:bool             
             boolconst:bool 0
  
  ----- BB6 --- rpo:30 -----
  ATTR:
  STMT NUM:1
     goto label _$L3
  
  ----- BB9 --- rpo:20 -----
  LABEL:_$L4 
  ATTR:branch_target 
  STMT NUM:2

     [8]  for (j = 0; j < 6; j++)
     
     stpr $18:i32 attachinfo:Dbx         
         add:i32             
             $17:i32 attachinfo:Dbx             
             intconst:i32 1|0x1
     goto label _$L1
  
  ----- BB11 --- rpo:35 -----
  LABEL:_$L2 
  ATTR:fall_through branch_target 
  STMT NUM:1

     [12]  return rc;
     
     return attachinfo:Dbx
         $20:i32
  
  ==---- DUMP PRSSA Manager 's61' ----==
  ==---- DUMP PRSSAMgr:VPR 's61' ----==
  
  VPR1:$1v0--: DEF:-- USE:--
  VPR2:$2v0--: DEF:-- USE:--
  VPR0:--v0--: DEF:-- USE:--
  VPR4:$1v1$3: DEF:-- USE:--
  VPR5:$1v2$4: DEF:-- USE:--
  VPR6:$1v3$5: DEF:-- USE:--
  VPR7:$2v2$6: DEF:-- USE:--
  VPR8:$7v1$7: DEF:-- USE:--
  VPR9:$8v1$8: DEF:-- USE:--
  VPR10:$9v1$9: DEF:-- USE:--
  VPR11:$10v1$10: DEF:-- USE:--
  VPR12:$11v1$11: DEF:stpr($11,id:99) USE:id:106
  VPR13:$12v1$12: DEF:stpr($12,id:101) USE:id:90
  VPR14:$13v1$13: DEF:-- USE:--
  VPR15:$14v0--: DEF:-- USE:--
  VPR16:$14v1$16: DEF:-- USE:--
  VPR17:$14v2$17: DEF:phi($17,id:113) USE:id:108,id:111
  VPR18:$14v3$18: DEF:stpr($18,id:110) USE:id:114
  VPR19:$15v0--: DEF:-- USE:--
  VPR20:$15v1$19: DEF:stpr($19,id:46) USE:id:123
  VPR21:$15v2$20: DEF:phi($20,id:120) USE:id:116,id:121
  VPR22:$15v3$21: DEF:phi($21,id:119) USE:id:44,id:115
  VPR23:$15v4$22: DEF:-- USE:--
  VPR24:$23v0--: DEF:-- USE:--
  VPR25:$23v1$25: DEF:-- USE:--
  VPR26:$23v2$24: DEF:-- USE:--
  VPR27:$23v3$26: DEF:-- USE:--
  VPR28:$27v0--: DEF:-- USE:--
  VPR29:$27v1$28: DEF:stpr($28,id:45) USE:id:25
  VPR30:$29v1$29: DEF:-- USE:--
  VPR31:$30v1$30: DEF:stpr($30,id:117) USE:id:100
  --- BB13 ---
  --- BB1 ---
  -- <= --
  $11 <= --
  $12 <= --
  $19 <= --
  $28 <= $11
  $30 <= $28
  --- BB2 ---
  $20 <= $19,$21
  $17 <= $18
  -- <= $17
  --- BB4 ---
  $21 <= $20,$21
  -- <= $12
  --- BB5 ---
  -- <= $30
  --- BB6 ---
  -- <= --
  --- BB9 ---
  $18 <= $17
  -- <= --
  --- BB11 ---
  -- <= $20
  ==---- DUMP MDSSA Manager 's61' ----==
  ==---- DUMP NON-PR MD ----==
  MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD4 -- base:Var64(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
  MD5 -- base:Var58(s61):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  s61 ()' -- ofst:unbound
  MD6 -- base:Var63(blank_and_NUL):global,,addr_taken,private,array,align(4),mc,mem_size:0,decl:'static unsigned char  blank_and_NUL [0]' -- ofst:0 -- size:0
  MD7 -- base:Var65(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD8 -- base:Var62(pc):local,array,align(4),mc,mem_size:24,decl:'unsigned char  *  pc [6]' -- ofst:0 -- size:4
  MD9 -- base:Var63(blank_and_NUL):global,,addr_taken,private,array,align(4),mc,mem_size:0,decl:'static unsigned char  blank_and_NUL [0]' -- ofst:0 -- size:4
  MD10 -- base:Var61(j):local,align(4),i32,decl:'int  j ' -- ofst:0 -- size:4
  MD11 -- base:Var59(rc):local,align(4),i32,decl:'int  rc ' -- ofst:0 -- size:4
  MD14 -- base:Var62(pc):local,array,align(4),mc,mem_size:24,decl:'unsigned char  *  pc [6]' -- ofst:20 -- size:4
  MD15 -- base:Var63(blank_and_NUL):global,,addr_taken,private,array,align(4),mc,mem_size:0,decl:'static unsigned char  blank_and_NUL [0]' -- ofst:0 -- size:1
  MD16 -- base:Var62(pc):local,array,align(4),mc,mem_size:24,decl:'unsigned char  *  pc [6]' -- start:0 -- end:24 -- range
  MD21 -- base:Var62(pc):local,array,align(4),mc,mem_size:24,decl:'unsigned char  *  pc [6]' -- ofst:0 -- size:24
  ==-- DUMP MDSSAMgr VOpndRef 's61' --==
  
  --- BB13 ---
  --- BB1 ---
  

  [7]  pc[5] = blank_and_NUL;
  
  starray (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
      elem_num[6]
      intconst:i32 5|0x5 dim0 attachinfo:Dbx      
      lda:*<24> 'pc' decl:unsigned char  *  pc [6] array_base attachinfo:Dbx      
      lda:*<0> 'blank_and_NUL' decl:static unsigned char  blank_and_NUL [0] rhs attachinfo:Dbx
    ----
    starray (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
    --DEF:VMD8:MD14V1,-|USESET:array(id:23),array(id:3)
    --DEF:VMD9:MD16V1,-|USESET:array(id:23),array(id:3)
  
  stpr $11:*<1>      
      array (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
          elemnum[6]
          intconst:i32 0|0x0 dim0 attachinfo:Dbx          
          lda:*<24> 'pc' decl:unsigned char  *  pc [6] array_base attachinfo:Dbx
    ----
    array (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
    --USE:MD8V0,MD14V1,MD16V1
  
  stpr $12:bool      
      ne:bool attachinfo:Dbx          
          ild:u8 attachinfo:Dbx,MDSSA              
              array (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
                  elemnum[6]
                  intconst:i32 0|0x0 dim0 attachinfo:Dbx                  
                  lda:*<24> 'pc' decl:unsigned char  *  pc [6] array_base attachinfo:Dbx          
          intconst:u8 0|0x0
    ----
    ild:u8 attachinfo:Dbx,MDSSA
    --USE:MD2V0,MD3V0
    array (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
    --USE:MD8V0,MD14V1,MD16V1
  
  stpr $19:i32 attachinfo:Dbx      
      ld:i32 'rc' decl:int  rc  attachinfo:MDSSA
    ----
    ld:i32 'rc' attachinfo:MDSSA
    --USE:MD11V0
  
  stpr $28:u8 attachinfo:Dbx      
      ild:u8 attachinfo:MDSSA,Dbx          
          $11:*<1>
    ----
    ild:u8 attachinfo:MDSSA,Dbx
    --USE:MD2V0,MD3V0
  
  stpr $30:bool      
      lt:bool attachinfo:Dbx          
          cvt:i32 attachinfo:Dbx              
              $28:u8 attachinfo:Dbx          
          intconst:i32 0|0x0 attachinfo:Dbx
  --- BB2 ---
  
  $20:i32 = phi
      $19:i32
      $21:i32
  
  $17:i32 = phi
      intconst:i32 0|0x0 attachinfo:Dbx
      $18:i32
  

  [8]  for (j = 0; j < 6; j++)
  
  falsebr label _$L2 attachinfo:Dbx      
      lt:bool attachinfo:Dbx          
          $17:i32 attachinfo:Dbx          
          intconst:i32 6|0x6 attachinfo:Dbx
  --- BB4 ---
  
  $21:i32 = phi
      $20:i32
      $21:i32
      intconst:i32 1|0x1 attachinfo:Dbx
  

  [9]    while (*pc[j])
  
  truebr label _$L4 attachinfo:Dbx      
      eq:bool          
          $12:bool          
          boolconst:bool 0
  --- BB5 ---
  

  [10]      if (*pc[j]++ < 0)
  
  truebr label _$L3 attachinfo:Dbx      
      eq:bool          
          $30:bool          
          boolconst:bool 0
  --- BB6 ---
  
  goto label _$L3
  --- BB9 ---
  

  [8]  for (j = 0; j < 6; j++)
  
  stpr $18:i32 attachinfo:Dbx      
      add:i32          
          $17:i32 attachinfo:Dbx          
          intconst:i32 1|0x1
  
  goto label _$L1
  --- BB11 ---
  

  [12]  return rc;
  
  return attachinfo:Dbx
      $20:i32
  ==-- DUMP MDSSAMgr DU CHAIN 's61' --==
  
  --- BB13 ---
  ATTR:entry_bb fall_through 
  --- BB1 ---
  ATTR:fall_through 

  [7]  pc[5] = blank_and_NUL;
  
  starray (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
      elem_num[6]
      intconst:i32 5|0x5 dim0 attachinfo:Dbx      
      lda:*<24> 'pc' decl:unsigned char  *  pc [6] array_base attachinfo:Dbx      
      lda:*<0> 'blank_and_NUL' decl:static unsigned char  blank_and_NUL [0] rhs attachinfo:Dbx
    ----------------
    starray(id:5) USESET:
      MD14V1:(array id:23) (array id:3) 
      MD16V1:(array id:23) (array id:3) 
    ----------------
    
  stpr $11:*<1>      
      array (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
          elemnum[6]
          intconst:i32 0|0x0 dim0 attachinfo:Dbx          
          lda:*<24> 'pc' decl:unsigned char  *  pc [6] array_base attachinfo:Dbx
    ----------------
    array(id:23) DEFSET:
      MD8V0:
      MD14V1:(starray id:5)
      MD16V1:
    ----------------
    
  stpr $12:bool      
      ne:bool attachinfo:Dbx          
          ild:u8 attachinfo:Dbx,MDSSA              
              array (*<1>, ety:*<1>) attachinfo:Dbx,MDSSA
                  elemnum[6]
                  intconst:i32 0|0x0 dim0 attachinfo:Dbx                  
                  lda:*<24> 'pc' decl:unsigned char  *  pc [6] array_base attachinfo:Dbx          
          intconst:u8 0|0x0
    ----------------
    ild(id:15) DEFSET:
      MD2V0:
      MD3V0:
    array(id:3) DEFSET:
      MD8V0:
      MD14V1:(starray id:5)
      MD16V1:
    ----------------
    
  stpr $19:i32 attachinfo:Dbx      
      ld:i32 'rc' decl:int  rc  attachinfo:MDSSA
    ----------------
    ld(id:27) DEFSET:
      MD11V0:
    ----------------
    
  stpr $28:u8 attachinfo:Dbx      
      ild:u8 attachinfo:MDSSA,Dbx          
          $11:*<1>
    ----------------
    ild(id:30) DEFSET:
      MD2V0:
      MD3V0:
    ----------------
    
  stpr $30:bool      
      lt:bool attachinfo:Dbx          
          cvt:i32 attachinfo:Dbx              
              $28:u8 attachinfo:Dbx          
          intconst:i32 0|0x0 attachinfo:Dbx
  --- BB2 ---
  LABEL:_$L1 
  ATTR:fall_through branch_target 
  $20:i32 = phi
      $19:i32
      $21:i32
  $17:i32 = phi
      intconst:i32 0|0x0 attachinfo:Dbx
      $18:i32

  [8]  for (j = 0; j < 6; j++)
  
  falsebr label _$L2 attachinfo:Dbx      
      lt:bool attachinfo:Dbx          
          $17:i32 attachinfo:Dbx          
          intconst:i32 6|0x6 attachinfo:Dbx
  --- BB4 ---
  LABEL:_$L3 
  ATTR:fall_through branch_target 
  $21:i32 = phi
      $20:i32
      $21:i32
      intconst:i32 1|0x1 attachinfo:Dbx

  [9]    while (*pc[j])
  
  truebr label _$L4 attachinfo:Dbx      
      eq:bool          
          $12:bool          
          boolconst:bool 0
  --- BB5 ---
  ATTR:fall_through 

  [10]      if (*pc[j]++ < 0)
  
  truebr label _$L3 attachinfo:Dbx      
      eq:bool          
          $30:bool          
          boolconst:bool 0
  --- BB6 ---
  ATTR:
  goto label _$L3
  --- BB9 ---
  LABEL:_$L4 
  ATTR:branch_target 

  [8]  for (j = 0; j < 6; j++)
  
  stpr $18:i32 attachinfo:Dbx      
      add:i32          
          $17:i32 attachinfo:Dbx          
          intconst:i32 1|0x1
  goto label _$L1
  --- BB11 ---
  LABEL:_$L2 
  ATTR:fall_through branch_target 

  [12]  return rc;
  
  return attachinfo:Dbx
      $20:i32