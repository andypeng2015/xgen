
==---- DUMP Alias Analysis 'foo' ----==
  ==---- DUMP ALL MD ----==
  MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD4 -- base:Var62(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
  MD5 -- base:Var58(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S (id:1)  *  p ' -- ofst:0 -- size:4
  MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo ()' -- ofst:unbound
  MD7 -- base:Var63(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  ==---- DUMP POINT-TO OUT-SET (FLOW SENSITIVE) 'foo' ----==
  --- BB3 ---
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- NO PT
  MD6 -- NO PT
  MD7 -- NO PT
  --- BB1 ---
  MD1 -- PT_SET: MD1,
  MD2 -- NO PT
  MD3 -- NO PT
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- NO PT
  MD7 -- NO PT
  -- DUMP WORSTCASE POINT-TO --
  MD2,MD3
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  -- DUMP IR POINT-TO FOR BB --

   -- BB3 --
    -- MD2MDSet: --
    MD1 -- PT_SET: MD1,
    MD2 -- PT_SET: MD2,MD3,
    MD3 -- PT_SET: MD2,MD3,
    MD4 -- NO PT
    MD5 -- NO PT
    MD6 -- NO PT
    MD7 -- NO PT

   -- BB1 --
    -- MD2MDSet: --
    MD1 -- PT_SET: MD1,
    MD2 -- NO PT
    MD3 -- NO PT
    MD4 -- NO PT
    MD5 -- PT_SET: MD2,MD3,
    MD6 -- NO PT
    MD7 -- NO PT

    -- IR POINT-TO: --
    ---------------------------------    

    [4]    p->a = 20; //S1
    
    ist:i32 attachinfo:Dbx        
        ld:*<8> 'p' base attachinfo:Dbx        
        intconst:i32 20|0x14 attachinfo:Dbx
    LHS:
    ist:i32 attachinfo:Dbx
      MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
        POINT TO:--
      MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
        POINT TO:--
    RHS:
    >> MDSet DETAIL:
    ld:*<8> 'p' attachinfo:Dbx
      MD5 -- base:Var58(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S (id:1)  *  p ' -- ofst:0 -- size:4
        POINT TO:
          MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
          MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
          
    ---------------------------------    

    [6]    return p->b; //S2
    
    return attachinfo:Dbx
        ild:i32:offset(4) attachinfo:Dbx            
            ld:*<8> 'p' attachinfo:Dbx
    
    ild:i32:offset(4) attachinfo:Dbx
      MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
        POINT TO:--
      MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
        POINT TO:--
    >> MDSet DETAIL:
    ild:i32:offset(4) attachinfo:Dbx
      MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
        POINT TO:--
      MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
        POINT TO:--
      ld:*<8> 'p' attachinfo:Dbx
        MD5 -- base:Var58(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S (id:1)  *  p ' -- ofst:0 -- size:4
          POINT TO:
            MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
            MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
            
==---- DUMP DU Manager 'foo' ----==

  ==---- DUMP DUMgr: IR REFERENCE 'foo' ----==
  
  ==---- DUMP ALL MD ----==
  MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD4 -- base:Var62(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
  MD5 -- base:Var58(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S (id:1)  *  p ' -- ofst:0 -- size:4
  MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo ()' -- ofst:unbound
  MD7 -- base:Var63(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  ==----==
  RegionMayDef(OuterRegion):MD2,MD3
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  RegionMayUse(OuterRegion):MD2,MD3,MD5
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD5 -- base:Var58(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S (id:1)  *  p ' -- ofst:0 -- size:4
  --- BB3 ---
  --- BB1 ---
      ist:i32 attachinfo:Dbx
       : MD2,MD3
        ld:*<8> 'p' attachinfo:Dbx
        EMD5 : MD2
      return attachinfo:Dbx
        ild:i32:offset(4) attachinfo:Dbx
         : MD2,MD3
          ld:*<8> 'p' attachinfo:Dbx
          EMD5 : MD2
==---- DUMP DU Manager 'foo' ----==

  ==---- DUMP DUMgr: IR REFERENCE 'foo' ----==
  
  ==---- DUMP ALL MD ----==
  MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD4 -- base:Var62(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
  MD5 -- base:Var58(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S (id:1)  *  p ' -- ofst:0 -- size:4
  MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo ()' -- ofst:unbound
  MD7 -- base:Var63(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  ==----==
  RegionMayDef(OuterRegion):MD2,MD3
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  RegionMayUse(OuterRegion):MD2,MD3,MD5
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD5 -- base:Var58(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S (id:1)  *  p ' -- ofst:0 -- size:4
  --- BB3 ---
  --- BB1 ---
      ist:i32 attachinfo:Dbx,MDSSA
       : MD2,MD3
        ld:*<8> 'p' attachinfo:Dbx,MDSSA
        EMD5 : MD2
      return attachinfo:Dbx
        ild:i32:offset(4) attachinfo:Dbx,MDSSA
         : MD2,MD3
          ld:*<8> 'p' attachinfo:Dbx,MDSSA
          EMD5 : MD2
==---- DUMP Alias Analysis 'foo' ----==
  ==---- DUMP ALL MD ----==
  MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD4 -- base:Var62(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
  MD5 -- base:Var58(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S (id:1)  *  p ' -- ofst:0 -- size:4
  MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo ()' -- ofst:unbound
  MD7 -- base:Var63(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  ==---- DUMP POINT-TO OUT-SET (FLOW-INSENSITIVE) 'foo' ----==
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- NO PT
  MD7 -- NO PT
  -- DUMP WORSTCASE POINT-TO --
  MD2,MD3
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  -- DUMP IR POINT-TO FOR BB --

   -- BB3 --
    -- MD2MDSet: --
    MD1 -- PT_SET: MD1,
    MD2 -- PT_SET: MD2,MD3,
    MD3 -- PT_SET: MD2,MD3,
    MD4 -- NO PT
    MD5 -- PT_SET: MD2,MD3,
    MD6 -- NO PT
    MD7 -- NO PT

   -- BB1 --
    -- MD2MDSet: --
    MD1 -- PT_SET: MD1,
    MD2 -- PT_SET: MD2,MD3,
    MD3 -- PT_SET: MD2,MD3,
    MD4 -- NO PT
    MD5 -- PT_SET: MD2,MD3,
    MD6 -- NO PT
    MD7 -- NO PT

    -- IR POINT-TO: --
    ---------------------------------    

    [4]    p->a = 20; //S1
    
    ist:i32 attachinfo:Dbx,MDSSA        
        ld:*<8> 'p' base attachinfo:Dbx,MDSSA        
        intconst:i32 20|0x14 attachinfo:Dbx
    LHS:
    ist:i32 attachinfo:Dbx,MDSSA
      MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
        POINT TO:
          MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
          MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
          
      MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
        POINT TO:
          MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
          MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
          
    RHS:
    >> MDSet DETAIL:
    ld:*<8> 'p' attachinfo:Dbx,MDSSA
      MD5 -- base:Var58(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S (id:1)  *  p ' -- ofst:0 -- size:4
        POINT TO:
          MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
          MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
          
    ---------------------------------    

    [6]    return p->b; //S2
    
    return attachinfo:Dbx
        ild:i32:offset(4) attachinfo:Dbx,MDSSA            
            ld:*<8> 'p' attachinfo:Dbx,MDSSA
    
    ild:i32:offset(4) attachinfo:Dbx,MDSSA
      MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
        POINT TO:
          MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
          MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
          
      MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
        POINT TO:
          MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
          MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
          
    >> MDSet DETAIL:
    ild:i32:offset(4) attachinfo:Dbx,MDSSA
      MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
        POINT TO:
          MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
          MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
          
      MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
        POINT TO:
          MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
          MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
          
      ld:*<8> 'p' attachinfo:Dbx,MDSSA
        MD5 -- base:Var58(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S (id:1)  *  p ' -- ofst:0 -- size:4
          POINT TO:
            MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
            MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
            
==---- DUMP Alias Analysis 'foo' ----==
  ==---- DUMP ALL MD ----==
  MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD4 -- base:Var62(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
  MD5 -- base:Var58(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S (id:1)  *  p ' -- ofst:0 -- size:4
  MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo ()' -- ofst:unbound
  MD7 -- base:Var63(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  ==---- DUMP POINT-TO OUT-SET (FLOW SENSITIVE) 'foo' ----==
  --- BB3 ---
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- NO PT
  MD6 -- NO PT
  MD7 -- NO PT
  --- BB1 ---
  MD1 -- PT_SET: MD1,
  MD2 -- NO PT
  MD3 -- NO PT
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- NO PT
  MD7 -- NO PT
  -- DUMP WORSTCASE POINT-TO --
  MD2,MD3
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  -- DUMP IR POINT-TO FOR BB --

   -- BB3 --
    -- MD2MDSet: --
    MD1 -- PT_SET: MD1,
    MD2 -- PT_SET: MD2,MD3,
    MD3 -- PT_SET: MD2,MD3,
    MD4 -- NO PT
    MD5 -- NO PT
    MD6 -- NO PT
    MD7 -- NO PT

   -- BB1 --
    -- MD2MDSet: --
    MD1 -- PT_SET: MD1,
    MD2 -- NO PT
    MD3 -- NO PT
    MD4 -- NO PT
    MD5 -- PT_SET: MD2,MD3,
    MD6 -- NO PT
    MD7 -- NO PT

    -- IR POINT-TO: --
    ---------------------------------    

    [4]    p->a = 20; //S1
    
    ist:i32 attachinfo:Dbx,MDSSA        
        ld:*<8> 'p' base attachinfo:Dbx,MDSSA        
        intconst:i32 20|0x14 attachinfo:Dbx
    LHS:
    ist:i32 attachinfo:Dbx,MDSSA
      MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
        POINT TO:--
      MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
        POINT TO:--
    RHS:
    >> MDSet DETAIL:
    ld:*<8> 'p' attachinfo:Dbx,MDSSA
      MD5 -- base:Var58(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S (id:1)  *  p ' -- ofst:0 -- size:4
        POINT TO:
          MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
          MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
          
    ---------------------------------    

    [6]    return p->b; //S2
    
    return attachinfo:Dbx
        ild:i32:offset(4) attachinfo:Dbx,MDSSA            
            ld:*<8> 'p' attachinfo:Dbx,MDSSA
    
    ild:i32:offset(4) attachinfo:Dbx,MDSSA
      MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
        POINT TO:--
      MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
        POINT TO:--
    >> MDSet DETAIL:
    ild:i32:offset(4) attachinfo:Dbx,MDSSA
      MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
        POINT TO:--
      MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
        POINT TO:--
      ld:*<8> 'p' attachinfo:Dbx,MDSSA
        MD5 -- base:Var58(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S (id:1)  *  p ' -- ofst:0 -- size:4
          POINT TO:
            MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
            MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
            
==---- DUMP DU Manager 'foo' ----==

  ==---- DUMP DUMgr: IR REFERENCE 'foo' ----==
  
  ==---- DUMP ALL MD ----==
  MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD4 -- base:Var62(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
  MD5 -- base:Var58(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S (id:1)  *  p ' -- ofst:0 -- size:4
  MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo ()' -- ofst:unbound
  MD7 -- base:Var63(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  ==----==
  RegionMayDef(OuterRegion):MD2,MD3
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  RegionMayUse(OuterRegion):MD2,MD3,MD5
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD5 -- base:Var58(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S (id:1)  *  p ' -- ofst:0 -- size:4
  --- BB3 ---
  --- BB1 ---
      ist:i32 attachinfo:Dbx,MDSSA
       : MD2,MD3
        ld:*<8> 'p' attachinfo:Dbx,MDSSA
        EMD5 : MD2
      return attachinfo:Dbx
        ild:i32:offset(4) attachinfo:Dbx,MDSSA
         : MD2,MD3
          ld:*<8> 'p' attachinfo:Dbx,MDSSA
          EMD5 : MD2
==---- DUMP Alias Analysis '.program' ----==
  ==---- DUMP ALL MD ----==
  MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD4 -- base:Var62(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
  MD5 -- base:Var58(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S (id:1)  *  p ' -- ofst:0 -- size:4
  MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo ()' -- ofst:unbound
  MD7 -- base:Var63(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  ==---- DUMP POINT-TO OUT-SET (FLOW SENSITIVE) '.program' ----==
  --- BB3 ---
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- PT_SET: MD2,MD3,
  MD7 -- NO PT
  --- BB1 ---
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- PT_SET: MD2,MD3,
  MD7 -- NO PT
  -- DUMP WORSTCASE POINT-TO --
  MD2,MD3
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  -- DUMP IR POINT-TO FOR BB --

   -- BB3 --
    -- MD2MDSet: --
    MD1 -- PT_SET: MD1,
    MD2 -- PT_SET: MD2,MD3,
    MD3 -- PT_SET: MD2,MD3,
    MD4 -- NO PT
    MD5 -- PT_SET: MD2,MD3,
    MD6 -- PT_SET: MD2,MD3,
    MD7 -- NO PT

   -- BB1 --
    -- MD2MDSet: --
    MD1 -- PT_SET: MD1,
    MD2 -- PT_SET: MD2,MD3,
    MD3 -- PT_SET: MD2,MD3,
    MD4 -- NO PT
    MD5 -- PT_SET: MD2,MD3,
    MD6 -- PT_SET: MD2,MD3,
    MD7 -- NO PT

    -- IR POINT-TO: --
    ---------------------------------    
    region 'foo',id:2
    
==---- DUMP DU Manager '.program' ----==

  ==---- DUMP DUMgr: IR REFERENCE '.program' ----==
  
  ==---- DUMP ALL MD ----==
  MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD4 -- base:Var62(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
  MD5 -- base:Var58(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S (id:1)  *  p ' -- ofst:0 -- size:4
  MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo ()' -- ofst:unbound
  MD7 -- base:Var63(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  ==----==
  RegionMayDef(OuterRegion):
  RegionMayUse(OuterRegion):MD2,MD3
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  --- BB3 ---
  --- BB1 ---
      region 'foo',id:2
==---- DUMP DU Manager '.program' ----==

  ==---- DUMP DUMgr: IR REFERENCE '.program' ----==
  
  ==---- DUMP ALL MD ----==
  MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD4 -- base:Var62(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
  MD5 -- base:Var58(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S (id:1)  *  p ' -- ofst:0 -- size:4
  MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo ()' -- ofst:unbound
  MD7 -- base:Var63(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  ==----==
  RegionMayDef(OuterRegion):
  RegionMayUse(OuterRegion):MD2,MD3
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  --- BB3 ---
  --- BB1 ---
      region 'foo',id:2
==---- DUMP Alias Analysis '.program' ----==
  ==---- DUMP ALL MD ----==
  MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD4 -- base:Var62(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
  MD5 -- base:Var58(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S (id:1)  *  p ' -- ofst:0 -- size:4
  MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo ()' -- ofst:unbound
  MD7 -- base:Var63(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  ==---- DUMP POINT-TO OUT-SET (FLOW-INSENSITIVE) '.program' ----==
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- PT_SET: MD2,MD3,
  MD7 -- NO PT
  -- DUMP WORSTCASE POINT-TO --
  MD2,MD3
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  -- DUMP IR POINT-TO FOR BB --

   -- BB3 --
    -- MD2MDSet: --
    MD1 -- PT_SET: MD1,
    MD2 -- PT_SET: MD2,MD3,
    MD3 -- PT_SET: MD2,MD3,
    MD4 -- NO PT
    MD5 -- PT_SET: MD2,MD3,
    MD6 -- PT_SET: MD2,MD3,
    MD7 -- NO PT

   -- BB1 --
    -- MD2MDSet: --
    MD1 -- PT_SET: MD1,
    MD2 -- PT_SET: MD2,MD3,
    MD3 -- PT_SET: MD2,MD3,
    MD4 -- NO PT
    MD5 -- PT_SET: MD2,MD3,
    MD6 -- PT_SET: MD2,MD3,
    MD7 -- NO PT

    -- IR POINT-TO: --
    ---------------------------------    
    region 'foo',id:2
    
==---- DUMP Alias Analysis '.program' ----==
  ==---- DUMP ALL MD ----==
  MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD4 -- base:Var62(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
  MD5 -- base:Var58(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S (id:1)  *  p ' -- ofst:0 -- size:4
  MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo ()' -- ofst:unbound
  MD7 -- base:Var63(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  ==---- DUMP POINT-TO OUT-SET (FLOW SENSITIVE) '.program' ----==
  --- BB3 ---
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- PT_SET: MD2,MD3,
  MD7 -- NO PT
  --- BB1 ---
  MD1 -- PT_SET: MD1,
  MD2 -- PT_SET: MD2,MD3,
  MD3 -- PT_SET: MD2,MD3,
  MD4 -- NO PT
  MD5 -- PT_SET: MD2,MD3,
  MD6 -- PT_SET: MD2,MD3,
  MD7 -- NO PT
  -- DUMP WORSTCASE POINT-TO --
  MD2,MD3
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  -- DUMP IR POINT-TO FOR BB --

   -- BB3 --
    -- MD2MDSet: --
    MD1 -- PT_SET: MD1,
    MD2 -- PT_SET: MD2,MD3,
    MD3 -- PT_SET: MD2,MD3,
    MD4 -- NO PT
    MD5 -- PT_SET: MD2,MD3,
    MD6 -- PT_SET: MD2,MD3,
    MD7 -- NO PT

   -- BB1 --
    -- MD2MDSet: --
    MD1 -- PT_SET: MD1,
    MD2 -- PT_SET: MD2,MD3,
    MD3 -- PT_SET: MD2,MD3,
    MD4 -- NO PT
    MD5 -- PT_SET: MD2,MD3,
    MD6 -- PT_SET: MD2,MD3,
    MD7 -- NO PT

    -- IR POINT-TO: --
    ---------------------------------    
    region 'foo',id:2
    
==---- DUMP DU Manager '.program' ----==

  ==---- DUMP DUMgr: IR REFERENCE '.program' ----==
  
  ==---- DUMP ALL MD ----==
  MD1 -- base:Var1(.all_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD4 -- base:Var62(#DedicatedStringVar):global,,addr_taken,unallocable,align(4),string("DedicatedVarBeRegardedAsString"),str,str,mem_size:31,decl:'' -- ofst:unbound
  MD5 -- base:Var58(p):global,,addr_taken,align(4),pointer,pt_base_sz:8,*,mem_size:4,decl:'struct S (id:1)  *  p ' -- ofst:0 -- size:4
  MD6 -- base:Var59(foo):global,,addr_taken,func_decl,align(4),pointer,pt_base_sz:4,*,mem_size:4,decl:'int  foo ()' -- ofst:unbound
  MD7 -- base:Var63(.program):global,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  ==----==
  RegionMayDef(OuterRegion):
  RegionMayUse(OuterRegion):MD2,MD3
  MD2 -- base:Var2(.global_mem):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  MD3 -- base:Var3(.import_var):global,unallocable,fake,mc,mem_size:0,decl:'' -- ofst:unbound
  --- BB3 ---
  --- BB1 ---
      region 'foo',id:2